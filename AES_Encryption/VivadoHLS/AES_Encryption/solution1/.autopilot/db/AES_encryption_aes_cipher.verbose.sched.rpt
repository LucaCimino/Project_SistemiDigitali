

================================================================
== Vivado HLS Report for 'AES_encryption_aes_cipher'
================================================================
* Date:           Fri Feb 09 10:18:49 2024

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        AES_Encryption
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      6.47|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  2111|  2651|  2111|  2651|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+-----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration |  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency  |  achieved |   target  | Count| Pipelined|
        +----------+------+------+-----------+-----------+-----------+------+----------+
        |- Loop 1  |    12|    12|          3|          -|          -|     4|    no    |
        |- Loop 2  |  1953|  2439| 217 ~ 271 |          -|          -|     9|    no    |
        |- Loop 3  |    12|    12|          3|          -|          -|     4|    no    |
        +----------+------+------+-----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 21
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond4)
	5  / (exitcond4)
3 --> 
	4  / true
4 --> 
	2  / true
5 --> 
	6  / true
6 --> 
	7  / (!exitcond2)
	14  / (exitcond2)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	6  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / (!exitcond1)
20 --> 
	21  / true
21 --> 
	19  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: state [1/1] 0.00ns
:0  %state = alloca [16 x i8], align 16

ST_1: stg_23 [1/1] 1.57ns
:1  br label %1


 <State 2>: 3.76ns
ST_2: i [1/1] 0.00ns
:0  %i = phi i3 [ 0, %0 ], [ %i_7, %.preheader5.preheader ]

ST_2: exitcond4 [1/1] 1.62ns
:1  %exitcond4 = icmp eq i3 %i, -4

ST_2: empty [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)

ST_2: i_7 [1/1] 0.80ns
:3  %i_7 = add i3 %i, 1

ST_2: stg_28 [1/1] 0.00ns
:4  br i1 %exitcond4, label %2, label %.preheader5.preheader

ST_2: tmp_31 [1/1] 0.00ns
.preheader5.preheader:2  %tmp_31 = zext i3 %i to i64

ST_2: in_addr [1/1] 0.00ns
.preheader5.preheader:3  %in_addr = getelementptr [16 x i8]* %in_r, i64 0, i64 %tmp_31

ST_2: in_load [2/2] 2.39ns
.preheader5.preheader:4  %in_load = load i8* %in_addr, align 1

ST_2: tmp_98_1 [1/1] 1.37ns
.preheader5.preheader:8  %tmp_98_1 = xor i3 %i, -4

ST_2: tmp_99_1 [1/1] 0.00ns
.preheader5.preheader:9  %tmp_99_1 = zext i3 %tmp_98_1 to i64

ST_2: in_addr_1 [1/1] 0.00ns
.preheader5.preheader:10  %in_addr_1 = getelementptr [16 x i8]* %in_r, i64 0, i64 %tmp_99_1

ST_2: in_load_1 [2/2] 2.39ns
.preheader5.preheader:11  %in_load_1 = load i8* %in_addr_1, align 1

ST_2: stg_36 [2/2] 1.04ns
:0  call fastcc void @AES_encryption_add_round_key([16 x i8]* %state, [176 x i8]* %w, i6 zeroext 0)


 <State 3>: 4.78ns
ST_3: tmp [1/1] 0.00ns
.preheader5.preheader:0  %tmp = trunc i3 %i to i2

ST_3: tmp_s [1/1] 0.00ns
.preheader5.preheader:1  %tmp_s = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %tmp, i2 0)

ST_3: in_load [1/2] 2.39ns
.preheader5.preheader:4  %in_load = load i8* %in_addr, align 1

ST_3: tmp_32 [1/1] 0.00ns
.preheader5.preheader:5  %tmp_32 = zext i4 %tmp_s to i64

ST_3: state_addr [1/1] 0.00ns
.preheader5.preheader:6  %state_addr = getelementptr inbounds [16 x i8]* %state, i64 0, i64 %tmp_32

ST_3: stg_42 [1/1] 2.39ns
.preheader5.preheader:7  store i8 %in_load, i8* %state_addr, align 4

ST_3: in_load_1 [1/2] 2.39ns
.preheader5.preheader:11  %in_load_1 = load i8* %in_addr_1, align 1

ST_3: tmp_100_s [1/1] 0.00ns
.preheader5.preheader:12  %tmp_100_s = or i4 %tmp_s, 1

ST_3: tmp_101_1 [1/1] 0.00ns
.preheader5.preheader:13  %tmp_101_1 = zext i4 %tmp_100_s to i64

ST_3: state_addr_5 [1/1] 0.00ns
.preheader5.preheader:14  %state_addr_5 = getelementptr inbounds [16 x i8]* %state, i64 0, i64 %tmp_101_1

ST_3: stg_47 [1/1] 2.39ns
.preheader5.preheader:15  store i8 %in_load_1, i8* %state_addr_5, align 1

ST_3: tmp_98_s [1/1] 0.00ns
.preheader5.preheader:16  %tmp_98_s = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 true, i3 %i)

ST_3: tmp_99_2 [1/1] 0.00ns
.preheader5.preheader:17  %tmp_99_2 = zext i4 %tmp_98_s to i64

ST_3: in_addr_2 [1/1] 0.00ns
.preheader5.preheader:18  %in_addr_2 = getelementptr [16 x i8]* %in_r, i64 0, i64 %tmp_99_2

ST_3: in_load_2 [2/2] 2.39ns
.preheader5.preheader:19  %in_load_2 = load i8* %in_addr_2, align 1

ST_3: tmp_98_3_cast7 [1/1] 0.00ns
.preheader5.preheader:24  %tmp_98_3_cast7 = sext i3 %tmp_98_1 to i4

ST_3: tmp_99_3 [1/1] 0.00ns
.preheader5.preheader:25  %tmp_99_3 = zext i4 %tmp_98_3_cast7 to i64

ST_3: in_addr_3 [1/1] 0.00ns
.preheader5.preheader:26  %in_addr_3 = getelementptr [16 x i8]* %in_r, i64 0, i64 %tmp_99_3

ST_3: in_load_3 [2/2] 2.39ns
.preheader5.preheader:27  %in_load_3 = load i8* %in_addr_3, align 1


 <State 4>: 4.78ns
ST_4: in_load_2 [1/2] 2.39ns
.preheader5.preheader:19  %in_load_2 = load i8* %in_addr_2, align 1

ST_4: tmp_100_1 [1/1] 0.00ns
.preheader5.preheader:20  %tmp_100_1 = or i4 %tmp_s, 2

ST_4: tmp_101_2 [1/1] 0.00ns
.preheader5.preheader:21  %tmp_101_2 = zext i4 %tmp_100_1 to i64

ST_4: state_addr_6 [1/1] 0.00ns
.preheader5.preheader:22  %state_addr_6 = getelementptr inbounds [16 x i8]* %state, i64 0, i64 %tmp_101_2

ST_4: stg_60 [1/1] 2.39ns
.preheader5.preheader:23  store i8 %in_load_2, i8* %state_addr_6, align 2

ST_4: in_load_3 [1/2] 2.39ns
.preheader5.preheader:27  %in_load_3 = load i8* %in_addr_3, align 1

ST_4: tmp_100_2 [1/1] 0.00ns
.preheader5.preheader:28  %tmp_100_2 = or i4 %tmp_s, 3

ST_4: tmp_101_3 [1/1] 0.00ns
.preheader5.preheader:29  %tmp_101_3 = zext i4 %tmp_100_2 to i64

ST_4: state_addr_7 [1/1] 0.00ns
.preheader5.preheader:30  %state_addr_7 = getelementptr inbounds [16 x i8]* %state, i64 0, i64 %tmp_101_3

ST_4: stg_65 [1/1] 2.39ns
.preheader5.preheader:31  store i8 %in_load_3, i8* %state_addr_7, align 1

ST_4: stg_66 [1/1] 0.00ns
.preheader5.preheader:32  br label %1


 <State 5>: 1.57ns
ST_5: stg_67 [1/2] 0.00ns
:0  call fastcc void @AES_encryption_add_round_key([16 x i8]* %state, [176 x i8]* %w, i6 zeroext 0)

ST_5: stg_68 [1/1] 1.57ns
:1  br label %3


 <State 6>: 1.88ns
ST_6: r [1/1] 0.00ns
:0  %r = phi i4 [ 1, %2 ], [ %r_1, %4 ]

ST_6: exitcond2 [1/1] 1.88ns
:1  %exitcond2 = icmp eq i4 %r, -6

ST_6: empty_22 [1/1] 0.00ns
:2  %empty_22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)

ST_6: stg_72 [1/1] 0.00ns
:3  br i1 %exitcond2, label %5, label %4

ST_6: stg_73 [2/2] 0.00ns
:0  call fastcc void @AES_encryption_sub_bytes([16 x i8]* %state)

ST_6: stg_74 [2/2] 0.00ns
:0  call fastcc void @AES_encryption_sub_bytes([16 x i8]* %state)


 <State 7>: 0.00ns
ST_7: stg_75 [1/2] 0.00ns
:0  call fastcc void @AES_encryption_sub_bytes([16 x i8]* %state)


 <State 8>: 0.00ns
ST_8: stg_76 [2/2] 0.00ns
:1  call fastcc void @AES_encryption_shift_rows([16 x i8]* %state)


 <State 9>: 0.00ns
ST_9: stg_77 [1/2] 0.00ns
:1  call fastcc void @AES_encryption_shift_rows([16 x i8]* %state)


 <State 10>: 0.00ns
ST_10: stg_78 [2/2] 0.00ns
:2  call fastcc void @AES_encryption_mix_columns([16 x i8]* %state)


 <State 11>: 0.00ns
ST_11: stg_79 [1/2] 0.00ns
:2  call fastcc void @AES_encryption_mix_columns([16 x i8]* %state)


 <State 12>: 1.04ns
ST_12: r_cast3_cast [1/1] 0.00ns
:3  %r_cast3_cast = zext i4 %r to i6

ST_12: stg_81 [2/2] 1.04ns
:4  call fastcc void @AES_encryption_add_round_key([16 x i8]* %state, [176 x i8]* %w, i6 zeroext %r_cast3_cast)

ST_12: r_1 [1/1] 0.80ns
:5  %r_1 = add i4 %r, 1


 <State 13>: 0.00ns
ST_13: stg_83 [1/2] 0.00ns
:4  call fastcc void @AES_encryption_add_round_key([16 x i8]* %state, [176 x i8]* %w, i6 zeroext %r_cast3_cast)

ST_13: stg_84 [1/1] 0.00ns
:6  br label %3


 <State 14>: 0.00ns
ST_14: stg_85 [1/2] 0.00ns
:0  call fastcc void @AES_encryption_sub_bytes([16 x i8]* %state)


 <State 15>: 0.00ns
ST_15: stg_86 [2/2] 0.00ns
:1  call fastcc void @AES_encryption_shift_rows([16 x i8]* %state)


 <State 16>: 0.00ns
ST_16: stg_87 [1/2] 0.00ns
:1  call fastcc void @AES_encryption_shift_rows([16 x i8]* %state)


 <State 17>: 1.04ns
ST_17: stg_88 [2/2] 1.04ns
:2  call fastcc void @AES_encryption_add_round_key([16 x i8]* %state, [176 x i8]* %w, i6 zeroext 10)


 <State 18>: 1.57ns
ST_18: stg_89 [1/2] 0.00ns
:2  call fastcc void @AES_encryption_add_round_key([16 x i8]* %state, [176 x i8]* %w, i6 zeroext 10)

ST_18: stg_90 [1/1] 1.57ns
:3  br label %6


 <State 19>: 2.39ns
ST_19: i_1 [1/1] 0.00ns
:0  %i_1 = phi i3 [ 0, %5 ], [ %i_8, %.preheader.preheader ]

ST_19: exitcond1 [1/1] 1.62ns
:1  %exitcond1 = icmp eq i3 %i_1, -4

ST_19: empty_23 [1/1] 0.00ns
:2  %empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)

ST_19: i_8 [1/1] 0.80ns
:3  %i_8 = add i3 %i_1, 1

ST_19: stg_95 [1/1] 0.00ns
:4  br i1 %exitcond1, label %7, label %.preheader.preheader

ST_19: tmp_45 [1/1] 0.00ns
.preheader.preheader:0  %tmp_45 = trunc i3 %i_1 to i2

ST_19: tmp_33 [1/1] 0.00ns
.preheader.preheader:1  %tmp_33 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %tmp_45, i2 0)

ST_19: tmp_34 [1/1] 0.00ns
.preheader.preheader:2  %tmp_34 = zext i4 %tmp_33 to i64

ST_19: state_addr_8 [1/1] 0.00ns
.preheader.preheader:3  %state_addr_8 = getelementptr inbounds [16 x i8]* %state, i64 0, i64 %tmp_34

ST_19: state_load [2/2] 2.39ns
.preheader.preheader:4  %state_load = load i8* %state_addr_8, align 4

ST_19: tmp_105_s [1/1] 0.00ns
.preheader.preheader:8  %tmp_105_s = or i4 %tmp_33, 1

ST_19: tmp_106_1 [1/1] 0.00ns
.preheader.preheader:9  %tmp_106_1 = zext i4 %tmp_105_s to i64

ST_19: state_addr_9 [1/1] 0.00ns
.preheader.preheader:10  %state_addr_9 = getelementptr inbounds [16 x i8]* %state, i64 0, i64 %tmp_106_1

ST_19: state_load_1 [2/2] 2.39ns
.preheader.preheader:11  %state_load_1 = load i8* %state_addr_9, align 1

ST_19: stg_105 [1/1] 0.00ns
:0  ret void


 <State 20>: 4.78ns
ST_20: state_load [1/2] 2.39ns
.preheader.preheader:4  %state_load = load i8* %state_addr_8, align 4

ST_20: tmp_35 [1/1] 0.00ns
.preheader.preheader:5  %tmp_35 = zext i3 %i_1 to i64

ST_20: out_addr [1/1] 0.00ns
.preheader.preheader:6  %out_addr = getelementptr [16 x i8]* %out_r, i64 0, i64 %tmp_35

ST_20: stg_109 [1/1] 2.39ns
.preheader.preheader:7  store i8 %state_load, i8* %out_addr, align 1

ST_20: state_load_1 [1/2] 2.39ns
.preheader.preheader:11  %state_load_1 = load i8* %state_addr_9, align 1

ST_20: tmp_108_1 [1/1] 1.37ns
.preheader.preheader:12  %tmp_108_1 = xor i3 %i_1, -4

ST_20: tmp_109_1 [1/1] 0.00ns
.preheader.preheader:13  %tmp_109_1 = zext i3 %tmp_108_1 to i64

ST_20: out_addr_1 [1/1] 0.00ns
.preheader.preheader:14  %out_addr_1 = getelementptr [16 x i8]* %out_r, i64 0, i64 %tmp_109_1

ST_20: stg_114 [1/1] 2.39ns
.preheader.preheader:15  store i8 %state_load_1, i8* %out_addr_1, align 1

ST_20: tmp_105_1 [1/1] 0.00ns
.preheader.preheader:16  %tmp_105_1 = or i4 %tmp_33, 2

ST_20: tmp_106_2 [1/1] 0.00ns
.preheader.preheader:17  %tmp_106_2 = zext i4 %tmp_105_1 to i64

ST_20: state_addr_10 [1/1] 0.00ns
.preheader.preheader:18  %state_addr_10 = getelementptr inbounds [16 x i8]* %state, i64 0, i64 %tmp_106_2

ST_20: state_load_2 [2/2] 2.39ns
.preheader.preheader:19  %state_load_2 = load i8* %state_addr_10, align 2

ST_20: tmp_105_2 [1/1] 0.00ns
.preheader.preheader:24  %tmp_105_2 = or i4 %tmp_33, 3

ST_20: tmp_106_3 [1/1] 0.00ns
.preheader.preheader:25  %tmp_106_3 = zext i4 %tmp_105_2 to i64

ST_20: state_addr_11 [1/1] 0.00ns
.preheader.preheader:26  %state_addr_11 = getelementptr inbounds [16 x i8]* %state, i64 0, i64 %tmp_106_3

ST_20: state_load_3 [2/2] 2.39ns
.preheader.preheader:27  %state_load_3 = load i8* %state_addr_11, align 1


 <State 21>: 4.78ns
ST_21: state_load_2 [1/2] 2.39ns
.preheader.preheader:19  %state_load_2 = load i8* %state_addr_10, align 2

ST_21: tmp_108_s [1/1] 0.00ns
.preheader.preheader:20  %tmp_108_s = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 true, i3 %i_1)

ST_21: tmp_109_2 [1/1] 0.00ns
.preheader.preheader:21  %tmp_109_2 = zext i4 %tmp_108_s to i64

ST_21: out_addr_2 [1/1] 0.00ns
.preheader.preheader:22  %out_addr_2 = getelementptr [16 x i8]* %out_r, i64 0, i64 %tmp_109_2

ST_21: stg_127 [1/1] 2.39ns
.preheader.preheader:23  store i8 %state_load_2, i8* %out_addr_2, align 1

ST_21: state_load_3 [1/2] 2.39ns
.preheader.preheader:27  %state_load_3 = load i8* %state_addr_11, align 1

ST_21: tmp_108_3_cast6 [1/1] 0.00ns
.preheader.preheader:28  %tmp_108_3_cast6 = sext i3 %tmp_108_1 to i4

ST_21: tmp_109_3 [1/1] 0.00ns
.preheader.preheader:29  %tmp_109_3 = zext i4 %tmp_108_3_cast6 to i64

ST_21: out_addr_3 [1/1] 0.00ns
.preheader.preheader:30  %out_addr_3 = getelementptr [16 x i8]* %out_r, i64 0, i64 %tmp_109_3

ST_21: stg_132 [1/1] 2.39ns
.preheader.preheader:31  store i8 %state_load_3, i8* %out_addr_3, align 1

ST_21: stg_133 [1/1] 0.00ns
.preheader.preheader:32  br label %6



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

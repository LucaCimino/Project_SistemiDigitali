

================================================================
== Vivado HLS Report for 'single_block_AES_encrypt_aes_cipher'
================================================================
* Date:           Thu Feb 08 12:12:18 2024

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        AES_Encryption
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     12.35|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   98|   98|   99|   99| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 99, depth = 99


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 99
* Pipeline: 1
  Pipeline-0: II = 99, D = 99, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
* FSM state operations: 

 <State 1>: 2.41ns
ST_1: in_15_read_1 [1/1] 0.00ns
.preheader5.preheader.0:0  %in_15_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_15_read)

ST_1: in_14_read_1 [1/1] 0.00ns
.preheader5.preheader.0:1  %in_14_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_14_read)

ST_1: in_13_read_1 [1/1] 0.00ns
.preheader5.preheader.0:2  %in_13_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_13_read)

ST_1: in_12_read_1 [1/1] 0.00ns
.preheader5.preheader.0:3  %in_12_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_12_read)

ST_1: in_11_read_1 [1/1] 0.00ns
.preheader5.preheader.0:4  %in_11_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_11_read)

ST_1: in_10_read_1 [1/1] 0.00ns
.preheader5.preheader.0:5  %in_10_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_10_read)

ST_1: in_9_read_1 [1/1] 0.00ns
.preheader5.preheader.0:6  %in_9_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_9_read)

ST_1: in_8_read_1 [1/1] 0.00ns
.preheader5.preheader.0:7  %in_8_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_8_read)

ST_1: in_7_read_1 [1/1] 0.00ns
.preheader5.preheader.0:8  %in_7_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_7_read)

ST_1: in_6_read_1 [1/1] 0.00ns
.preheader5.preheader.0:9  %in_6_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_6_read)

ST_1: in_5_read_1 [1/1] 0.00ns
.preheader5.preheader.0:10  %in_5_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_5_read)

ST_1: in_4_read_1 [1/1] 0.00ns
.preheader5.preheader.0:11  %in_4_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_4_read)

ST_1: in_3_read_1 [1/1] 0.00ns
.preheader5.preheader.0:12  %in_3_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_3_read)

ST_1: in_2_read_1 [1/1] 0.00ns
.preheader5.preheader.0:13  %in_2_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_2_read)

ST_1: in_1_read_1 [1/1] 0.00ns
.preheader5.preheader.0:14  %in_1_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_1_read)

ST_1: in_0_read_1 [1/1] 0.00ns
.preheader5.preheader.0:15  %in_0_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_0_read)

ST_1: call_ret5 [9/9] 2.41ns
.preheader5.preheader.0:16  %call_ret5 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %in_0_read_1, i8 %in_4_read_1, i8 %in_8_read_1, i8 %in_12_read_1, i8 %in_1_read_1, i8 %in_5_read_1, i8 %in_9_read_1, i8 %in_13_read_1, i8 %in_2_read_1, i8 %in_6_read_1, i8 %in_10_read_1, i8 %in_14_read_1, i8 %in_3_read_1, i8 %in_7_read_1, i8 %in_11_read_1, i8 %in_15_read_1, [176 x i8]* %w, i5 0)


 <State 2>: 4.08ns
ST_2: call_ret5 [8/9] 4.08ns
.preheader5.preheader.0:16  %call_ret5 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %in_0_read_1, i8 %in_4_read_1, i8 %in_8_read_1, i8 %in_12_read_1, i8 %in_1_read_1, i8 %in_5_read_1, i8 %in_9_read_1, i8 %in_13_read_1, i8 %in_2_read_1, i8 %in_6_read_1, i8 %in_10_read_1, i8 %in_14_read_1, i8 %in_3_read_1, i8 %in_7_read_1, i8 %in_11_read_1, i8 %in_15_read_1, [176 x i8]* %w, i5 0)


 <State 3>: 4.08ns
ST_3: call_ret5 [7/9] 4.08ns
.preheader5.preheader.0:16  %call_ret5 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %in_0_read_1, i8 %in_4_read_1, i8 %in_8_read_1, i8 %in_12_read_1, i8 %in_1_read_1, i8 %in_5_read_1, i8 %in_9_read_1, i8 %in_13_read_1, i8 %in_2_read_1, i8 %in_6_read_1, i8 %in_10_read_1, i8 %in_14_read_1, i8 %in_3_read_1, i8 %in_7_read_1, i8 %in_11_read_1, i8 %in_15_read_1, [176 x i8]* %w, i5 0)


 <State 4>: 4.08ns
ST_4: call_ret5 [6/9] 4.08ns
.preheader5.preheader.0:16  %call_ret5 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %in_0_read_1, i8 %in_4_read_1, i8 %in_8_read_1, i8 %in_12_read_1, i8 %in_1_read_1, i8 %in_5_read_1, i8 %in_9_read_1, i8 %in_13_read_1, i8 %in_2_read_1, i8 %in_6_read_1, i8 %in_10_read_1, i8 %in_14_read_1, i8 %in_3_read_1, i8 %in_7_read_1, i8 %in_11_read_1, i8 %in_15_read_1, [176 x i8]* %w, i5 0)


 <State 5>: 4.08ns
ST_5: call_ret5 [5/9] 4.08ns
.preheader5.preheader.0:16  %call_ret5 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %in_0_read_1, i8 %in_4_read_1, i8 %in_8_read_1, i8 %in_12_read_1, i8 %in_1_read_1, i8 %in_5_read_1, i8 %in_9_read_1, i8 %in_13_read_1, i8 %in_2_read_1, i8 %in_6_read_1, i8 %in_10_read_1, i8 %in_14_read_1, i8 %in_3_read_1, i8 %in_7_read_1, i8 %in_11_read_1, i8 %in_15_read_1, [176 x i8]* %w, i5 0)


 <State 6>: 4.08ns
ST_6: call_ret5 [4/9] 4.08ns
.preheader5.preheader.0:16  %call_ret5 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %in_0_read_1, i8 %in_4_read_1, i8 %in_8_read_1, i8 %in_12_read_1, i8 %in_1_read_1, i8 %in_5_read_1, i8 %in_9_read_1, i8 %in_13_read_1, i8 %in_2_read_1, i8 %in_6_read_1, i8 %in_10_read_1, i8 %in_14_read_1, i8 %in_3_read_1, i8 %in_7_read_1, i8 %in_11_read_1, i8 %in_15_read_1, [176 x i8]* %w, i5 0)


 <State 7>: 4.08ns
ST_7: call_ret5 [3/9] 4.08ns
.preheader5.preheader.0:16  %call_ret5 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %in_0_read_1, i8 %in_4_read_1, i8 %in_8_read_1, i8 %in_12_read_1, i8 %in_1_read_1, i8 %in_5_read_1, i8 %in_9_read_1, i8 %in_13_read_1, i8 %in_2_read_1, i8 %in_6_read_1, i8 %in_10_read_1, i8 %in_14_read_1, i8 %in_3_read_1, i8 %in_7_read_1, i8 %in_11_read_1, i8 %in_15_read_1, [176 x i8]* %w, i5 0)


 <State 8>: 4.08ns
ST_8: call_ret5 [2/9] 4.08ns
.preheader5.preheader.0:16  %call_ret5 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %in_0_read_1, i8 %in_4_read_1, i8 %in_8_read_1, i8 %in_12_read_1, i8 %in_1_read_1, i8 %in_5_read_1, i8 %in_9_read_1, i8 %in_13_read_1, i8 %in_2_read_1, i8 %in_6_read_1, i8 %in_10_read_1, i8 %in_14_read_1, i8 %in_3_read_1, i8 %in_7_read_1, i8 %in_11_read_1, i8 %in_15_read_1, [176 x i8]* %w, i5 0)


 <State 9>: 5.12ns
ST_9: call_ret5 [1/9] 4.08ns
.preheader5.preheader.0:16  %call_ret5 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %in_0_read_1, i8 %in_4_read_1, i8 %in_8_read_1, i8 %in_12_read_1, i8 %in_1_read_1, i8 %in_5_read_1, i8 %in_9_read_1, i8 %in_13_read_1, i8 %in_2_read_1, i8 %in_6_read_1, i8 %in_10_read_1, i8 %in_14_read_1, i8 %in_3_read_1, i8 %in_7_read_1, i8 %in_11_read_1, i8 %in_15_read_1, [176 x i8]* %w, i5 0)

ST_9: state_0 [1/1] 0.00ns
.preheader5.preheader.0:17  %state_0 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 0

ST_9: state_1 [1/1] 0.00ns
.preheader5.preheader.0:18  %state_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 1

ST_9: state_2 [1/1] 0.00ns
.preheader5.preheader.0:19  %state_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 2

ST_9: state_3 [1/1] 0.00ns
.preheader5.preheader.0:20  %state_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 3

ST_9: state_4 [1/1] 0.00ns
.preheader5.preheader.0:21  %state_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 4

ST_9: state_5 [1/1] 0.00ns
.preheader5.preheader.0:22  %state_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 5

ST_9: state_6 [1/1] 0.00ns
.preheader5.preheader.0:23  %state_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 6

ST_9: state_7 [1/1] 0.00ns
.preheader5.preheader.0:24  %state_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 7

ST_9: state_8 [1/1] 0.00ns
.preheader5.preheader.0:25  %state_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 8

ST_9: state_9 [1/1] 0.00ns
.preheader5.preheader.0:26  %state_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 9

ST_9: state_10 [1/1] 0.00ns
.preheader5.preheader.0:27  %state_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 10

ST_9: state_11 [1/1] 0.00ns
.preheader5.preheader.0:28  %state_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 11

ST_9: state_12 [1/1] 0.00ns
.preheader5.preheader.0:29  %state_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 12

ST_9: state_13 [1/1] 0.00ns
.preheader5.preheader.0:30  %state_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 13

ST_9: state_14 [1/1] 0.00ns
.preheader5.preheader.0:31  %state_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 14

ST_9: state_15 [1/1] 0.00ns
.preheader5.preheader.0:32  %state_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret5, 15

ST_9: call_ret6 [2/2] 1.04ns
.preheader5.preheader.0:33  %call_ret6 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0, i8 %state_1, i8 %state_2, i8 %state_3, i8 %state_4, i8 %state_5, i8 %state_6, i8 %state_7, i8 %state_8, i8 %state_9, i8 %state_10, i8 %state_11, i8 %state_12, i8 %state_13, i8 %state_14, i8 %state_15)


 <State 10>: 12.35ns
ST_10: call_ret6 [1/2] 2.39ns
.preheader5.preheader.0:33  %call_ret6 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0, i8 %state_1, i8 %state_2, i8 %state_3, i8 %state_4, i8 %state_5, i8 %state_6, i8 %state_7, i8 %state_8, i8 %state_9, i8 %state_10, i8 %state_11, i8 %state_12, i8 %state_13, i8 %state_14, i8 %state_15)

ST_10: state_0_1 [1/1] 0.00ns
.preheader5.preheader.0:34  %state_0_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 0

ST_10: state_1_1 [1/1] 0.00ns
.preheader5.preheader.0:35  %state_1_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 1

ST_10: state_2_1 [1/1] 0.00ns
.preheader5.preheader.0:36  %state_2_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 2

ST_10: state_3_1 [1/1] 0.00ns
.preheader5.preheader.0:37  %state_3_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 3

ST_10: state_4_1 [1/1] 0.00ns
.preheader5.preheader.0:38  %state_4_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 4

ST_10: state_5_1 [1/1] 0.00ns
.preheader5.preheader.0:39  %state_5_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 5

ST_10: state_6_1 [1/1] 0.00ns
.preheader5.preheader.0:40  %state_6_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 6

ST_10: state_7_1 [1/1] 0.00ns
.preheader5.preheader.0:41  %state_7_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 7

ST_10: state_8_1 [1/1] 0.00ns
.preheader5.preheader.0:42  %state_8_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 8

ST_10: state_9_1 [1/1] 0.00ns
.preheader5.preheader.0:43  %state_9_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 9

ST_10: state_10_1 [1/1] 0.00ns
.preheader5.preheader.0:44  %state_10_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 10

ST_10: state_11_1 [1/1] 0.00ns
.preheader5.preheader.0:45  %state_11_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 11

ST_10: state_12_1 [1/1] 0.00ns
.preheader5.preheader.0:46  %state_12_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 12

ST_10: state_13_1 [1/1] 0.00ns
.preheader5.preheader.0:47  %state_13_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 13

ST_10: state_14_1 [1/1] 0.00ns
.preheader5.preheader.0:48  %state_14_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 14

ST_10: state_15_1 [1/1] 0.00ns
.preheader5.preheader.0:49  %state_15_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret6, 15

ST_10: call_ret7 [1/1] 1.04ns
.preheader5.preheader.0:50  %call_ret7 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_shift_rows(i8 %state_4_1, i8 %state_5_1, i8 %state_6_1, i8 %state_7_1, i8 %state_8_1, i8 %state_9_1, i8 %state_10_1, i8 %state_11_1, i8 %state_12_1, i8 %state_13_1, i8 %state_14_1, i8 %state_15_1)

ST_10: state_4_2 [1/1] 0.00ns
.preheader5.preheader.0:51  %state_4_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret7, 0

ST_10: state_5_2 [1/1] 0.00ns
.preheader5.preheader.0:52  %state_5_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret7, 1

ST_10: state_6_2 [1/1] 0.00ns
.preheader5.preheader.0:53  %state_6_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret7, 2

ST_10: state_7_2 [1/1] 0.00ns
.preheader5.preheader.0:54  %state_7_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret7, 3

ST_10: state_8_2 [1/1] 0.00ns
.preheader5.preheader.0:55  %state_8_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret7, 4

ST_10: state_9_2 [1/1] 0.00ns
.preheader5.preheader.0:56  %state_9_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret7, 5

ST_10: state_10_2 [1/1] 0.00ns
.preheader5.preheader.0:57  %state_10_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret7, 6

ST_10: state_11_2 [1/1] 0.00ns
.preheader5.preheader.0:58  %state_11_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret7, 7

ST_10: state_12_2 [1/1] 0.00ns
.preheader5.preheader.0:59  %state_12_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret7, 8

ST_10: state_13_2 [1/1] 0.00ns
.preheader5.preheader.0:60  %state_13_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret7, 9

ST_10: state_14_2 [1/1] 0.00ns
.preheader5.preheader.0:61  %state_14_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret7, 10

ST_10: state_15_2 [1/1] 0.00ns
.preheader5.preheader.0:62  %state_15_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret7, 11

ST_10: call_ret8 [1/1] 6.52ns
.preheader5.preheader.0:63  %call_ret8 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_mix_columns(i8 %state_0_1, i8 %state_1_1, i8 %state_2_1, i8 %state_3_1, i8 %state_4_2, i8 %state_5_2, i8 %state_6_2, i8 %state_7_2, i8 %state_8_2, i8 %state_9_2, i8 %state_10_2, i8 %state_11_2, i8 %state_12_2, i8 %state_13_2, i8 %state_14_2, i8 %state_15_2)

ST_10: state_0_2 [1/1] 0.00ns
.preheader5.preheader.0:64  %state_0_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 0

ST_10: state_1_2 [1/1] 0.00ns
.preheader5.preheader.0:65  %state_1_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 1

ST_10: state_2_2 [1/1] 0.00ns
.preheader5.preheader.0:66  %state_2_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 2

ST_10: state_3_2 [1/1] 0.00ns
.preheader5.preheader.0:67  %state_3_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 3

ST_10: state_4_3 [1/1] 0.00ns
.preheader5.preheader.0:68  %state_4_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 4

ST_10: state_5_3 [1/1] 0.00ns
.preheader5.preheader.0:69  %state_5_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 5

ST_10: state_6_3 [1/1] 0.00ns
.preheader5.preheader.0:70  %state_6_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 6

ST_10: state_7_3 [1/1] 0.00ns
.preheader5.preheader.0:71  %state_7_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 7

ST_10: state_8_3 [1/1] 0.00ns
.preheader5.preheader.0:72  %state_8_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 8

ST_10: state_9_3 [1/1] 0.00ns
.preheader5.preheader.0:73  %state_9_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 9

ST_10: state_10_3 [1/1] 0.00ns
.preheader5.preheader.0:74  %state_10_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 10

ST_10: state_11_3 [1/1] 0.00ns
.preheader5.preheader.0:75  %state_11_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 11

ST_10: state_12_3 [1/1] 0.00ns
.preheader5.preheader.0:76  %state_12_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 12

ST_10: state_13_3 [1/1] 0.00ns
.preheader5.preheader.0:77  %state_13_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 13

ST_10: state_14_3 [1/1] 0.00ns
.preheader5.preheader.0:78  %state_14_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 14

ST_10: state_15_3 [1/1] 0.00ns
.preheader5.preheader.0:79  %state_15_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 15

ST_10: call_ret9 [9/9] 2.41ns
.preheader5.preheader.0:80  %call_ret9 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_2, i8 %state_1_2, i8 %state_2_2, i8 %state_3_2, i8 %state_4_3, i8 %state_5_3, i8 %state_6_3, i8 %state_7_3, i8 %state_8_3, i8 %state_9_3, i8 %state_10_3, i8 %state_11_3, i8 %state_12_3, i8 %state_13_3, i8 %state_14_3, i8 %state_15_3, [176 x i8]* %w, i5 1)


 <State 11>: 4.08ns
ST_11: call_ret9 [8/9] 4.08ns
.preheader5.preheader.0:80  %call_ret9 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_2, i8 %state_1_2, i8 %state_2_2, i8 %state_3_2, i8 %state_4_3, i8 %state_5_3, i8 %state_6_3, i8 %state_7_3, i8 %state_8_3, i8 %state_9_3, i8 %state_10_3, i8 %state_11_3, i8 %state_12_3, i8 %state_13_3, i8 %state_14_3, i8 %state_15_3, [176 x i8]* %w, i5 1)


 <State 12>: 4.08ns
ST_12: call_ret9 [7/9] 4.08ns
.preheader5.preheader.0:80  %call_ret9 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_2, i8 %state_1_2, i8 %state_2_2, i8 %state_3_2, i8 %state_4_3, i8 %state_5_3, i8 %state_6_3, i8 %state_7_3, i8 %state_8_3, i8 %state_9_3, i8 %state_10_3, i8 %state_11_3, i8 %state_12_3, i8 %state_13_3, i8 %state_14_3, i8 %state_15_3, [176 x i8]* %w, i5 1)


 <State 13>: 4.08ns
ST_13: call_ret9 [6/9] 4.08ns
.preheader5.preheader.0:80  %call_ret9 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_2, i8 %state_1_2, i8 %state_2_2, i8 %state_3_2, i8 %state_4_3, i8 %state_5_3, i8 %state_6_3, i8 %state_7_3, i8 %state_8_3, i8 %state_9_3, i8 %state_10_3, i8 %state_11_3, i8 %state_12_3, i8 %state_13_3, i8 %state_14_3, i8 %state_15_3, [176 x i8]* %w, i5 1)


 <State 14>: 4.08ns
ST_14: call_ret9 [5/9] 4.08ns
.preheader5.preheader.0:80  %call_ret9 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_2, i8 %state_1_2, i8 %state_2_2, i8 %state_3_2, i8 %state_4_3, i8 %state_5_3, i8 %state_6_3, i8 %state_7_3, i8 %state_8_3, i8 %state_9_3, i8 %state_10_3, i8 %state_11_3, i8 %state_12_3, i8 %state_13_3, i8 %state_14_3, i8 %state_15_3, [176 x i8]* %w, i5 1)


 <State 15>: 4.08ns
ST_15: call_ret9 [4/9] 4.08ns
.preheader5.preheader.0:80  %call_ret9 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_2, i8 %state_1_2, i8 %state_2_2, i8 %state_3_2, i8 %state_4_3, i8 %state_5_3, i8 %state_6_3, i8 %state_7_3, i8 %state_8_3, i8 %state_9_3, i8 %state_10_3, i8 %state_11_3, i8 %state_12_3, i8 %state_13_3, i8 %state_14_3, i8 %state_15_3, [176 x i8]* %w, i5 1)


 <State 16>: 4.08ns
ST_16: call_ret9 [3/9] 4.08ns
.preheader5.preheader.0:80  %call_ret9 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_2, i8 %state_1_2, i8 %state_2_2, i8 %state_3_2, i8 %state_4_3, i8 %state_5_3, i8 %state_6_3, i8 %state_7_3, i8 %state_8_3, i8 %state_9_3, i8 %state_10_3, i8 %state_11_3, i8 %state_12_3, i8 %state_13_3, i8 %state_14_3, i8 %state_15_3, [176 x i8]* %w, i5 1)


 <State 17>: 4.08ns
ST_17: call_ret9 [2/9] 4.08ns
.preheader5.preheader.0:80  %call_ret9 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_2, i8 %state_1_2, i8 %state_2_2, i8 %state_3_2, i8 %state_4_3, i8 %state_5_3, i8 %state_6_3, i8 %state_7_3, i8 %state_8_3, i8 %state_9_3, i8 %state_10_3, i8 %state_11_3, i8 %state_12_3, i8 %state_13_3, i8 %state_14_3, i8 %state_15_3, [176 x i8]* %w, i5 1)


 <State 18>: 5.12ns
ST_18: call_ret9 [1/9] 4.08ns
.preheader5.preheader.0:80  %call_ret9 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_2, i8 %state_1_2, i8 %state_2_2, i8 %state_3_2, i8 %state_4_3, i8 %state_5_3, i8 %state_6_3, i8 %state_7_3, i8 %state_8_3, i8 %state_9_3, i8 %state_10_3, i8 %state_11_3, i8 %state_12_3, i8 %state_13_3, i8 %state_14_3, i8 %state_15_3, [176 x i8]* %w, i5 1)

ST_18: state_0_3 [1/1] 0.00ns
.preheader5.preheader.0:81  %state_0_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 0

ST_18: state_1_3 [1/1] 0.00ns
.preheader5.preheader.0:82  %state_1_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 1

ST_18: state_2_3 [1/1] 0.00ns
.preheader5.preheader.0:83  %state_2_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 2

ST_18: state_3_3 [1/1] 0.00ns
.preheader5.preheader.0:84  %state_3_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 3

ST_18: state_4_4 [1/1] 0.00ns
.preheader5.preheader.0:85  %state_4_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 4

ST_18: state_5_4 [1/1] 0.00ns
.preheader5.preheader.0:86  %state_5_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 5

ST_18: state_6_4 [1/1] 0.00ns
.preheader5.preheader.0:87  %state_6_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 6

ST_18: state_7_4 [1/1] 0.00ns
.preheader5.preheader.0:88  %state_7_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 7

ST_18: state_8_4 [1/1] 0.00ns
.preheader5.preheader.0:89  %state_8_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 8

ST_18: state_9_4 [1/1] 0.00ns
.preheader5.preheader.0:90  %state_9_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 9

ST_18: state_10_4 [1/1] 0.00ns
.preheader5.preheader.0:91  %state_10_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 10

ST_18: state_11_4 [1/1] 0.00ns
.preheader5.preheader.0:92  %state_11_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 11

ST_18: state_12_4 [1/1] 0.00ns
.preheader5.preheader.0:93  %state_12_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 12

ST_18: state_13_4 [1/1] 0.00ns
.preheader5.preheader.0:94  %state_13_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 13

ST_18: state_14_4 [1/1] 0.00ns
.preheader5.preheader.0:95  %state_14_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 14

ST_18: state_15_4 [1/1] 0.00ns
.preheader5.preheader.0:96  %state_15_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret9, 15

ST_18: call_ret1 [2/2] 1.04ns
.preheader5.preheader.0:97  %call_ret1 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_3, i8 %state_1_3, i8 %state_2_3, i8 %state_3_3, i8 %state_4_4, i8 %state_5_4, i8 %state_6_4, i8 %state_7_4, i8 %state_8_4, i8 %state_9_4, i8 %state_10_4, i8 %state_11_4, i8 %state_12_4, i8 %state_13_4, i8 %state_14_4, i8 %state_15_4)


 <State 19>: 12.35ns
ST_19: call_ret1 [1/2] 2.39ns
.preheader5.preheader.0:97  %call_ret1 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_3, i8 %state_1_3, i8 %state_2_3, i8 %state_3_3, i8 %state_4_4, i8 %state_5_4, i8 %state_6_4, i8 %state_7_4, i8 %state_8_4, i8 %state_9_4, i8 %state_10_4, i8 %state_11_4, i8 %state_12_4, i8 %state_13_4, i8 %state_14_4, i8 %state_15_4)

ST_19: state_0_4 [1/1] 0.00ns
.preheader5.preheader.0:98  %state_0_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 0

ST_19: state_1_4 [1/1] 0.00ns
.preheader5.preheader.0:99  %state_1_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 1

ST_19: state_2_4 [1/1] 0.00ns
.preheader5.preheader.0:100  %state_2_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 2

ST_19: state_3_4 [1/1] 0.00ns
.preheader5.preheader.0:101  %state_3_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 3

ST_19: state_4_5 [1/1] 0.00ns
.preheader5.preheader.0:102  %state_4_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 4

ST_19: state_5_5 [1/1] 0.00ns
.preheader5.preheader.0:103  %state_5_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 5

ST_19: state_6_5 [1/1] 0.00ns
.preheader5.preheader.0:104  %state_6_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 6

ST_19: state_7_5 [1/1] 0.00ns
.preheader5.preheader.0:105  %state_7_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 7

ST_19: state_8_5 [1/1] 0.00ns
.preheader5.preheader.0:106  %state_8_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 8

ST_19: state_9_5 [1/1] 0.00ns
.preheader5.preheader.0:107  %state_9_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 9

ST_19: state_10_5 [1/1] 0.00ns
.preheader5.preheader.0:108  %state_10_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 10

ST_19: state_11_5 [1/1] 0.00ns
.preheader5.preheader.0:109  %state_11_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 11

ST_19: state_12_5 [1/1] 0.00ns
.preheader5.preheader.0:110  %state_12_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 12

ST_19: state_13_5 [1/1] 0.00ns
.preheader5.preheader.0:111  %state_13_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 13

ST_19: state_14_5 [1/1] 0.00ns
.preheader5.preheader.0:112  %state_14_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 14

ST_19: state_15_5 [1/1] 0.00ns
.preheader5.preheader.0:113  %state_15_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret1, 15

ST_19: call_ret2 [1/1] 1.04ns
.preheader5.preheader.0:114  %call_ret2 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_shift_rows(i8 %state_4_5, i8 %state_5_5, i8 %state_6_5, i8 %state_7_5, i8 %state_8_5, i8 %state_9_5, i8 %state_10_5, i8 %state_11_5, i8 %state_12_5, i8 %state_13_5, i8 %state_14_5, i8 %state_15_5)

ST_19: state_4_6 [1/1] 0.00ns
.preheader5.preheader.0:115  %state_4_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 0

ST_19: state_5_6 [1/1] 0.00ns
.preheader5.preheader.0:116  %state_5_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 1

ST_19: state_6_6 [1/1] 0.00ns
.preheader5.preheader.0:117  %state_6_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 2

ST_19: state_7_6 [1/1] 0.00ns
.preheader5.preheader.0:118  %state_7_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 3

ST_19: state_8_6 [1/1] 0.00ns
.preheader5.preheader.0:119  %state_8_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 4

ST_19: state_9_6 [1/1] 0.00ns
.preheader5.preheader.0:120  %state_9_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 5

ST_19: state_10_6 [1/1] 0.00ns
.preheader5.preheader.0:121  %state_10_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 6

ST_19: state_11_6 [1/1] 0.00ns
.preheader5.preheader.0:122  %state_11_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 7

ST_19: state_12_6 [1/1] 0.00ns
.preheader5.preheader.0:123  %state_12_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 8

ST_19: state_13_6 [1/1] 0.00ns
.preheader5.preheader.0:124  %state_13_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 9

ST_19: state_14_6 [1/1] 0.00ns
.preheader5.preheader.0:125  %state_14_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 10

ST_19: state_15_6 [1/1] 0.00ns
.preheader5.preheader.0:126  %state_15_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 11

ST_19: call_ret3 [1/1] 6.52ns
.preheader5.preheader.0:127  %call_ret3 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_mix_columns(i8 %state_0_4, i8 %state_1_4, i8 %state_2_4, i8 %state_3_4, i8 %state_4_6, i8 %state_5_6, i8 %state_6_6, i8 %state_7_6, i8 %state_8_6, i8 %state_9_6, i8 %state_10_6, i8 %state_11_6, i8 %state_12_6, i8 %state_13_6, i8 %state_14_6, i8 %state_15_6)

ST_19: state_0_5 [1/1] 0.00ns
.preheader5.preheader.0:128  %state_0_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 0

ST_19: state_1_5 [1/1] 0.00ns
.preheader5.preheader.0:129  %state_1_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 1

ST_19: state_2_5 [1/1] 0.00ns
.preheader5.preheader.0:130  %state_2_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 2

ST_19: state_3_5 [1/1] 0.00ns
.preheader5.preheader.0:131  %state_3_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 3

ST_19: state_4_7 [1/1] 0.00ns
.preheader5.preheader.0:132  %state_4_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 4

ST_19: state_5_7 [1/1] 0.00ns
.preheader5.preheader.0:133  %state_5_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 5

ST_19: state_6_7 [1/1] 0.00ns
.preheader5.preheader.0:134  %state_6_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 6

ST_19: state_7_7 [1/1] 0.00ns
.preheader5.preheader.0:135  %state_7_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 7

ST_19: state_8_7 [1/1] 0.00ns
.preheader5.preheader.0:136  %state_8_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 8

ST_19: state_9_7 [1/1] 0.00ns
.preheader5.preheader.0:137  %state_9_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 9

ST_19: state_10_7 [1/1] 0.00ns
.preheader5.preheader.0:138  %state_10_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 10

ST_19: state_11_7 [1/1] 0.00ns
.preheader5.preheader.0:139  %state_11_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 11

ST_19: state_12_7 [1/1] 0.00ns
.preheader5.preheader.0:140  %state_12_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 12

ST_19: state_13_7 [1/1] 0.00ns
.preheader5.preheader.0:141  %state_13_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 13

ST_19: state_14_7 [1/1] 0.00ns
.preheader5.preheader.0:142  %state_14_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 14

ST_19: state_15_7 [1/1] 0.00ns
.preheader5.preheader.0:143  %state_15_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret3, 15

ST_19: call_ret4 [9/9] 2.41ns
.preheader5.preheader.0:144  %call_ret4 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_5, i8 %state_1_5, i8 %state_2_5, i8 %state_3_5, i8 %state_4_7, i8 %state_5_7, i8 %state_6_7, i8 %state_7_7, i8 %state_8_7, i8 %state_9_7, i8 %state_10_7, i8 %state_11_7, i8 %state_12_7, i8 %state_13_7, i8 %state_14_7, i8 %state_15_7, [176 x i8]* %w, i5 2)


 <State 20>: 4.08ns
ST_20: call_ret4 [8/9] 4.08ns
.preheader5.preheader.0:144  %call_ret4 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_5, i8 %state_1_5, i8 %state_2_5, i8 %state_3_5, i8 %state_4_7, i8 %state_5_7, i8 %state_6_7, i8 %state_7_7, i8 %state_8_7, i8 %state_9_7, i8 %state_10_7, i8 %state_11_7, i8 %state_12_7, i8 %state_13_7, i8 %state_14_7, i8 %state_15_7, [176 x i8]* %w, i5 2)


 <State 21>: 4.08ns
ST_21: call_ret4 [7/9] 4.08ns
.preheader5.preheader.0:144  %call_ret4 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_5, i8 %state_1_5, i8 %state_2_5, i8 %state_3_5, i8 %state_4_7, i8 %state_5_7, i8 %state_6_7, i8 %state_7_7, i8 %state_8_7, i8 %state_9_7, i8 %state_10_7, i8 %state_11_7, i8 %state_12_7, i8 %state_13_7, i8 %state_14_7, i8 %state_15_7, [176 x i8]* %w, i5 2)


 <State 22>: 4.08ns
ST_22: call_ret4 [6/9] 4.08ns
.preheader5.preheader.0:144  %call_ret4 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_5, i8 %state_1_5, i8 %state_2_5, i8 %state_3_5, i8 %state_4_7, i8 %state_5_7, i8 %state_6_7, i8 %state_7_7, i8 %state_8_7, i8 %state_9_7, i8 %state_10_7, i8 %state_11_7, i8 %state_12_7, i8 %state_13_7, i8 %state_14_7, i8 %state_15_7, [176 x i8]* %w, i5 2)


 <State 23>: 4.08ns
ST_23: call_ret4 [5/9] 4.08ns
.preheader5.preheader.0:144  %call_ret4 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_5, i8 %state_1_5, i8 %state_2_5, i8 %state_3_5, i8 %state_4_7, i8 %state_5_7, i8 %state_6_7, i8 %state_7_7, i8 %state_8_7, i8 %state_9_7, i8 %state_10_7, i8 %state_11_7, i8 %state_12_7, i8 %state_13_7, i8 %state_14_7, i8 %state_15_7, [176 x i8]* %w, i5 2)


 <State 24>: 4.08ns
ST_24: call_ret4 [4/9] 4.08ns
.preheader5.preheader.0:144  %call_ret4 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_5, i8 %state_1_5, i8 %state_2_5, i8 %state_3_5, i8 %state_4_7, i8 %state_5_7, i8 %state_6_7, i8 %state_7_7, i8 %state_8_7, i8 %state_9_7, i8 %state_10_7, i8 %state_11_7, i8 %state_12_7, i8 %state_13_7, i8 %state_14_7, i8 %state_15_7, [176 x i8]* %w, i5 2)


 <State 25>: 4.08ns
ST_25: call_ret4 [3/9] 4.08ns
.preheader5.preheader.0:144  %call_ret4 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_5, i8 %state_1_5, i8 %state_2_5, i8 %state_3_5, i8 %state_4_7, i8 %state_5_7, i8 %state_6_7, i8 %state_7_7, i8 %state_8_7, i8 %state_9_7, i8 %state_10_7, i8 %state_11_7, i8 %state_12_7, i8 %state_13_7, i8 %state_14_7, i8 %state_15_7, [176 x i8]* %w, i5 2)


 <State 26>: 4.08ns
ST_26: call_ret4 [2/9] 4.08ns
.preheader5.preheader.0:144  %call_ret4 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_5, i8 %state_1_5, i8 %state_2_5, i8 %state_3_5, i8 %state_4_7, i8 %state_5_7, i8 %state_6_7, i8 %state_7_7, i8 %state_8_7, i8 %state_9_7, i8 %state_10_7, i8 %state_11_7, i8 %state_12_7, i8 %state_13_7, i8 %state_14_7, i8 %state_15_7, [176 x i8]* %w, i5 2)


 <State 27>: 5.12ns
ST_27: call_ret4 [1/9] 4.08ns
.preheader5.preheader.0:144  %call_ret4 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_5, i8 %state_1_5, i8 %state_2_5, i8 %state_3_5, i8 %state_4_7, i8 %state_5_7, i8 %state_6_7, i8 %state_7_7, i8 %state_8_7, i8 %state_9_7, i8 %state_10_7, i8 %state_11_7, i8 %state_12_7, i8 %state_13_7, i8 %state_14_7, i8 %state_15_7, [176 x i8]* %w, i5 2)

ST_27: state_0_6 [1/1] 0.00ns
.preheader5.preheader.0:145  %state_0_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 0

ST_27: state_1_6 [1/1] 0.00ns
.preheader5.preheader.0:146  %state_1_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 1

ST_27: state_2_6 [1/1] 0.00ns
.preheader5.preheader.0:147  %state_2_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 2

ST_27: state_3_6 [1/1] 0.00ns
.preheader5.preheader.0:148  %state_3_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 3

ST_27: state_4_8 [1/1] 0.00ns
.preheader5.preheader.0:149  %state_4_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 4

ST_27: state_5_8 [1/1] 0.00ns
.preheader5.preheader.0:150  %state_5_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 5

ST_27: state_6_8 [1/1] 0.00ns
.preheader5.preheader.0:151  %state_6_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 6

ST_27: state_7_8 [1/1] 0.00ns
.preheader5.preheader.0:152  %state_7_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 7

ST_27: state_8_8 [1/1] 0.00ns
.preheader5.preheader.0:153  %state_8_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 8

ST_27: state_9_8 [1/1] 0.00ns
.preheader5.preheader.0:154  %state_9_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 9

ST_27: state_10_8 [1/1] 0.00ns
.preheader5.preheader.0:155  %state_10_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 10

ST_27: state_11_8 [1/1] 0.00ns
.preheader5.preheader.0:156  %state_11_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 11

ST_27: state_12_8 [1/1] 0.00ns
.preheader5.preheader.0:157  %state_12_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 12

ST_27: state_13_8 [1/1] 0.00ns
.preheader5.preheader.0:158  %state_13_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 13

ST_27: state_14_8 [1/1] 0.00ns
.preheader5.preheader.0:159  %state_14_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 14

ST_27: state_15_8 [1/1] 0.00ns
.preheader5.preheader.0:160  %state_15_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret4, 15

ST_27: call_ret10 [2/2] 1.04ns
.preheader5.preheader.0:161  %call_ret10 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_6, i8 %state_1_6, i8 %state_2_6, i8 %state_3_6, i8 %state_4_8, i8 %state_5_8, i8 %state_6_8, i8 %state_7_8, i8 %state_8_8, i8 %state_9_8, i8 %state_10_8, i8 %state_11_8, i8 %state_12_8, i8 %state_13_8, i8 %state_14_8, i8 %state_15_8)


 <State 28>: 12.35ns
ST_28: call_ret10 [1/2] 2.39ns
.preheader5.preheader.0:161  %call_ret10 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_6, i8 %state_1_6, i8 %state_2_6, i8 %state_3_6, i8 %state_4_8, i8 %state_5_8, i8 %state_6_8, i8 %state_7_8, i8 %state_8_8, i8 %state_9_8, i8 %state_10_8, i8 %state_11_8, i8 %state_12_8, i8 %state_13_8, i8 %state_14_8, i8 %state_15_8)

ST_28: state_0_7 [1/1] 0.00ns
.preheader5.preheader.0:162  %state_0_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 0

ST_28: state_1_7 [1/1] 0.00ns
.preheader5.preheader.0:163  %state_1_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 1

ST_28: state_2_7 [1/1] 0.00ns
.preheader5.preheader.0:164  %state_2_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 2

ST_28: state_3_7 [1/1] 0.00ns
.preheader5.preheader.0:165  %state_3_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 3

ST_28: state_4_9 [1/1] 0.00ns
.preheader5.preheader.0:166  %state_4_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 4

ST_28: state_5_9 [1/1] 0.00ns
.preheader5.preheader.0:167  %state_5_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 5

ST_28: state_6_9 [1/1] 0.00ns
.preheader5.preheader.0:168  %state_6_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 6

ST_28: state_7_9 [1/1] 0.00ns
.preheader5.preheader.0:169  %state_7_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 7

ST_28: state_8_9 [1/1] 0.00ns
.preheader5.preheader.0:170  %state_8_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 8

ST_28: state_9_9 [1/1] 0.00ns
.preheader5.preheader.0:171  %state_9_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 9

ST_28: state_10_9 [1/1] 0.00ns
.preheader5.preheader.0:172  %state_10_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 10

ST_28: state_11_9 [1/1] 0.00ns
.preheader5.preheader.0:173  %state_11_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 11

ST_28: state_12_9 [1/1] 0.00ns
.preheader5.preheader.0:174  %state_12_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 12

ST_28: state_13_9 [1/1] 0.00ns
.preheader5.preheader.0:175  %state_13_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 13

ST_28: state_14_9 [1/1] 0.00ns
.preheader5.preheader.0:176  %state_14_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 14

ST_28: state_15_9 [1/1] 0.00ns
.preheader5.preheader.0:177  %state_15_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret10, 15

ST_28: call_ret11 [1/1] 1.04ns
.preheader5.preheader.0:178  %call_ret11 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_shift_rows(i8 %state_4_9, i8 %state_5_9, i8 %state_6_9, i8 %state_7_9, i8 %state_8_9, i8 %state_9_9, i8 %state_10_9, i8 %state_11_9, i8 %state_12_9, i8 %state_13_9, i8 %state_14_9, i8 %state_15_9)

ST_28: state_4_10 [1/1] 0.00ns
.preheader5.preheader.0:179  %state_4_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret11, 0

ST_28: state_5_10 [1/1] 0.00ns
.preheader5.preheader.0:180  %state_5_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret11, 1

ST_28: state_6_10 [1/1] 0.00ns
.preheader5.preheader.0:181  %state_6_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret11, 2

ST_28: state_7_10 [1/1] 0.00ns
.preheader5.preheader.0:182  %state_7_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret11, 3

ST_28: state_8_10 [1/1] 0.00ns
.preheader5.preheader.0:183  %state_8_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret11, 4

ST_28: state_9_10 [1/1] 0.00ns
.preheader5.preheader.0:184  %state_9_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret11, 5

ST_28: state_10_10 [1/1] 0.00ns
.preheader5.preheader.0:185  %state_10_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret11, 6

ST_28: state_11_10 [1/1] 0.00ns
.preheader5.preheader.0:186  %state_11_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret11, 7

ST_28: state_12_10 [1/1] 0.00ns
.preheader5.preheader.0:187  %state_12_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret11, 8

ST_28: state_13_10 [1/1] 0.00ns
.preheader5.preheader.0:188  %state_13_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret11, 9

ST_28: state_14_10 [1/1] 0.00ns
.preheader5.preheader.0:189  %state_14_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret11, 10

ST_28: state_15_10 [1/1] 0.00ns
.preheader5.preheader.0:190  %state_15_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret11, 11

ST_28: call_ret12 [1/1] 6.52ns
.preheader5.preheader.0:191  %call_ret12 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_mix_columns(i8 %state_0_7, i8 %state_1_7, i8 %state_2_7, i8 %state_3_7, i8 %state_4_10, i8 %state_5_10, i8 %state_6_10, i8 %state_7_10, i8 %state_8_10, i8 %state_9_10, i8 %state_10_10, i8 %state_11_10, i8 %state_12_10, i8 %state_13_10, i8 %state_14_10, i8 %state_15_10)

ST_28: state_0_8 [1/1] 0.00ns
.preheader5.preheader.0:192  %state_0_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 0

ST_28: state_1_8 [1/1] 0.00ns
.preheader5.preheader.0:193  %state_1_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 1

ST_28: state_2_8 [1/1] 0.00ns
.preheader5.preheader.0:194  %state_2_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 2

ST_28: state_3_8 [1/1] 0.00ns
.preheader5.preheader.0:195  %state_3_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 3

ST_28: state_4_11 [1/1] 0.00ns
.preheader5.preheader.0:196  %state_4_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 4

ST_28: state_5_11 [1/1] 0.00ns
.preheader5.preheader.0:197  %state_5_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 5

ST_28: state_6_11 [1/1] 0.00ns
.preheader5.preheader.0:198  %state_6_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 6

ST_28: state_7_11 [1/1] 0.00ns
.preheader5.preheader.0:199  %state_7_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 7

ST_28: state_8_11 [1/1] 0.00ns
.preheader5.preheader.0:200  %state_8_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 8

ST_28: state_9_11 [1/1] 0.00ns
.preheader5.preheader.0:201  %state_9_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 9

ST_28: state_10_11 [1/1] 0.00ns
.preheader5.preheader.0:202  %state_10_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 10

ST_28: state_11_11 [1/1] 0.00ns
.preheader5.preheader.0:203  %state_11_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 11

ST_28: state_12_11 [1/1] 0.00ns
.preheader5.preheader.0:204  %state_12_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 12

ST_28: state_13_11 [1/1] 0.00ns
.preheader5.preheader.0:205  %state_13_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 13

ST_28: state_14_11 [1/1] 0.00ns
.preheader5.preheader.0:206  %state_14_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 14

ST_28: state_15_11 [1/1] 0.00ns
.preheader5.preheader.0:207  %state_15_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret12, 15

ST_28: call_ret13 [9/9] 2.41ns
.preheader5.preheader.0:208  %call_ret13 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_8, i8 %state_1_8, i8 %state_2_8, i8 %state_3_8, i8 %state_4_11, i8 %state_5_11, i8 %state_6_11, i8 %state_7_11, i8 %state_8_11, i8 %state_9_11, i8 %state_10_11, i8 %state_11_11, i8 %state_12_11, i8 %state_13_11, i8 %state_14_11, i8 %state_15_11, [176 x i8]* %w, i5 3)


 <State 29>: 4.08ns
ST_29: call_ret13 [8/9] 4.08ns
.preheader5.preheader.0:208  %call_ret13 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_8, i8 %state_1_8, i8 %state_2_8, i8 %state_3_8, i8 %state_4_11, i8 %state_5_11, i8 %state_6_11, i8 %state_7_11, i8 %state_8_11, i8 %state_9_11, i8 %state_10_11, i8 %state_11_11, i8 %state_12_11, i8 %state_13_11, i8 %state_14_11, i8 %state_15_11, [176 x i8]* %w, i5 3)


 <State 30>: 4.08ns
ST_30: call_ret13 [7/9] 4.08ns
.preheader5.preheader.0:208  %call_ret13 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_8, i8 %state_1_8, i8 %state_2_8, i8 %state_3_8, i8 %state_4_11, i8 %state_5_11, i8 %state_6_11, i8 %state_7_11, i8 %state_8_11, i8 %state_9_11, i8 %state_10_11, i8 %state_11_11, i8 %state_12_11, i8 %state_13_11, i8 %state_14_11, i8 %state_15_11, [176 x i8]* %w, i5 3)


 <State 31>: 4.08ns
ST_31: call_ret13 [6/9] 4.08ns
.preheader5.preheader.0:208  %call_ret13 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_8, i8 %state_1_8, i8 %state_2_8, i8 %state_3_8, i8 %state_4_11, i8 %state_5_11, i8 %state_6_11, i8 %state_7_11, i8 %state_8_11, i8 %state_9_11, i8 %state_10_11, i8 %state_11_11, i8 %state_12_11, i8 %state_13_11, i8 %state_14_11, i8 %state_15_11, [176 x i8]* %w, i5 3)


 <State 32>: 4.08ns
ST_32: call_ret13 [5/9] 4.08ns
.preheader5.preheader.0:208  %call_ret13 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_8, i8 %state_1_8, i8 %state_2_8, i8 %state_3_8, i8 %state_4_11, i8 %state_5_11, i8 %state_6_11, i8 %state_7_11, i8 %state_8_11, i8 %state_9_11, i8 %state_10_11, i8 %state_11_11, i8 %state_12_11, i8 %state_13_11, i8 %state_14_11, i8 %state_15_11, [176 x i8]* %w, i5 3)


 <State 33>: 4.08ns
ST_33: call_ret13 [4/9] 4.08ns
.preheader5.preheader.0:208  %call_ret13 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_8, i8 %state_1_8, i8 %state_2_8, i8 %state_3_8, i8 %state_4_11, i8 %state_5_11, i8 %state_6_11, i8 %state_7_11, i8 %state_8_11, i8 %state_9_11, i8 %state_10_11, i8 %state_11_11, i8 %state_12_11, i8 %state_13_11, i8 %state_14_11, i8 %state_15_11, [176 x i8]* %w, i5 3)


 <State 34>: 4.08ns
ST_34: call_ret13 [3/9] 4.08ns
.preheader5.preheader.0:208  %call_ret13 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_8, i8 %state_1_8, i8 %state_2_8, i8 %state_3_8, i8 %state_4_11, i8 %state_5_11, i8 %state_6_11, i8 %state_7_11, i8 %state_8_11, i8 %state_9_11, i8 %state_10_11, i8 %state_11_11, i8 %state_12_11, i8 %state_13_11, i8 %state_14_11, i8 %state_15_11, [176 x i8]* %w, i5 3)


 <State 35>: 4.08ns
ST_35: call_ret13 [2/9] 4.08ns
.preheader5.preheader.0:208  %call_ret13 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_8, i8 %state_1_8, i8 %state_2_8, i8 %state_3_8, i8 %state_4_11, i8 %state_5_11, i8 %state_6_11, i8 %state_7_11, i8 %state_8_11, i8 %state_9_11, i8 %state_10_11, i8 %state_11_11, i8 %state_12_11, i8 %state_13_11, i8 %state_14_11, i8 %state_15_11, [176 x i8]* %w, i5 3)


 <State 36>: 5.12ns
ST_36: call_ret13 [1/9] 4.08ns
.preheader5.preheader.0:208  %call_ret13 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_8, i8 %state_1_8, i8 %state_2_8, i8 %state_3_8, i8 %state_4_11, i8 %state_5_11, i8 %state_6_11, i8 %state_7_11, i8 %state_8_11, i8 %state_9_11, i8 %state_10_11, i8 %state_11_11, i8 %state_12_11, i8 %state_13_11, i8 %state_14_11, i8 %state_15_11, [176 x i8]* %w, i5 3)

ST_36: state_0_9 [1/1] 0.00ns
.preheader5.preheader.0:209  %state_0_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 0

ST_36: state_1_9 [1/1] 0.00ns
.preheader5.preheader.0:210  %state_1_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 1

ST_36: state_2_9 [1/1] 0.00ns
.preheader5.preheader.0:211  %state_2_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 2

ST_36: state_3_9 [1/1] 0.00ns
.preheader5.preheader.0:212  %state_3_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 3

ST_36: state_4_12 [1/1] 0.00ns
.preheader5.preheader.0:213  %state_4_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 4

ST_36: state_5_12 [1/1] 0.00ns
.preheader5.preheader.0:214  %state_5_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 5

ST_36: state_6_12 [1/1] 0.00ns
.preheader5.preheader.0:215  %state_6_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 6

ST_36: state_7_12 [1/1] 0.00ns
.preheader5.preheader.0:216  %state_7_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 7

ST_36: state_8_12 [1/1] 0.00ns
.preheader5.preheader.0:217  %state_8_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 8

ST_36: state_9_12 [1/1] 0.00ns
.preheader5.preheader.0:218  %state_9_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 9

ST_36: state_10_12 [1/1] 0.00ns
.preheader5.preheader.0:219  %state_10_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 10

ST_36: state_11_12 [1/1] 0.00ns
.preheader5.preheader.0:220  %state_11_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 11

ST_36: state_12_12 [1/1] 0.00ns
.preheader5.preheader.0:221  %state_12_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 12

ST_36: state_13_12 [1/1] 0.00ns
.preheader5.preheader.0:222  %state_13_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 13

ST_36: state_14_12 [1/1] 0.00ns
.preheader5.preheader.0:223  %state_14_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 14

ST_36: state_15_12 [1/1] 0.00ns
.preheader5.preheader.0:224  %state_15_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 15

ST_36: call_ret14 [2/2] 1.04ns
.preheader5.preheader.0:225  %call_ret14 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_9, i8 %state_1_9, i8 %state_2_9, i8 %state_3_9, i8 %state_4_12, i8 %state_5_12, i8 %state_6_12, i8 %state_7_12, i8 %state_8_12, i8 %state_9_12, i8 %state_10_12, i8 %state_11_12, i8 %state_12_12, i8 %state_13_12, i8 %state_14_12, i8 %state_15_12)


 <State 37>: 12.35ns
ST_37: call_ret14 [1/2] 2.39ns
.preheader5.preheader.0:225  %call_ret14 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_9, i8 %state_1_9, i8 %state_2_9, i8 %state_3_9, i8 %state_4_12, i8 %state_5_12, i8 %state_6_12, i8 %state_7_12, i8 %state_8_12, i8 %state_9_12, i8 %state_10_12, i8 %state_11_12, i8 %state_12_12, i8 %state_13_12, i8 %state_14_12, i8 %state_15_12)

ST_37: state_0_10 [1/1] 0.00ns
.preheader5.preheader.0:226  %state_0_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 0

ST_37: state_1_10 [1/1] 0.00ns
.preheader5.preheader.0:227  %state_1_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 1

ST_37: state_2_10 [1/1] 0.00ns
.preheader5.preheader.0:228  %state_2_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 2

ST_37: state_3_10 [1/1] 0.00ns
.preheader5.preheader.0:229  %state_3_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 3

ST_37: state_4_13 [1/1] 0.00ns
.preheader5.preheader.0:230  %state_4_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 4

ST_37: state_5_13 [1/1] 0.00ns
.preheader5.preheader.0:231  %state_5_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 5

ST_37: state_6_13 [1/1] 0.00ns
.preheader5.preheader.0:232  %state_6_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 6

ST_37: state_7_13 [1/1] 0.00ns
.preheader5.preheader.0:233  %state_7_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 7

ST_37: state_8_13 [1/1] 0.00ns
.preheader5.preheader.0:234  %state_8_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 8

ST_37: state_9_13 [1/1] 0.00ns
.preheader5.preheader.0:235  %state_9_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 9

ST_37: state_10_13 [1/1] 0.00ns
.preheader5.preheader.0:236  %state_10_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 10

ST_37: state_11_13 [1/1] 0.00ns
.preheader5.preheader.0:237  %state_11_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 11

ST_37: state_12_13 [1/1] 0.00ns
.preheader5.preheader.0:238  %state_12_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 12

ST_37: state_13_13 [1/1] 0.00ns
.preheader5.preheader.0:239  %state_13_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 13

ST_37: state_14_13 [1/1] 0.00ns
.preheader5.preheader.0:240  %state_14_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 14

ST_37: state_15_13 [1/1] 0.00ns
.preheader5.preheader.0:241  %state_15_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 15

ST_37: call_ret15 [1/1] 1.04ns
.preheader5.preheader.0:242  %call_ret15 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_shift_rows(i8 %state_4_13, i8 %state_5_13, i8 %state_6_13, i8 %state_7_13, i8 %state_8_13, i8 %state_9_13, i8 %state_10_13, i8 %state_11_13, i8 %state_12_13, i8 %state_13_13, i8 %state_14_13, i8 %state_15_13)

ST_37: state_4_14 [1/1] 0.00ns
.preheader5.preheader.0:243  %state_4_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 0

ST_37: state_5_14 [1/1] 0.00ns
.preheader5.preheader.0:244  %state_5_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 1

ST_37: state_6_14 [1/1] 0.00ns
.preheader5.preheader.0:245  %state_6_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 2

ST_37: state_7_14 [1/1] 0.00ns
.preheader5.preheader.0:246  %state_7_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 3

ST_37: state_8_14 [1/1] 0.00ns
.preheader5.preheader.0:247  %state_8_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 4

ST_37: state_9_14 [1/1] 0.00ns
.preheader5.preheader.0:248  %state_9_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 5

ST_37: state_10_14 [1/1] 0.00ns
.preheader5.preheader.0:249  %state_10_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 6

ST_37: state_11_14 [1/1] 0.00ns
.preheader5.preheader.0:250  %state_11_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 7

ST_37: state_12_14 [1/1] 0.00ns
.preheader5.preheader.0:251  %state_12_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 8

ST_37: state_13_14 [1/1] 0.00ns
.preheader5.preheader.0:252  %state_13_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 9

ST_37: state_14_14 [1/1] 0.00ns
.preheader5.preheader.0:253  %state_14_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 10

ST_37: state_15_14 [1/1] 0.00ns
.preheader5.preheader.0:254  %state_15_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 11

ST_37: call_ret16 [1/1] 6.52ns
.preheader5.preheader.0:255  %call_ret16 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_mix_columns(i8 %state_0_10, i8 %state_1_10, i8 %state_2_10, i8 %state_3_10, i8 %state_4_14, i8 %state_5_14, i8 %state_6_14, i8 %state_7_14, i8 %state_8_14, i8 %state_9_14, i8 %state_10_14, i8 %state_11_14, i8 %state_12_14, i8 %state_13_14, i8 %state_14_14, i8 %state_15_14)

ST_37: state_0_11 [1/1] 0.00ns
.preheader5.preheader.0:256  %state_0_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 0

ST_37: state_1_11 [1/1] 0.00ns
.preheader5.preheader.0:257  %state_1_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 1

ST_37: state_2_11 [1/1] 0.00ns
.preheader5.preheader.0:258  %state_2_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 2

ST_37: state_3_11 [1/1] 0.00ns
.preheader5.preheader.0:259  %state_3_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 3

ST_37: state_4_15 [1/1] 0.00ns
.preheader5.preheader.0:260  %state_4_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 4

ST_37: state_5_15 [1/1] 0.00ns
.preheader5.preheader.0:261  %state_5_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 5

ST_37: state_6_15 [1/1] 0.00ns
.preheader5.preheader.0:262  %state_6_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 6

ST_37: state_7_15 [1/1] 0.00ns
.preheader5.preheader.0:263  %state_7_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 7

ST_37: state_8_15 [1/1] 0.00ns
.preheader5.preheader.0:264  %state_8_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 8

ST_37: state_9_15 [1/1] 0.00ns
.preheader5.preheader.0:265  %state_9_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 9

ST_37: state_10_15 [1/1] 0.00ns
.preheader5.preheader.0:266  %state_10_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 10

ST_37: state_11_15 [1/1] 0.00ns
.preheader5.preheader.0:267  %state_11_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 11

ST_37: state_12_15 [1/1] 0.00ns
.preheader5.preheader.0:268  %state_12_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 12

ST_37: state_13_15 [1/1] 0.00ns
.preheader5.preheader.0:269  %state_13_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 13

ST_37: state_14_15 [1/1] 0.00ns
.preheader5.preheader.0:270  %state_14_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 14

ST_37: state_15_15 [1/1] 0.00ns
.preheader5.preheader.0:271  %state_15_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 15

ST_37: call_ret17 [9/9] 2.41ns
.preheader5.preheader.0:272  %call_ret17 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_11, i8 %state_1_11, i8 %state_2_11, i8 %state_3_11, i8 %state_4_15, i8 %state_5_15, i8 %state_6_15, i8 %state_7_15, i8 %state_8_15, i8 %state_9_15, i8 %state_10_15, i8 %state_11_15, i8 %state_12_15, i8 %state_13_15, i8 %state_14_15, i8 %state_15_15, [176 x i8]* %w, i5 4)


 <State 38>: 4.08ns
ST_38: call_ret17 [8/9] 4.08ns
.preheader5.preheader.0:272  %call_ret17 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_11, i8 %state_1_11, i8 %state_2_11, i8 %state_3_11, i8 %state_4_15, i8 %state_5_15, i8 %state_6_15, i8 %state_7_15, i8 %state_8_15, i8 %state_9_15, i8 %state_10_15, i8 %state_11_15, i8 %state_12_15, i8 %state_13_15, i8 %state_14_15, i8 %state_15_15, [176 x i8]* %w, i5 4)


 <State 39>: 4.08ns
ST_39: call_ret17 [7/9] 4.08ns
.preheader5.preheader.0:272  %call_ret17 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_11, i8 %state_1_11, i8 %state_2_11, i8 %state_3_11, i8 %state_4_15, i8 %state_5_15, i8 %state_6_15, i8 %state_7_15, i8 %state_8_15, i8 %state_9_15, i8 %state_10_15, i8 %state_11_15, i8 %state_12_15, i8 %state_13_15, i8 %state_14_15, i8 %state_15_15, [176 x i8]* %w, i5 4)


 <State 40>: 4.08ns
ST_40: call_ret17 [6/9] 4.08ns
.preheader5.preheader.0:272  %call_ret17 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_11, i8 %state_1_11, i8 %state_2_11, i8 %state_3_11, i8 %state_4_15, i8 %state_5_15, i8 %state_6_15, i8 %state_7_15, i8 %state_8_15, i8 %state_9_15, i8 %state_10_15, i8 %state_11_15, i8 %state_12_15, i8 %state_13_15, i8 %state_14_15, i8 %state_15_15, [176 x i8]* %w, i5 4)


 <State 41>: 4.08ns
ST_41: call_ret17 [5/9] 4.08ns
.preheader5.preheader.0:272  %call_ret17 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_11, i8 %state_1_11, i8 %state_2_11, i8 %state_3_11, i8 %state_4_15, i8 %state_5_15, i8 %state_6_15, i8 %state_7_15, i8 %state_8_15, i8 %state_9_15, i8 %state_10_15, i8 %state_11_15, i8 %state_12_15, i8 %state_13_15, i8 %state_14_15, i8 %state_15_15, [176 x i8]* %w, i5 4)


 <State 42>: 4.08ns
ST_42: call_ret17 [4/9] 4.08ns
.preheader5.preheader.0:272  %call_ret17 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_11, i8 %state_1_11, i8 %state_2_11, i8 %state_3_11, i8 %state_4_15, i8 %state_5_15, i8 %state_6_15, i8 %state_7_15, i8 %state_8_15, i8 %state_9_15, i8 %state_10_15, i8 %state_11_15, i8 %state_12_15, i8 %state_13_15, i8 %state_14_15, i8 %state_15_15, [176 x i8]* %w, i5 4)


 <State 43>: 4.08ns
ST_43: call_ret17 [3/9] 4.08ns
.preheader5.preheader.0:272  %call_ret17 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_11, i8 %state_1_11, i8 %state_2_11, i8 %state_3_11, i8 %state_4_15, i8 %state_5_15, i8 %state_6_15, i8 %state_7_15, i8 %state_8_15, i8 %state_9_15, i8 %state_10_15, i8 %state_11_15, i8 %state_12_15, i8 %state_13_15, i8 %state_14_15, i8 %state_15_15, [176 x i8]* %w, i5 4)


 <State 44>: 4.08ns
ST_44: call_ret17 [2/9] 4.08ns
.preheader5.preheader.0:272  %call_ret17 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_11, i8 %state_1_11, i8 %state_2_11, i8 %state_3_11, i8 %state_4_15, i8 %state_5_15, i8 %state_6_15, i8 %state_7_15, i8 %state_8_15, i8 %state_9_15, i8 %state_10_15, i8 %state_11_15, i8 %state_12_15, i8 %state_13_15, i8 %state_14_15, i8 %state_15_15, [176 x i8]* %w, i5 4)


 <State 45>: 5.12ns
ST_45: call_ret17 [1/9] 4.08ns
.preheader5.preheader.0:272  %call_ret17 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_11, i8 %state_1_11, i8 %state_2_11, i8 %state_3_11, i8 %state_4_15, i8 %state_5_15, i8 %state_6_15, i8 %state_7_15, i8 %state_8_15, i8 %state_9_15, i8 %state_10_15, i8 %state_11_15, i8 %state_12_15, i8 %state_13_15, i8 %state_14_15, i8 %state_15_15, [176 x i8]* %w, i5 4)

ST_45: state_0_12 [1/1] 0.00ns
.preheader5.preheader.0:273  %state_0_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 0

ST_45: state_1_12 [1/1] 0.00ns
.preheader5.preheader.0:274  %state_1_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 1

ST_45: state_2_12 [1/1] 0.00ns
.preheader5.preheader.0:275  %state_2_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 2

ST_45: state_3_12 [1/1] 0.00ns
.preheader5.preheader.0:276  %state_3_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 3

ST_45: state_4_16 [1/1] 0.00ns
.preheader5.preheader.0:277  %state_4_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 4

ST_45: state_5_16 [1/1] 0.00ns
.preheader5.preheader.0:278  %state_5_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 5

ST_45: state_6_16 [1/1] 0.00ns
.preheader5.preheader.0:279  %state_6_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 6

ST_45: state_7_16 [1/1] 0.00ns
.preheader5.preheader.0:280  %state_7_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 7

ST_45: state_8_16 [1/1] 0.00ns
.preheader5.preheader.0:281  %state_8_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 8

ST_45: state_9_16 [1/1] 0.00ns
.preheader5.preheader.0:282  %state_9_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 9

ST_45: state_10_16 [1/1] 0.00ns
.preheader5.preheader.0:283  %state_10_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 10

ST_45: state_11_16 [1/1] 0.00ns
.preheader5.preheader.0:284  %state_11_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 11

ST_45: state_12_16 [1/1] 0.00ns
.preheader5.preheader.0:285  %state_12_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 12

ST_45: state_13_16 [1/1] 0.00ns
.preheader5.preheader.0:286  %state_13_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 13

ST_45: state_14_16 [1/1] 0.00ns
.preheader5.preheader.0:287  %state_14_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 14

ST_45: state_15_16 [1/1] 0.00ns
.preheader5.preheader.0:288  %state_15_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 15

ST_45: call_ret18 [2/2] 1.04ns
.preheader5.preheader.0:289  %call_ret18 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_12, i8 %state_1_12, i8 %state_2_12, i8 %state_3_12, i8 %state_4_16, i8 %state_5_16, i8 %state_6_16, i8 %state_7_16, i8 %state_8_16, i8 %state_9_16, i8 %state_10_16, i8 %state_11_16, i8 %state_12_16, i8 %state_13_16, i8 %state_14_16, i8 %state_15_16)


 <State 46>: 12.35ns
ST_46: call_ret18 [1/2] 2.39ns
.preheader5.preheader.0:289  %call_ret18 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_12, i8 %state_1_12, i8 %state_2_12, i8 %state_3_12, i8 %state_4_16, i8 %state_5_16, i8 %state_6_16, i8 %state_7_16, i8 %state_8_16, i8 %state_9_16, i8 %state_10_16, i8 %state_11_16, i8 %state_12_16, i8 %state_13_16, i8 %state_14_16, i8 %state_15_16)

ST_46: state_0_13 [1/1] 0.00ns
.preheader5.preheader.0:290  %state_0_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 0

ST_46: state_1_13 [1/1] 0.00ns
.preheader5.preheader.0:291  %state_1_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 1

ST_46: state_2_13 [1/1] 0.00ns
.preheader5.preheader.0:292  %state_2_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 2

ST_46: state_3_13 [1/1] 0.00ns
.preheader5.preheader.0:293  %state_3_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 3

ST_46: state_4_17 [1/1] 0.00ns
.preheader5.preheader.0:294  %state_4_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 4

ST_46: state_5_17 [1/1] 0.00ns
.preheader5.preheader.0:295  %state_5_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 5

ST_46: state_6_17 [1/1] 0.00ns
.preheader5.preheader.0:296  %state_6_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 6

ST_46: state_7_17 [1/1] 0.00ns
.preheader5.preheader.0:297  %state_7_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 7

ST_46: state_8_17 [1/1] 0.00ns
.preheader5.preheader.0:298  %state_8_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 8

ST_46: state_9_17 [1/1] 0.00ns
.preheader5.preheader.0:299  %state_9_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 9

ST_46: state_10_17 [1/1] 0.00ns
.preheader5.preheader.0:300  %state_10_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 10

ST_46: state_11_17 [1/1] 0.00ns
.preheader5.preheader.0:301  %state_11_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 11

ST_46: state_12_17 [1/1] 0.00ns
.preheader5.preheader.0:302  %state_12_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 12

ST_46: state_13_17 [1/1] 0.00ns
.preheader5.preheader.0:303  %state_13_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 13

ST_46: state_14_17 [1/1] 0.00ns
.preheader5.preheader.0:304  %state_14_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 14

ST_46: state_15_17 [1/1] 0.00ns
.preheader5.preheader.0:305  %state_15_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 15

ST_46: call_ret19 [1/1] 1.04ns
.preheader5.preheader.0:306  %call_ret19 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_shift_rows(i8 %state_4_17, i8 %state_5_17, i8 %state_6_17, i8 %state_7_17, i8 %state_8_17, i8 %state_9_17, i8 %state_10_17, i8 %state_11_17, i8 %state_12_17, i8 %state_13_17, i8 %state_14_17, i8 %state_15_17)

ST_46: state_4_18 [1/1] 0.00ns
.preheader5.preheader.0:307  %state_4_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 0

ST_46: state_5_18 [1/1] 0.00ns
.preheader5.preheader.0:308  %state_5_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 1

ST_46: state_6_18 [1/1] 0.00ns
.preheader5.preheader.0:309  %state_6_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 2

ST_46: state_7_18 [1/1] 0.00ns
.preheader5.preheader.0:310  %state_7_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 3

ST_46: state_8_18 [1/1] 0.00ns
.preheader5.preheader.0:311  %state_8_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 4

ST_46: state_9_18 [1/1] 0.00ns
.preheader5.preheader.0:312  %state_9_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 5

ST_46: state_10_18 [1/1] 0.00ns
.preheader5.preheader.0:313  %state_10_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 6

ST_46: state_11_18 [1/1] 0.00ns
.preheader5.preheader.0:314  %state_11_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 7

ST_46: state_12_18 [1/1] 0.00ns
.preheader5.preheader.0:315  %state_12_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 8

ST_46: state_13_18 [1/1] 0.00ns
.preheader5.preheader.0:316  %state_13_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 9

ST_46: state_14_18 [1/1] 0.00ns
.preheader5.preheader.0:317  %state_14_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 10

ST_46: state_15_18 [1/1] 0.00ns
.preheader5.preheader.0:318  %state_15_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 11

ST_46: call_ret20 [1/1] 6.52ns
.preheader5.preheader.0:319  %call_ret20 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_mix_columns(i8 %state_0_13, i8 %state_1_13, i8 %state_2_13, i8 %state_3_13, i8 %state_4_18, i8 %state_5_18, i8 %state_6_18, i8 %state_7_18, i8 %state_8_18, i8 %state_9_18, i8 %state_10_18, i8 %state_11_18, i8 %state_12_18, i8 %state_13_18, i8 %state_14_18, i8 %state_15_18)

ST_46: state_0_14 [1/1] 0.00ns
.preheader5.preheader.0:320  %state_0_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 0

ST_46: state_1_14 [1/1] 0.00ns
.preheader5.preheader.0:321  %state_1_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 1

ST_46: state_2_14 [1/1] 0.00ns
.preheader5.preheader.0:322  %state_2_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 2

ST_46: state_3_14 [1/1] 0.00ns
.preheader5.preheader.0:323  %state_3_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 3

ST_46: state_4_19 [1/1] 0.00ns
.preheader5.preheader.0:324  %state_4_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 4

ST_46: state_5_19 [1/1] 0.00ns
.preheader5.preheader.0:325  %state_5_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 5

ST_46: state_6_19 [1/1] 0.00ns
.preheader5.preheader.0:326  %state_6_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 6

ST_46: state_7_19 [1/1] 0.00ns
.preheader5.preheader.0:327  %state_7_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 7

ST_46: state_8_19 [1/1] 0.00ns
.preheader5.preheader.0:328  %state_8_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 8

ST_46: state_9_19 [1/1] 0.00ns
.preheader5.preheader.0:329  %state_9_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 9

ST_46: state_10_19 [1/1] 0.00ns
.preheader5.preheader.0:330  %state_10_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 10

ST_46: state_11_19 [1/1] 0.00ns
.preheader5.preheader.0:331  %state_11_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 11

ST_46: state_12_19 [1/1] 0.00ns
.preheader5.preheader.0:332  %state_12_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 12

ST_46: state_13_19 [1/1] 0.00ns
.preheader5.preheader.0:333  %state_13_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 13

ST_46: state_14_19 [1/1] 0.00ns
.preheader5.preheader.0:334  %state_14_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 14

ST_46: state_15_19 [1/1] 0.00ns
.preheader5.preheader.0:335  %state_15_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 15

ST_46: call_ret21 [9/9] 2.41ns
.preheader5.preheader.0:336  %call_ret21 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_14, i8 %state_1_14, i8 %state_2_14, i8 %state_3_14, i8 %state_4_19, i8 %state_5_19, i8 %state_6_19, i8 %state_7_19, i8 %state_8_19, i8 %state_9_19, i8 %state_10_19, i8 %state_11_19, i8 %state_12_19, i8 %state_13_19, i8 %state_14_19, i8 %state_15_19, [176 x i8]* %w, i5 5)


 <State 47>: 4.08ns
ST_47: call_ret21 [8/9] 4.08ns
.preheader5.preheader.0:336  %call_ret21 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_14, i8 %state_1_14, i8 %state_2_14, i8 %state_3_14, i8 %state_4_19, i8 %state_5_19, i8 %state_6_19, i8 %state_7_19, i8 %state_8_19, i8 %state_9_19, i8 %state_10_19, i8 %state_11_19, i8 %state_12_19, i8 %state_13_19, i8 %state_14_19, i8 %state_15_19, [176 x i8]* %w, i5 5)


 <State 48>: 4.08ns
ST_48: call_ret21 [7/9] 4.08ns
.preheader5.preheader.0:336  %call_ret21 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_14, i8 %state_1_14, i8 %state_2_14, i8 %state_3_14, i8 %state_4_19, i8 %state_5_19, i8 %state_6_19, i8 %state_7_19, i8 %state_8_19, i8 %state_9_19, i8 %state_10_19, i8 %state_11_19, i8 %state_12_19, i8 %state_13_19, i8 %state_14_19, i8 %state_15_19, [176 x i8]* %w, i5 5)


 <State 49>: 4.08ns
ST_49: call_ret21 [6/9] 4.08ns
.preheader5.preheader.0:336  %call_ret21 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_14, i8 %state_1_14, i8 %state_2_14, i8 %state_3_14, i8 %state_4_19, i8 %state_5_19, i8 %state_6_19, i8 %state_7_19, i8 %state_8_19, i8 %state_9_19, i8 %state_10_19, i8 %state_11_19, i8 %state_12_19, i8 %state_13_19, i8 %state_14_19, i8 %state_15_19, [176 x i8]* %w, i5 5)


 <State 50>: 4.08ns
ST_50: call_ret21 [5/9] 4.08ns
.preheader5.preheader.0:336  %call_ret21 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_14, i8 %state_1_14, i8 %state_2_14, i8 %state_3_14, i8 %state_4_19, i8 %state_5_19, i8 %state_6_19, i8 %state_7_19, i8 %state_8_19, i8 %state_9_19, i8 %state_10_19, i8 %state_11_19, i8 %state_12_19, i8 %state_13_19, i8 %state_14_19, i8 %state_15_19, [176 x i8]* %w, i5 5)


 <State 51>: 4.08ns
ST_51: call_ret21 [4/9] 4.08ns
.preheader5.preheader.0:336  %call_ret21 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_14, i8 %state_1_14, i8 %state_2_14, i8 %state_3_14, i8 %state_4_19, i8 %state_5_19, i8 %state_6_19, i8 %state_7_19, i8 %state_8_19, i8 %state_9_19, i8 %state_10_19, i8 %state_11_19, i8 %state_12_19, i8 %state_13_19, i8 %state_14_19, i8 %state_15_19, [176 x i8]* %w, i5 5)


 <State 52>: 4.08ns
ST_52: call_ret21 [3/9] 4.08ns
.preheader5.preheader.0:336  %call_ret21 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_14, i8 %state_1_14, i8 %state_2_14, i8 %state_3_14, i8 %state_4_19, i8 %state_5_19, i8 %state_6_19, i8 %state_7_19, i8 %state_8_19, i8 %state_9_19, i8 %state_10_19, i8 %state_11_19, i8 %state_12_19, i8 %state_13_19, i8 %state_14_19, i8 %state_15_19, [176 x i8]* %w, i5 5)


 <State 53>: 4.08ns
ST_53: call_ret21 [2/9] 4.08ns
.preheader5.preheader.0:336  %call_ret21 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_14, i8 %state_1_14, i8 %state_2_14, i8 %state_3_14, i8 %state_4_19, i8 %state_5_19, i8 %state_6_19, i8 %state_7_19, i8 %state_8_19, i8 %state_9_19, i8 %state_10_19, i8 %state_11_19, i8 %state_12_19, i8 %state_13_19, i8 %state_14_19, i8 %state_15_19, [176 x i8]* %w, i5 5)


 <State 54>: 5.12ns
ST_54: call_ret21 [1/9] 4.08ns
.preheader5.preheader.0:336  %call_ret21 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_14, i8 %state_1_14, i8 %state_2_14, i8 %state_3_14, i8 %state_4_19, i8 %state_5_19, i8 %state_6_19, i8 %state_7_19, i8 %state_8_19, i8 %state_9_19, i8 %state_10_19, i8 %state_11_19, i8 %state_12_19, i8 %state_13_19, i8 %state_14_19, i8 %state_15_19, [176 x i8]* %w, i5 5)

ST_54: state_0_15 [1/1] 0.00ns
.preheader5.preheader.0:337  %state_0_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 0

ST_54: state_1_15 [1/1] 0.00ns
.preheader5.preheader.0:338  %state_1_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 1

ST_54: state_2_15 [1/1] 0.00ns
.preheader5.preheader.0:339  %state_2_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 2

ST_54: state_3_15 [1/1] 0.00ns
.preheader5.preheader.0:340  %state_3_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 3

ST_54: state_4_20 [1/1] 0.00ns
.preheader5.preheader.0:341  %state_4_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 4

ST_54: state_5_20 [1/1] 0.00ns
.preheader5.preheader.0:342  %state_5_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 5

ST_54: state_6_20 [1/1] 0.00ns
.preheader5.preheader.0:343  %state_6_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 6

ST_54: state_7_20 [1/1] 0.00ns
.preheader5.preheader.0:344  %state_7_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 7

ST_54: state_8_20 [1/1] 0.00ns
.preheader5.preheader.0:345  %state_8_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 8

ST_54: state_9_20 [1/1] 0.00ns
.preheader5.preheader.0:346  %state_9_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 9

ST_54: state_10_20 [1/1] 0.00ns
.preheader5.preheader.0:347  %state_10_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 10

ST_54: state_11_20 [1/1] 0.00ns
.preheader5.preheader.0:348  %state_11_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 11

ST_54: state_12_20 [1/1] 0.00ns
.preheader5.preheader.0:349  %state_12_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 12

ST_54: state_13_20 [1/1] 0.00ns
.preheader5.preheader.0:350  %state_13_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 13

ST_54: state_14_20 [1/1] 0.00ns
.preheader5.preheader.0:351  %state_14_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 14

ST_54: state_15_20 [1/1] 0.00ns
.preheader5.preheader.0:352  %state_15_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 15

ST_54: call_ret22 [2/2] 1.04ns
.preheader5.preheader.0:353  %call_ret22 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_15, i8 %state_1_15, i8 %state_2_15, i8 %state_3_15, i8 %state_4_20, i8 %state_5_20, i8 %state_6_20, i8 %state_7_20, i8 %state_8_20, i8 %state_9_20, i8 %state_10_20, i8 %state_11_20, i8 %state_12_20, i8 %state_13_20, i8 %state_14_20, i8 %state_15_20)


 <State 55>: 12.35ns
ST_55: call_ret22 [1/2] 2.39ns
.preheader5.preheader.0:353  %call_ret22 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_15, i8 %state_1_15, i8 %state_2_15, i8 %state_3_15, i8 %state_4_20, i8 %state_5_20, i8 %state_6_20, i8 %state_7_20, i8 %state_8_20, i8 %state_9_20, i8 %state_10_20, i8 %state_11_20, i8 %state_12_20, i8 %state_13_20, i8 %state_14_20, i8 %state_15_20)

ST_55: state_0_16 [1/1] 0.00ns
.preheader5.preheader.0:354  %state_0_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 0

ST_55: state_1_16 [1/1] 0.00ns
.preheader5.preheader.0:355  %state_1_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 1

ST_55: state_2_16 [1/1] 0.00ns
.preheader5.preheader.0:356  %state_2_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 2

ST_55: state_3_16 [1/1] 0.00ns
.preheader5.preheader.0:357  %state_3_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 3

ST_55: state_4_21 [1/1] 0.00ns
.preheader5.preheader.0:358  %state_4_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 4

ST_55: state_5_21 [1/1] 0.00ns
.preheader5.preheader.0:359  %state_5_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 5

ST_55: state_6_21 [1/1] 0.00ns
.preheader5.preheader.0:360  %state_6_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 6

ST_55: state_7_21 [1/1] 0.00ns
.preheader5.preheader.0:361  %state_7_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 7

ST_55: state_8_21 [1/1] 0.00ns
.preheader5.preheader.0:362  %state_8_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 8

ST_55: state_9_21 [1/1] 0.00ns
.preheader5.preheader.0:363  %state_9_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 9

ST_55: state_10_21 [1/1] 0.00ns
.preheader5.preheader.0:364  %state_10_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 10

ST_55: state_11_21 [1/1] 0.00ns
.preheader5.preheader.0:365  %state_11_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 11

ST_55: state_12_21 [1/1] 0.00ns
.preheader5.preheader.0:366  %state_12_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 12

ST_55: state_13_21 [1/1] 0.00ns
.preheader5.preheader.0:367  %state_13_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 13

ST_55: state_14_21 [1/1] 0.00ns
.preheader5.preheader.0:368  %state_14_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 14

ST_55: state_15_21 [1/1] 0.00ns
.preheader5.preheader.0:369  %state_15_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 15

ST_55: call_ret23 [1/1] 1.04ns
.preheader5.preheader.0:370  %call_ret23 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_shift_rows(i8 %state_4_21, i8 %state_5_21, i8 %state_6_21, i8 %state_7_21, i8 %state_8_21, i8 %state_9_21, i8 %state_10_21, i8 %state_11_21, i8 %state_12_21, i8 %state_13_21, i8 %state_14_21, i8 %state_15_21)

ST_55: state_4_22 [1/1] 0.00ns
.preheader5.preheader.0:371  %state_4_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 0

ST_55: state_5_22 [1/1] 0.00ns
.preheader5.preheader.0:372  %state_5_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 1

ST_55: state_6_22 [1/1] 0.00ns
.preheader5.preheader.0:373  %state_6_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 2

ST_55: state_7_22 [1/1] 0.00ns
.preheader5.preheader.0:374  %state_7_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 3

ST_55: state_8_22 [1/1] 0.00ns
.preheader5.preheader.0:375  %state_8_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 4

ST_55: state_9_22 [1/1] 0.00ns
.preheader5.preheader.0:376  %state_9_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 5

ST_55: state_10_22 [1/1] 0.00ns
.preheader5.preheader.0:377  %state_10_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 6

ST_55: state_11_22 [1/1] 0.00ns
.preheader5.preheader.0:378  %state_11_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 7

ST_55: state_12_22 [1/1] 0.00ns
.preheader5.preheader.0:379  %state_12_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 8

ST_55: state_13_22 [1/1] 0.00ns
.preheader5.preheader.0:380  %state_13_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 9

ST_55: state_14_22 [1/1] 0.00ns
.preheader5.preheader.0:381  %state_14_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 10

ST_55: state_15_22 [1/1] 0.00ns
.preheader5.preheader.0:382  %state_15_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 11

ST_55: call_ret24 [1/1] 6.52ns
.preheader5.preheader.0:383  %call_ret24 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_mix_columns(i8 %state_0_16, i8 %state_1_16, i8 %state_2_16, i8 %state_3_16, i8 %state_4_22, i8 %state_5_22, i8 %state_6_22, i8 %state_7_22, i8 %state_8_22, i8 %state_9_22, i8 %state_10_22, i8 %state_11_22, i8 %state_12_22, i8 %state_13_22, i8 %state_14_22, i8 %state_15_22)

ST_55: state_0_17 [1/1] 0.00ns
.preheader5.preheader.0:384  %state_0_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 0

ST_55: state_1_17 [1/1] 0.00ns
.preheader5.preheader.0:385  %state_1_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 1

ST_55: state_2_17 [1/1] 0.00ns
.preheader5.preheader.0:386  %state_2_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 2

ST_55: state_3_17 [1/1] 0.00ns
.preheader5.preheader.0:387  %state_3_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 3

ST_55: state_4_23 [1/1] 0.00ns
.preheader5.preheader.0:388  %state_4_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 4

ST_55: state_5_23 [1/1] 0.00ns
.preheader5.preheader.0:389  %state_5_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 5

ST_55: state_6_23 [1/1] 0.00ns
.preheader5.preheader.0:390  %state_6_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 6

ST_55: state_7_23 [1/1] 0.00ns
.preheader5.preheader.0:391  %state_7_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 7

ST_55: state_8_23 [1/1] 0.00ns
.preheader5.preheader.0:392  %state_8_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 8

ST_55: state_9_23 [1/1] 0.00ns
.preheader5.preheader.0:393  %state_9_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 9

ST_55: state_10_23 [1/1] 0.00ns
.preheader5.preheader.0:394  %state_10_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 10

ST_55: state_11_23 [1/1] 0.00ns
.preheader5.preheader.0:395  %state_11_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 11

ST_55: state_12_23 [1/1] 0.00ns
.preheader5.preheader.0:396  %state_12_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 12

ST_55: state_13_23 [1/1] 0.00ns
.preheader5.preheader.0:397  %state_13_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 13

ST_55: state_14_23 [1/1] 0.00ns
.preheader5.preheader.0:398  %state_14_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 14

ST_55: state_15_23 [1/1] 0.00ns
.preheader5.preheader.0:399  %state_15_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 15

ST_55: call_ret25 [9/9] 2.41ns
.preheader5.preheader.0:400  %call_ret25 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_17, i8 %state_1_17, i8 %state_2_17, i8 %state_3_17, i8 %state_4_23, i8 %state_5_23, i8 %state_6_23, i8 %state_7_23, i8 %state_8_23, i8 %state_9_23, i8 %state_10_23, i8 %state_11_23, i8 %state_12_23, i8 %state_13_23, i8 %state_14_23, i8 %state_15_23, [176 x i8]* %w, i5 6)


 <State 56>: 4.08ns
ST_56: call_ret25 [8/9] 4.08ns
.preheader5.preheader.0:400  %call_ret25 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_17, i8 %state_1_17, i8 %state_2_17, i8 %state_3_17, i8 %state_4_23, i8 %state_5_23, i8 %state_6_23, i8 %state_7_23, i8 %state_8_23, i8 %state_9_23, i8 %state_10_23, i8 %state_11_23, i8 %state_12_23, i8 %state_13_23, i8 %state_14_23, i8 %state_15_23, [176 x i8]* %w, i5 6)


 <State 57>: 4.08ns
ST_57: call_ret25 [7/9] 4.08ns
.preheader5.preheader.0:400  %call_ret25 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_17, i8 %state_1_17, i8 %state_2_17, i8 %state_3_17, i8 %state_4_23, i8 %state_5_23, i8 %state_6_23, i8 %state_7_23, i8 %state_8_23, i8 %state_9_23, i8 %state_10_23, i8 %state_11_23, i8 %state_12_23, i8 %state_13_23, i8 %state_14_23, i8 %state_15_23, [176 x i8]* %w, i5 6)


 <State 58>: 4.08ns
ST_58: call_ret25 [6/9] 4.08ns
.preheader5.preheader.0:400  %call_ret25 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_17, i8 %state_1_17, i8 %state_2_17, i8 %state_3_17, i8 %state_4_23, i8 %state_5_23, i8 %state_6_23, i8 %state_7_23, i8 %state_8_23, i8 %state_9_23, i8 %state_10_23, i8 %state_11_23, i8 %state_12_23, i8 %state_13_23, i8 %state_14_23, i8 %state_15_23, [176 x i8]* %w, i5 6)


 <State 59>: 4.08ns
ST_59: call_ret25 [5/9] 4.08ns
.preheader5.preheader.0:400  %call_ret25 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_17, i8 %state_1_17, i8 %state_2_17, i8 %state_3_17, i8 %state_4_23, i8 %state_5_23, i8 %state_6_23, i8 %state_7_23, i8 %state_8_23, i8 %state_9_23, i8 %state_10_23, i8 %state_11_23, i8 %state_12_23, i8 %state_13_23, i8 %state_14_23, i8 %state_15_23, [176 x i8]* %w, i5 6)


 <State 60>: 4.08ns
ST_60: call_ret25 [4/9] 4.08ns
.preheader5.preheader.0:400  %call_ret25 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_17, i8 %state_1_17, i8 %state_2_17, i8 %state_3_17, i8 %state_4_23, i8 %state_5_23, i8 %state_6_23, i8 %state_7_23, i8 %state_8_23, i8 %state_9_23, i8 %state_10_23, i8 %state_11_23, i8 %state_12_23, i8 %state_13_23, i8 %state_14_23, i8 %state_15_23, [176 x i8]* %w, i5 6)


 <State 61>: 4.08ns
ST_61: call_ret25 [3/9] 4.08ns
.preheader5.preheader.0:400  %call_ret25 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_17, i8 %state_1_17, i8 %state_2_17, i8 %state_3_17, i8 %state_4_23, i8 %state_5_23, i8 %state_6_23, i8 %state_7_23, i8 %state_8_23, i8 %state_9_23, i8 %state_10_23, i8 %state_11_23, i8 %state_12_23, i8 %state_13_23, i8 %state_14_23, i8 %state_15_23, [176 x i8]* %w, i5 6)


 <State 62>: 4.08ns
ST_62: call_ret25 [2/9] 4.08ns
.preheader5.preheader.0:400  %call_ret25 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_17, i8 %state_1_17, i8 %state_2_17, i8 %state_3_17, i8 %state_4_23, i8 %state_5_23, i8 %state_6_23, i8 %state_7_23, i8 %state_8_23, i8 %state_9_23, i8 %state_10_23, i8 %state_11_23, i8 %state_12_23, i8 %state_13_23, i8 %state_14_23, i8 %state_15_23, [176 x i8]* %w, i5 6)


 <State 63>: 5.12ns
ST_63: call_ret25 [1/9] 4.08ns
.preheader5.preheader.0:400  %call_ret25 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_17, i8 %state_1_17, i8 %state_2_17, i8 %state_3_17, i8 %state_4_23, i8 %state_5_23, i8 %state_6_23, i8 %state_7_23, i8 %state_8_23, i8 %state_9_23, i8 %state_10_23, i8 %state_11_23, i8 %state_12_23, i8 %state_13_23, i8 %state_14_23, i8 %state_15_23, [176 x i8]* %w, i5 6)

ST_63: state_0_18 [1/1] 0.00ns
.preheader5.preheader.0:401  %state_0_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 0

ST_63: state_1_18 [1/1] 0.00ns
.preheader5.preheader.0:402  %state_1_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 1

ST_63: state_2_18 [1/1] 0.00ns
.preheader5.preheader.0:403  %state_2_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 2

ST_63: state_3_18 [1/1] 0.00ns
.preheader5.preheader.0:404  %state_3_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 3

ST_63: state_4_24 [1/1] 0.00ns
.preheader5.preheader.0:405  %state_4_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 4

ST_63: state_5_24 [1/1] 0.00ns
.preheader5.preheader.0:406  %state_5_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 5

ST_63: state_6_24 [1/1] 0.00ns
.preheader5.preheader.0:407  %state_6_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 6

ST_63: state_7_24 [1/1] 0.00ns
.preheader5.preheader.0:408  %state_7_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 7

ST_63: state_8_24 [1/1] 0.00ns
.preheader5.preheader.0:409  %state_8_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 8

ST_63: state_9_24 [1/1] 0.00ns
.preheader5.preheader.0:410  %state_9_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 9

ST_63: state_10_24 [1/1] 0.00ns
.preheader5.preheader.0:411  %state_10_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 10

ST_63: state_11_24 [1/1] 0.00ns
.preheader5.preheader.0:412  %state_11_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 11

ST_63: state_12_24 [1/1] 0.00ns
.preheader5.preheader.0:413  %state_12_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 12

ST_63: state_13_24 [1/1] 0.00ns
.preheader5.preheader.0:414  %state_13_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 13

ST_63: state_14_24 [1/1] 0.00ns
.preheader5.preheader.0:415  %state_14_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 14

ST_63: state_15_24 [1/1] 0.00ns
.preheader5.preheader.0:416  %state_15_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 15

ST_63: call_ret26 [2/2] 1.04ns
.preheader5.preheader.0:417  %call_ret26 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_18, i8 %state_1_18, i8 %state_2_18, i8 %state_3_18, i8 %state_4_24, i8 %state_5_24, i8 %state_6_24, i8 %state_7_24, i8 %state_8_24, i8 %state_9_24, i8 %state_10_24, i8 %state_11_24, i8 %state_12_24, i8 %state_13_24, i8 %state_14_24, i8 %state_15_24)


 <State 64>: 12.35ns
ST_64: call_ret26 [1/2] 2.39ns
.preheader5.preheader.0:417  %call_ret26 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_18, i8 %state_1_18, i8 %state_2_18, i8 %state_3_18, i8 %state_4_24, i8 %state_5_24, i8 %state_6_24, i8 %state_7_24, i8 %state_8_24, i8 %state_9_24, i8 %state_10_24, i8 %state_11_24, i8 %state_12_24, i8 %state_13_24, i8 %state_14_24, i8 %state_15_24)

ST_64: state_0_19 [1/1] 0.00ns
.preheader5.preheader.0:418  %state_0_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 0

ST_64: state_1_19 [1/1] 0.00ns
.preheader5.preheader.0:419  %state_1_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 1

ST_64: state_2_19 [1/1] 0.00ns
.preheader5.preheader.0:420  %state_2_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 2

ST_64: state_3_19 [1/1] 0.00ns
.preheader5.preheader.0:421  %state_3_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 3

ST_64: state_4_25 [1/1] 0.00ns
.preheader5.preheader.0:422  %state_4_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 4

ST_64: state_5_25 [1/1] 0.00ns
.preheader5.preheader.0:423  %state_5_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 5

ST_64: state_6_25 [1/1] 0.00ns
.preheader5.preheader.0:424  %state_6_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 6

ST_64: state_7_25 [1/1] 0.00ns
.preheader5.preheader.0:425  %state_7_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 7

ST_64: state_8_25 [1/1] 0.00ns
.preheader5.preheader.0:426  %state_8_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 8

ST_64: state_9_25 [1/1] 0.00ns
.preheader5.preheader.0:427  %state_9_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 9

ST_64: state_10_25 [1/1] 0.00ns
.preheader5.preheader.0:428  %state_10_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 10

ST_64: state_11_25 [1/1] 0.00ns
.preheader5.preheader.0:429  %state_11_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 11

ST_64: state_12_25 [1/1] 0.00ns
.preheader5.preheader.0:430  %state_12_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 12

ST_64: state_13_25 [1/1] 0.00ns
.preheader5.preheader.0:431  %state_13_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 13

ST_64: state_14_25 [1/1] 0.00ns
.preheader5.preheader.0:432  %state_14_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 14

ST_64: state_15_25 [1/1] 0.00ns
.preheader5.preheader.0:433  %state_15_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret26, 15

ST_64: call_ret27 [1/1] 1.04ns
.preheader5.preheader.0:434  %call_ret27 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_shift_rows(i8 %state_4_25, i8 %state_5_25, i8 %state_6_25, i8 %state_7_25, i8 %state_8_25, i8 %state_9_25, i8 %state_10_25, i8 %state_11_25, i8 %state_12_25, i8 %state_13_25, i8 %state_14_25, i8 %state_15_25)

ST_64: state_4_26 [1/1] 0.00ns
.preheader5.preheader.0:435  %state_4_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret27, 0

ST_64: state_5_26 [1/1] 0.00ns
.preheader5.preheader.0:436  %state_5_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret27, 1

ST_64: state_6_26 [1/1] 0.00ns
.preheader5.preheader.0:437  %state_6_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret27, 2

ST_64: state_7_26 [1/1] 0.00ns
.preheader5.preheader.0:438  %state_7_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret27, 3

ST_64: state_8_26 [1/1] 0.00ns
.preheader5.preheader.0:439  %state_8_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret27, 4

ST_64: state_9_26 [1/1] 0.00ns
.preheader5.preheader.0:440  %state_9_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret27, 5

ST_64: state_10_26 [1/1] 0.00ns
.preheader5.preheader.0:441  %state_10_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret27, 6

ST_64: state_11_26 [1/1] 0.00ns
.preheader5.preheader.0:442  %state_11_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret27, 7

ST_64: state_12_26 [1/1] 0.00ns
.preheader5.preheader.0:443  %state_12_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret27, 8

ST_64: state_13_26 [1/1] 0.00ns
.preheader5.preheader.0:444  %state_13_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret27, 9

ST_64: state_14_26 [1/1] 0.00ns
.preheader5.preheader.0:445  %state_14_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret27, 10

ST_64: state_15_26 [1/1] 0.00ns
.preheader5.preheader.0:446  %state_15_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret27, 11

ST_64: call_ret28 [1/1] 6.52ns
.preheader5.preheader.0:447  %call_ret28 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_mix_columns(i8 %state_0_19, i8 %state_1_19, i8 %state_2_19, i8 %state_3_19, i8 %state_4_26, i8 %state_5_26, i8 %state_6_26, i8 %state_7_26, i8 %state_8_26, i8 %state_9_26, i8 %state_10_26, i8 %state_11_26, i8 %state_12_26, i8 %state_13_26, i8 %state_14_26, i8 %state_15_26)

ST_64: state_0_20 [1/1] 0.00ns
.preheader5.preheader.0:448  %state_0_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 0

ST_64: state_1_20 [1/1] 0.00ns
.preheader5.preheader.0:449  %state_1_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 1

ST_64: state_2_20 [1/1] 0.00ns
.preheader5.preheader.0:450  %state_2_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 2

ST_64: state_3_20 [1/1] 0.00ns
.preheader5.preheader.0:451  %state_3_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 3

ST_64: state_4_27 [1/1] 0.00ns
.preheader5.preheader.0:452  %state_4_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 4

ST_64: state_5_27 [1/1] 0.00ns
.preheader5.preheader.0:453  %state_5_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 5

ST_64: state_6_27 [1/1] 0.00ns
.preheader5.preheader.0:454  %state_6_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 6

ST_64: state_7_27 [1/1] 0.00ns
.preheader5.preheader.0:455  %state_7_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 7

ST_64: state_8_27 [1/1] 0.00ns
.preheader5.preheader.0:456  %state_8_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 8

ST_64: state_9_27 [1/1] 0.00ns
.preheader5.preheader.0:457  %state_9_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 9

ST_64: state_10_27 [1/1] 0.00ns
.preheader5.preheader.0:458  %state_10_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 10

ST_64: state_11_27 [1/1] 0.00ns
.preheader5.preheader.0:459  %state_11_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 11

ST_64: state_12_27 [1/1] 0.00ns
.preheader5.preheader.0:460  %state_12_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 12

ST_64: state_13_27 [1/1] 0.00ns
.preheader5.preheader.0:461  %state_13_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 13

ST_64: state_14_27 [1/1] 0.00ns
.preheader5.preheader.0:462  %state_14_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 14

ST_64: state_15_27 [1/1] 0.00ns
.preheader5.preheader.0:463  %state_15_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret28, 15

ST_64: call_ret29 [9/9] 2.41ns
.preheader5.preheader.0:464  %call_ret29 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_20, i8 %state_1_20, i8 %state_2_20, i8 %state_3_20, i8 %state_4_27, i8 %state_5_27, i8 %state_6_27, i8 %state_7_27, i8 %state_8_27, i8 %state_9_27, i8 %state_10_27, i8 %state_11_27, i8 %state_12_27, i8 %state_13_27, i8 %state_14_27, i8 %state_15_27, [176 x i8]* %w, i5 7)


 <State 65>: 4.08ns
ST_65: call_ret29 [8/9] 4.08ns
.preheader5.preheader.0:464  %call_ret29 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_20, i8 %state_1_20, i8 %state_2_20, i8 %state_3_20, i8 %state_4_27, i8 %state_5_27, i8 %state_6_27, i8 %state_7_27, i8 %state_8_27, i8 %state_9_27, i8 %state_10_27, i8 %state_11_27, i8 %state_12_27, i8 %state_13_27, i8 %state_14_27, i8 %state_15_27, [176 x i8]* %w, i5 7)


 <State 66>: 4.08ns
ST_66: call_ret29 [7/9] 4.08ns
.preheader5.preheader.0:464  %call_ret29 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_20, i8 %state_1_20, i8 %state_2_20, i8 %state_3_20, i8 %state_4_27, i8 %state_5_27, i8 %state_6_27, i8 %state_7_27, i8 %state_8_27, i8 %state_9_27, i8 %state_10_27, i8 %state_11_27, i8 %state_12_27, i8 %state_13_27, i8 %state_14_27, i8 %state_15_27, [176 x i8]* %w, i5 7)


 <State 67>: 4.08ns
ST_67: call_ret29 [6/9] 4.08ns
.preheader5.preheader.0:464  %call_ret29 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_20, i8 %state_1_20, i8 %state_2_20, i8 %state_3_20, i8 %state_4_27, i8 %state_5_27, i8 %state_6_27, i8 %state_7_27, i8 %state_8_27, i8 %state_9_27, i8 %state_10_27, i8 %state_11_27, i8 %state_12_27, i8 %state_13_27, i8 %state_14_27, i8 %state_15_27, [176 x i8]* %w, i5 7)


 <State 68>: 4.08ns
ST_68: call_ret29 [5/9] 4.08ns
.preheader5.preheader.0:464  %call_ret29 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_20, i8 %state_1_20, i8 %state_2_20, i8 %state_3_20, i8 %state_4_27, i8 %state_5_27, i8 %state_6_27, i8 %state_7_27, i8 %state_8_27, i8 %state_9_27, i8 %state_10_27, i8 %state_11_27, i8 %state_12_27, i8 %state_13_27, i8 %state_14_27, i8 %state_15_27, [176 x i8]* %w, i5 7)


 <State 69>: 4.08ns
ST_69: call_ret29 [4/9] 4.08ns
.preheader5.preheader.0:464  %call_ret29 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_20, i8 %state_1_20, i8 %state_2_20, i8 %state_3_20, i8 %state_4_27, i8 %state_5_27, i8 %state_6_27, i8 %state_7_27, i8 %state_8_27, i8 %state_9_27, i8 %state_10_27, i8 %state_11_27, i8 %state_12_27, i8 %state_13_27, i8 %state_14_27, i8 %state_15_27, [176 x i8]* %w, i5 7)


 <State 70>: 4.08ns
ST_70: call_ret29 [3/9] 4.08ns
.preheader5.preheader.0:464  %call_ret29 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_20, i8 %state_1_20, i8 %state_2_20, i8 %state_3_20, i8 %state_4_27, i8 %state_5_27, i8 %state_6_27, i8 %state_7_27, i8 %state_8_27, i8 %state_9_27, i8 %state_10_27, i8 %state_11_27, i8 %state_12_27, i8 %state_13_27, i8 %state_14_27, i8 %state_15_27, [176 x i8]* %w, i5 7)


 <State 71>: 4.08ns
ST_71: call_ret29 [2/9] 4.08ns
.preheader5.preheader.0:464  %call_ret29 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_20, i8 %state_1_20, i8 %state_2_20, i8 %state_3_20, i8 %state_4_27, i8 %state_5_27, i8 %state_6_27, i8 %state_7_27, i8 %state_8_27, i8 %state_9_27, i8 %state_10_27, i8 %state_11_27, i8 %state_12_27, i8 %state_13_27, i8 %state_14_27, i8 %state_15_27, [176 x i8]* %w, i5 7)


 <State 72>: 5.12ns
ST_72: call_ret29 [1/9] 4.08ns
.preheader5.preheader.0:464  %call_ret29 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_20, i8 %state_1_20, i8 %state_2_20, i8 %state_3_20, i8 %state_4_27, i8 %state_5_27, i8 %state_6_27, i8 %state_7_27, i8 %state_8_27, i8 %state_9_27, i8 %state_10_27, i8 %state_11_27, i8 %state_12_27, i8 %state_13_27, i8 %state_14_27, i8 %state_15_27, [176 x i8]* %w, i5 7)

ST_72: state_0_21 [1/1] 0.00ns
.preheader5.preheader.0:465  %state_0_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 0

ST_72: state_1_21 [1/1] 0.00ns
.preheader5.preheader.0:466  %state_1_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 1

ST_72: state_2_21 [1/1] 0.00ns
.preheader5.preheader.0:467  %state_2_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 2

ST_72: state_3_21 [1/1] 0.00ns
.preheader5.preheader.0:468  %state_3_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 3

ST_72: state_4_28 [1/1] 0.00ns
.preheader5.preheader.0:469  %state_4_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 4

ST_72: state_5_28 [1/1] 0.00ns
.preheader5.preheader.0:470  %state_5_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 5

ST_72: state_6_28 [1/1] 0.00ns
.preheader5.preheader.0:471  %state_6_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 6

ST_72: state_7_28 [1/1] 0.00ns
.preheader5.preheader.0:472  %state_7_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 7

ST_72: state_8_28 [1/1] 0.00ns
.preheader5.preheader.0:473  %state_8_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 8

ST_72: state_9_28 [1/1] 0.00ns
.preheader5.preheader.0:474  %state_9_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 9

ST_72: state_10_28 [1/1] 0.00ns
.preheader5.preheader.0:475  %state_10_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 10

ST_72: state_11_28 [1/1] 0.00ns
.preheader5.preheader.0:476  %state_11_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 11

ST_72: state_12_28 [1/1] 0.00ns
.preheader5.preheader.0:477  %state_12_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 12

ST_72: state_13_28 [1/1] 0.00ns
.preheader5.preheader.0:478  %state_13_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 13

ST_72: state_14_28 [1/1] 0.00ns
.preheader5.preheader.0:479  %state_14_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 14

ST_72: state_15_28 [1/1] 0.00ns
.preheader5.preheader.0:480  %state_15_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret29, 15

ST_72: call_ret30 [2/2] 1.04ns
.preheader5.preheader.0:481  %call_ret30 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_21, i8 %state_1_21, i8 %state_2_21, i8 %state_3_21, i8 %state_4_28, i8 %state_5_28, i8 %state_6_28, i8 %state_7_28, i8 %state_8_28, i8 %state_9_28, i8 %state_10_28, i8 %state_11_28, i8 %state_12_28, i8 %state_13_28, i8 %state_14_28, i8 %state_15_28)


 <State 73>: 12.35ns
ST_73: call_ret30 [1/2] 2.39ns
.preheader5.preheader.0:481  %call_ret30 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_21, i8 %state_1_21, i8 %state_2_21, i8 %state_3_21, i8 %state_4_28, i8 %state_5_28, i8 %state_6_28, i8 %state_7_28, i8 %state_8_28, i8 %state_9_28, i8 %state_10_28, i8 %state_11_28, i8 %state_12_28, i8 %state_13_28, i8 %state_14_28, i8 %state_15_28)

ST_73: state_0_22 [1/1] 0.00ns
.preheader5.preheader.0:482  %state_0_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 0

ST_73: state_1_22 [1/1] 0.00ns
.preheader5.preheader.0:483  %state_1_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 1

ST_73: state_2_22 [1/1] 0.00ns
.preheader5.preheader.0:484  %state_2_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 2

ST_73: state_3_22 [1/1] 0.00ns
.preheader5.preheader.0:485  %state_3_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 3

ST_73: state_4_29 [1/1] 0.00ns
.preheader5.preheader.0:486  %state_4_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 4

ST_73: state_5_29 [1/1] 0.00ns
.preheader5.preheader.0:487  %state_5_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 5

ST_73: state_6_29 [1/1] 0.00ns
.preheader5.preheader.0:488  %state_6_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 6

ST_73: state_7_29 [1/1] 0.00ns
.preheader5.preheader.0:489  %state_7_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 7

ST_73: state_8_29 [1/1] 0.00ns
.preheader5.preheader.0:490  %state_8_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 8

ST_73: state_9_29 [1/1] 0.00ns
.preheader5.preheader.0:491  %state_9_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 9

ST_73: state_10_29 [1/1] 0.00ns
.preheader5.preheader.0:492  %state_10_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 10

ST_73: state_11_29 [1/1] 0.00ns
.preheader5.preheader.0:493  %state_11_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 11

ST_73: state_12_29 [1/1] 0.00ns
.preheader5.preheader.0:494  %state_12_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 12

ST_73: state_13_29 [1/1] 0.00ns
.preheader5.preheader.0:495  %state_13_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 13

ST_73: state_14_29 [1/1] 0.00ns
.preheader5.preheader.0:496  %state_14_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 14

ST_73: state_15_29 [1/1] 0.00ns
.preheader5.preheader.0:497  %state_15_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret30, 15

ST_73: call_ret31 [1/1] 1.04ns
.preheader5.preheader.0:498  %call_ret31 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_shift_rows(i8 %state_4_29, i8 %state_5_29, i8 %state_6_29, i8 %state_7_29, i8 %state_8_29, i8 %state_9_29, i8 %state_10_29, i8 %state_11_29, i8 %state_12_29, i8 %state_13_29, i8 %state_14_29, i8 %state_15_29)

ST_73: state_4_30 [1/1] 0.00ns
.preheader5.preheader.0:499  %state_4_30 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret31, 0

ST_73: state_5_30 [1/1] 0.00ns
.preheader5.preheader.0:500  %state_5_30 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret31, 1

ST_73: state_6_30 [1/1] 0.00ns
.preheader5.preheader.0:501  %state_6_30 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret31, 2

ST_73: state_7_30 [1/1] 0.00ns
.preheader5.preheader.0:502  %state_7_30 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret31, 3

ST_73: state_8_30 [1/1] 0.00ns
.preheader5.preheader.0:503  %state_8_30 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret31, 4

ST_73: state_9_30 [1/1] 0.00ns
.preheader5.preheader.0:504  %state_9_30 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret31, 5

ST_73: state_10_30 [1/1] 0.00ns
.preheader5.preheader.0:505  %state_10_30 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret31, 6

ST_73: state_11_30 [1/1] 0.00ns
.preheader5.preheader.0:506  %state_11_30 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret31, 7

ST_73: state_12_30 [1/1] 0.00ns
.preheader5.preheader.0:507  %state_12_30 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret31, 8

ST_73: state_13_30 [1/1] 0.00ns
.preheader5.preheader.0:508  %state_13_30 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret31, 9

ST_73: state_14_30 [1/1] 0.00ns
.preheader5.preheader.0:509  %state_14_30 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret31, 10

ST_73: state_15_30 [1/1] 0.00ns
.preheader5.preheader.0:510  %state_15_30 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret31, 11

ST_73: call_ret32 [1/1] 6.52ns
.preheader5.preheader.0:511  %call_ret32 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_mix_columns(i8 %state_0_22, i8 %state_1_22, i8 %state_2_22, i8 %state_3_22, i8 %state_4_30, i8 %state_5_30, i8 %state_6_30, i8 %state_7_30, i8 %state_8_30, i8 %state_9_30, i8 %state_10_30, i8 %state_11_30, i8 %state_12_30, i8 %state_13_30, i8 %state_14_30, i8 %state_15_30)

ST_73: state_0_23 [1/1] 0.00ns
.preheader5.preheader.0:512  %state_0_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 0

ST_73: state_1_23 [1/1] 0.00ns
.preheader5.preheader.0:513  %state_1_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 1

ST_73: state_2_23 [1/1] 0.00ns
.preheader5.preheader.0:514  %state_2_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 2

ST_73: state_3_23 [1/1] 0.00ns
.preheader5.preheader.0:515  %state_3_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 3

ST_73: state_4_31 [1/1] 0.00ns
.preheader5.preheader.0:516  %state_4_31 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 4

ST_73: state_5_31 [1/1] 0.00ns
.preheader5.preheader.0:517  %state_5_31 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 5

ST_73: state_6_31 [1/1] 0.00ns
.preheader5.preheader.0:518  %state_6_31 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 6

ST_73: state_7_31 [1/1] 0.00ns
.preheader5.preheader.0:519  %state_7_31 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 7

ST_73: state_8_31 [1/1] 0.00ns
.preheader5.preheader.0:520  %state_8_31 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 8

ST_73: state_9_31 [1/1] 0.00ns
.preheader5.preheader.0:521  %state_9_31 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 9

ST_73: state_10_31 [1/1] 0.00ns
.preheader5.preheader.0:522  %state_10_31 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 10

ST_73: state_11_31 [1/1] 0.00ns
.preheader5.preheader.0:523  %state_11_31 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 11

ST_73: state_12_31 [1/1] 0.00ns
.preheader5.preheader.0:524  %state_12_31 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 12

ST_73: state_13_31 [1/1] 0.00ns
.preheader5.preheader.0:525  %state_13_31 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 13

ST_73: state_14_31 [1/1] 0.00ns
.preheader5.preheader.0:526  %state_14_31 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 14

ST_73: state_15_31 [1/1] 0.00ns
.preheader5.preheader.0:527  %state_15_31 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret32, 15

ST_73: call_ret33 [9/9] 2.41ns
.preheader5.preheader.0:528  %call_ret33 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_23, i8 %state_1_23, i8 %state_2_23, i8 %state_3_23, i8 %state_4_31, i8 %state_5_31, i8 %state_6_31, i8 %state_7_31, i8 %state_8_31, i8 %state_9_31, i8 %state_10_31, i8 %state_11_31, i8 %state_12_31, i8 %state_13_31, i8 %state_14_31, i8 %state_15_31, [176 x i8]* %w, i5 8)


 <State 74>: 4.08ns
ST_74: call_ret33 [8/9] 4.08ns
.preheader5.preheader.0:528  %call_ret33 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_23, i8 %state_1_23, i8 %state_2_23, i8 %state_3_23, i8 %state_4_31, i8 %state_5_31, i8 %state_6_31, i8 %state_7_31, i8 %state_8_31, i8 %state_9_31, i8 %state_10_31, i8 %state_11_31, i8 %state_12_31, i8 %state_13_31, i8 %state_14_31, i8 %state_15_31, [176 x i8]* %w, i5 8)


 <State 75>: 4.08ns
ST_75: call_ret33 [7/9] 4.08ns
.preheader5.preheader.0:528  %call_ret33 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_23, i8 %state_1_23, i8 %state_2_23, i8 %state_3_23, i8 %state_4_31, i8 %state_5_31, i8 %state_6_31, i8 %state_7_31, i8 %state_8_31, i8 %state_9_31, i8 %state_10_31, i8 %state_11_31, i8 %state_12_31, i8 %state_13_31, i8 %state_14_31, i8 %state_15_31, [176 x i8]* %w, i5 8)


 <State 76>: 4.08ns
ST_76: call_ret33 [6/9] 4.08ns
.preheader5.preheader.0:528  %call_ret33 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_23, i8 %state_1_23, i8 %state_2_23, i8 %state_3_23, i8 %state_4_31, i8 %state_5_31, i8 %state_6_31, i8 %state_7_31, i8 %state_8_31, i8 %state_9_31, i8 %state_10_31, i8 %state_11_31, i8 %state_12_31, i8 %state_13_31, i8 %state_14_31, i8 %state_15_31, [176 x i8]* %w, i5 8)


 <State 77>: 4.08ns
ST_77: call_ret33 [5/9] 4.08ns
.preheader5.preheader.0:528  %call_ret33 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_23, i8 %state_1_23, i8 %state_2_23, i8 %state_3_23, i8 %state_4_31, i8 %state_5_31, i8 %state_6_31, i8 %state_7_31, i8 %state_8_31, i8 %state_9_31, i8 %state_10_31, i8 %state_11_31, i8 %state_12_31, i8 %state_13_31, i8 %state_14_31, i8 %state_15_31, [176 x i8]* %w, i5 8)


 <State 78>: 4.08ns
ST_78: call_ret33 [4/9] 4.08ns
.preheader5.preheader.0:528  %call_ret33 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_23, i8 %state_1_23, i8 %state_2_23, i8 %state_3_23, i8 %state_4_31, i8 %state_5_31, i8 %state_6_31, i8 %state_7_31, i8 %state_8_31, i8 %state_9_31, i8 %state_10_31, i8 %state_11_31, i8 %state_12_31, i8 %state_13_31, i8 %state_14_31, i8 %state_15_31, [176 x i8]* %w, i5 8)


 <State 79>: 4.08ns
ST_79: call_ret33 [3/9] 4.08ns
.preheader5.preheader.0:528  %call_ret33 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_23, i8 %state_1_23, i8 %state_2_23, i8 %state_3_23, i8 %state_4_31, i8 %state_5_31, i8 %state_6_31, i8 %state_7_31, i8 %state_8_31, i8 %state_9_31, i8 %state_10_31, i8 %state_11_31, i8 %state_12_31, i8 %state_13_31, i8 %state_14_31, i8 %state_15_31, [176 x i8]* %w, i5 8)


 <State 80>: 4.08ns
ST_80: call_ret33 [2/9] 4.08ns
.preheader5.preheader.0:528  %call_ret33 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_23, i8 %state_1_23, i8 %state_2_23, i8 %state_3_23, i8 %state_4_31, i8 %state_5_31, i8 %state_6_31, i8 %state_7_31, i8 %state_8_31, i8 %state_9_31, i8 %state_10_31, i8 %state_11_31, i8 %state_12_31, i8 %state_13_31, i8 %state_14_31, i8 %state_15_31, [176 x i8]* %w, i5 8)


 <State 81>: 5.12ns
ST_81: call_ret33 [1/9] 4.08ns
.preheader5.preheader.0:528  %call_ret33 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_23, i8 %state_1_23, i8 %state_2_23, i8 %state_3_23, i8 %state_4_31, i8 %state_5_31, i8 %state_6_31, i8 %state_7_31, i8 %state_8_31, i8 %state_9_31, i8 %state_10_31, i8 %state_11_31, i8 %state_12_31, i8 %state_13_31, i8 %state_14_31, i8 %state_15_31, [176 x i8]* %w, i5 8)

ST_81: state_0_24 [1/1] 0.00ns
.preheader5.preheader.0:529  %state_0_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 0

ST_81: state_1_24 [1/1] 0.00ns
.preheader5.preheader.0:530  %state_1_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 1

ST_81: state_2_24 [1/1] 0.00ns
.preheader5.preheader.0:531  %state_2_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 2

ST_81: state_3_24 [1/1] 0.00ns
.preheader5.preheader.0:532  %state_3_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 3

ST_81: state_4_32 [1/1] 0.00ns
.preheader5.preheader.0:533  %state_4_32 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 4

ST_81: state_5_32 [1/1] 0.00ns
.preheader5.preheader.0:534  %state_5_32 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 5

ST_81: state_6_32 [1/1] 0.00ns
.preheader5.preheader.0:535  %state_6_32 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 6

ST_81: state_7_32 [1/1] 0.00ns
.preheader5.preheader.0:536  %state_7_32 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 7

ST_81: state_8_32 [1/1] 0.00ns
.preheader5.preheader.0:537  %state_8_32 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 8

ST_81: state_9_32 [1/1] 0.00ns
.preheader5.preheader.0:538  %state_9_32 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 9

ST_81: state_10_32 [1/1] 0.00ns
.preheader5.preheader.0:539  %state_10_32 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 10

ST_81: state_11_32 [1/1] 0.00ns
.preheader5.preheader.0:540  %state_11_32 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 11

ST_81: state_12_32 [1/1] 0.00ns
.preheader5.preheader.0:541  %state_12_32 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 12

ST_81: state_13_32 [1/1] 0.00ns
.preheader5.preheader.0:542  %state_13_32 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 13

ST_81: state_14_32 [1/1] 0.00ns
.preheader5.preheader.0:543  %state_14_32 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 14

ST_81: state_15_32 [1/1] 0.00ns
.preheader5.preheader.0:544  %state_15_32 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret33, 15

ST_81: call_ret34 [2/2] 1.04ns
.preheader5.preheader.0:545  %call_ret34 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_24, i8 %state_1_24, i8 %state_2_24, i8 %state_3_24, i8 %state_4_32, i8 %state_5_32, i8 %state_6_32, i8 %state_7_32, i8 %state_8_32, i8 %state_9_32, i8 %state_10_32, i8 %state_11_32, i8 %state_12_32, i8 %state_13_32, i8 %state_14_32, i8 %state_15_32)


 <State 82>: 12.35ns
ST_82: call_ret34 [1/2] 2.39ns
.preheader5.preheader.0:545  %call_ret34 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_24, i8 %state_1_24, i8 %state_2_24, i8 %state_3_24, i8 %state_4_32, i8 %state_5_32, i8 %state_6_32, i8 %state_7_32, i8 %state_8_32, i8 %state_9_32, i8 %state_10_32, i8 %state_11_32, i8 %state_12_32, i8 %state_13_32, i8 %state_14_32, i8 %state_15_32)

ST_82: state_0_25 [1/1] 0.00ns
.preheader5.preheader.0:546  %state_0_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 0

ST_82: state_1_25 [1/1] 0.00ns
.preheader5.preheader.0:547  %state_1_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 1

ST_82: state_2_25 [1/1] 0.00ns
.preheader5.preheader.0:548  %state_2_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 2

ST_82: state_3_25 [1/1] 0.00ns
.preheader5.preheader.0:549  %state_3_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 3

ST_82: state_4_33 [1/1] 0.00ns
.preheader5.preheader.0:550  %state_4_33 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 4

ST_82: state_5_33 [1/1] 0.00ns
.preheader5.preheader.0:551  %state_5_33 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 5

ST_82: state_6_33 [1/1] 0.00ns
.preheader5.preheader.0:552  %state_6_33 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 6

ST_82: state_7_33 [1/1] 0.00ns
.preheader5.preheader.0:553  %state_7_33 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 7

ST_82: state_8_33 [1/1] 0.00ns
.preheader5.preheader.0:554  %state_8_33 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 8

ST_82: state_9_33 [1/1] 0.00ns
.preheader5.preheader.0:555  %state_9_33 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 9

ST_82: state_10_33 [1/1] 0.00ns
.preheader5.preheader.0:556  %state_10_33 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 10

ST_82: state_11_33 [1/1] 0.00ns
.preheader5.preheader.0:557  %state_11_33 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 11

ST_82: state_12_33 [1/1] 0.00ns
.preheader5.preheader.0:558  %state_12_33 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 12

ST_82: state_13_33 [1/1] 0.00ns
.preheader5.preheader.0:559  %state_13_33 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 13

ST_82: state_14_33 [1/1] 0.00ns
.preheader5.preheader.0:560  %state_14_33 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 14

ST_82: state_15_33 [1/1] 0.00ns
.preheader5.preheader.0:561  %state_15_33 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret34, 15

ST_82: call_ret35 [1/1] 1.04ns
.preheader5.preheader.0:562  %call_ret35 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_shift_rows(i8 %state_4_33, i8 %state_5_33, i8 %state_6_33, i8 %state_7_33, i8 %state_8_33, i8 %state_9_33, i8 %state_10_33, i8 %state_11_33, i8 %state_12_33, i8 %state_13_33, i8 %state_14_33, i8 %state_15_33)

ST_82: state_4_34 [1/1] 0.00ns
.preheader5.preheader.0:563  %state_4_34 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret35, 0

ST_82: state_5_34 [1/1] 0.00ns
.preheader5.preheader.0:564  %state_5_34 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret35, 1

ST_82: state_6_34 [1/1] 0.00ns
.preheader5.preheader.0:565  %state_6_34 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret35, 2

ST_82: state_7_34 [1/1] 0.00ns
.preheader5.preheader.0:566  %state_7_34 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret35, 3

ST_82: state_8_34 [1/1] 0.00ns
.preheader5.preheader.0:567  %state_8_34 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret35, 4

ST_82: state_9_34 [1/1] 0.00ns
.preheader5.preheader.0:568  %state_9_34 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret35, 5

ST_82: state_10_34 [1/1] 0.00ns
.preheader5.preheader.0:569  %state_10_34 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret35, 6

ST_82: state_11_34 [1/1] 0.00ns
.preheader5.preheader.0:570  %state_11_34 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret35, 7

ST_82: state_12_34 [1/1] 0.00ns
.preheader5.preheader.0:571  %state_12_34 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret35, 8

ST_82: state_13_34 [1/1] 0.00ns
.preheader5.preheader.0:572  %state_13_34 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret35, 9

ST_82: state_14_34 [1/1] 0.00ns
.preheader5.preheader.0:573  %state_14_34 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret35, 10

ST_82: state_15_34 [1/1] 0.00ns
.preheader5.preheader.0:574  %state_15_34 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret35, 11

ST_82: call_ret [1/1] 6.52ns
.preheader5.preheader.0:575  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_mix_columns(i8 %state_0_25, i8 %state_1_25, i8 %state_2_25, i8 %state_3_25, i8 %state_4_34, i8 %state_5_34, i8 %state_6_34, i8 %state_7_34, i8 %state_8_34, i8 %state_9_34, i8 %state_10_34, i8 %state_11_34, i8 %state_12_34, i8 %state_13_34, i8 %state_14_34, i8 %state_15_34)

ST_82: state_0_26 [1/1] 0.00ns
.preheader5.preheader.0:576  %state_0_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 0

ST_82: state_1_26 [1/1] 0.00ns
.preheader5.preheader.0:577  %state_1_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 1

ST_82: state_2_26 [1/1] 0.00ns
.preheader5.preheader.0:578  %state_2_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 2

ST_82: state_3_26 [1/1] 0.00ns
.preheader5.preheader.0:579  %state_3_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 3

ST_82: state_4_35 [1/1] 0.00ns
.preheader5.preheader.0:580  %state_4_35 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 4

ST_82: state_5_35 [1/1] 0.00ns
.preheader5.preheader.0:581  %state_5_35 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 5

ST_82: state_6_35 [1/1] 0.00ns
.preheader5.preheader.0:582  %state_6_35 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 6

ST_82: state_7_35 [1/1] 0.00ns
.preheader5.preheader.0:583  %state_7_35 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 7

ST_82: state_8_35 [1/1] 0.00ns
.preheader5.preheader.0:584  %state_8_35 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 8

ST_82: state_9_35 [1/1] 0.00ns
.preheader5.preheader.0:585  %state_9_35 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 9

ST_82: state_10_35 [1/1] 0.00ns
.preheader5.preheader.0:586  %state_10_35 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 10

ST_82: state_11_35 [1/1] 0.00ns
.preheader5.preheader.0:587  %state_11_35 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 11

ST_82: state_12_35 [1/1] 0.00ns
.preheader5.preheader.0:588  %state_12_35 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 12

ST_82: state_13_35 [1/1] 0.00ns
.preheader5.preheader.0:589  %state_13_35 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 13

ST_82: state_14_35 [1/1] 0.00ns
.preheader5.preheader.0:590  %state_14_35 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 14

ST_82: state_15_35 [1/1] 0.00ns
.preheader5.preheader.0:591  %state_15_35 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 15

ST_82: call_ret36 [9/9] 2.41ns
.preheader5.preheader.0:592  %call_ret36 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_26, i8 %state_1_26, i8 %state_2_26, i8 %state_3_26, i8 %state_4_35, i8 %state_5_35, i8 %state_6_35, i8 %state_7_35, i8 %state_8_35, i8 %state_9_35, i8 %state_10_35, i8 %state_11_35, i8 %state_12_35, i8 %state_13_35, i8 %state_14_35, i8 %state_15_35, [176 x i8]* %w, i5 9)


 <State 83>: 4.08ns
ST_83: call_ret36 [8/9] 4.08ns
.preheader5.preheader.0:592  %call_ret36 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_26, i8 %state_1_26, i8 %state_2_26, i8 %state_3_26, i8 %state_4_35, i8 %state_5_35, i8 %state_6_35, i8 %state_7_35, i8 %state_8_35, i8 %state_9_35, i8 %state_10_35, i8 %state_11_35, i8 %state_12_35, i8 %state_13_35, i8 %state_14_35, i8 %state_15_35, [176 x i8]* %w, i5 9)


 <State 84>: 4.08ns
ST_84: call_ret36 [7/9] 4.08ns
.preheader5.preheader.0:592  %call_ret36 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_26, i8 %state_1_26, i8 %state_2_26, i8 %state_3_26, i8 %state_4_35, i8 %state_5_35, i8 %state_6_35, i8 %state_7_35, i8 %state_8_35, i8 %state_9_35, i8 %state_10_35, i8 %state_11_35, i8 %state_12_35, i8 %state_13_35, i8 %state_14_35, i8 %state_15_35, [176 x i8]* %w, i5 9)


 <State 85>: 4.08ns
ST_85: call_ret36 [6/9] 4.08ns
.preheader5.preheader.0:592  %call_ret36 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_26, i8 %state_1_26, i8 %state_2_26, i8 %state_3_26, i8 %state_4_35, i8 %state_5_35, i8 %state_6_35, i8 %state_7_35, i8 %state_8_35, i8 %state_9_35, i8 %state_10_35, i8 %state_11_35, i8 %state_12_35, i8 %state_13_35, i8 %state_14_35, i8 %state_15_35, [176 x i8]* %w, i5 9)


 <State 86>: 4.08ns
ST_86: call_ret36 [5/9] 4.08ns
.preheader5.preheader.0:592  %call_ret36 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_26, i8 %state_1_26, i8 %state_2_26, i8 %state_3_26, i8 %state_4_35, i8 %state_5_35, i8 %state_6_35, i8 %state_7_35, i8 %state_8_35, i8 %state_9_35, i8 %state_10_35, i8 %state_11_35, i8 %state_12_35, i8 %state_13_35, i8 %state_14_35, i8 %state_15_35, [176 x i8]* %w, i5 9)


 <State 87>: 4.08ns
ST_87: call_ret36 [4/9] 4.08ns
.preheader5.preheader.0:592  %call_ret36 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_26, i8 %state_1_26, i8 %state_2_26, i8 %state_3_26, i8 %state_4_35, i8 %state_5_35, i8 %state_6_35, i8 %state_7_35, i8 %state_8_35, i8 %state_9_35, i8 %state_10_35, i8 %state_11_35, i8 %state_12_35, i8 %state_13_35, i8 %state_14_35, i8 %state_15_35, [176 x i8]* %w, i5 9)


 <State 88>: 4.08ns
ST_88: call_ret36 [3/9] 4.08ns
.preheader5.preheader.0:592  %call_ret36 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_26, i8 %state_1_26, i8 %state_2_26, i8 %state_3_26, i8 %state_4_35, i8 %state_5_35, i8 %state_6_35, i8 %state_7_35, i8 %state_8_35, i8 %state_9_35, i8 %state_10_35, i8 %state_11_35, i8 %state_12_35, i8 %state_13_35, i8 %state_14_35, i8 %state_15_35, [176 x i8]* %w, i5 9)


 <State 89>: 4.08ns
ST_89: call_ret36 [2/9] 4.08ns
.preheader5.preheader.0:592  %call_ret36 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_26, i8 %state_1_26, i8 %state_2_26, i8 %state_3_26, i8 %state_4_35, i8 %state_5_35, i8 %state_6_35, i8 %state_7_35, i8 %state_8_35, i8 %state_9_35, i8 %state_10_35, i8 %state_11_35, i8 %state_12_35, i8 %state_13_35, i8 %state_14_35, i8 %state_15_35, [176 x i8]* %w, i5 9)


 <State 90>: 5.12ns
ST_90: call_ret36 [1/9] 4.08ns
.preheader5.preheader.0:592  %call_ret36 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_26, i8 %state_1_26, i8 %state_2_26, i8 %state_3_26, i8 %state_4_35, i8 %state_5_35, i8 %state_6_35, i8 %state_7_35, i8 %state_8_35, i8 %state_9_35, i8 %state_10_35, i8 %state_11_35, i8 %state_12_35, i8 %state_13_35, i8 %state_14_35, i8 %state_15_35, [176 x i8]* %w, i5 9)

ST_90: state_0_27 [1/1] 0.00ns
.preheader5.preheader.0:593  %state_0_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 0

ST_90: state_1_27 [1/1] 0.00ns
.preheader5.preheader.0:594  %state_1_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 1

ST_90: state_2_27 [1/1] 0.00ns
.preheader5.preheader.0:595  %state_2_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 2

ST_90: state_3_27 [1/1] 0.00ns
.preheader5.preheader.0:596  %state_3_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 3

ST_90: state_4_36 [1/1] 0.00ns
.preheader5.preheader.0:597  %state_4_36 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 4

ST_90: state_5_36 [1/1] 0.00ns
.preheader5.preheader.0:598  %state_5_36 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 5

ST_90: state_6_36 [1/1] 0.00ns
.preheader5.preheader.0:599  %state_6_36 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 6

ST_90: state_7_36 [1/1] 0.00ns
.preheader5.preheader.0:600  %state_7_36 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 7

ST_90: state_8_36 [1/1] 0.00ns
.preheader5.preheader.0:601  %state_8_36 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 8

ST_90: state_9_36 [1/1] 0.00ns
.preheader5.preheader.0:602  %state_9_36 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 9

ST_90: state_10_36 [1/1] 0.00ns
.preheader5.preheader.0:603  %state_10_36 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 10

ST_90: state_11_36 [1/1] 0.00ns
.preheader5.preheader.0:604  %state_11_36 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 11

ST_90: state_12_36 [1/1] 0.00ns
.preheader5.preheader.0:605  %state_12_36 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 12

ST_90: state_13_36 [1/1] 0.00ns
.preheader5.preheader.0:606  %state_13_36 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 13

ST_90: state_14_36 [1/1] 0.00ns
.preheader5.preheader.0:607  %state_14_36 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 14

ST_90: state_15_36 [1/1] 0.00ns
.preheader5.preheader.0:608  %state_15_36 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret36, 15

ST_90: call_ret37 [2/2] 1.04ns
.preheader5.preheader.0:609  %call_ret37 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_27, i8 %state_1_27, i8 %state_2_27, i8 %state_3_27, i8 %state_4_36, i8 %state_5_36, i8 %state_6_36, i8 %state_7_36, i8 %state_8_36, i8 %state_9_36, i8 %state_10_36, i8 %state_11_36, i8 %state_12_36, i8 %state_13_36, i8 %state_14_36, i8 %state_15_36)


 <State 91>: 5.83ns
ST_91: call_ret37 [1/2] 2.39ns
.preheader5.preheader.0:609  %call_ret37 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_sub_bytes(i8 %state_0_27, i8 %state_1_27, i8 %state_2_27, i8 %state_3_27, i8 %state_4_36, i8 %state_5_36, i8 %state_6_36, i8 %state_7_36, i8 %state_8_36, i8 %state_9_36, i8 %state_10_36, i8 %state_11_36, i8 %state_12_36, i8 %state_13_36, i8 %state_14_36, i8 %state_15_36)

ST_91: state_0_28 [1/1] 0.00ns
.preheader5.preheader.0:610  %state_0_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 0

ST_91: state_1_28 [1/1] 0.00ns
.preheader5.preheader.0:611  %state_1_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 1

ST_91: state_2_28 [1/1] 0.00ns
.preheader5.preheader.0:612  %state_2_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 2

ST_91: state_3_28 [1/1] 0.00ns
.preheader5.preheader.0:613  %state_3_28 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 3

ST_91: state_4_37 [1/1] 0.00ns
.preheader5.preheader.0:614  %state_4_37 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 4

ST_91: state_5_37 [1/1] 0.00ns
.preheader5.preheader.0:615  %state_5_37 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 5

ST_91: state_6_37 [1/1] 0.00ns
.preheader5.preheader.0:616  %state_6_37 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 6

ST_91: state_7_37 [1/1] 0.00ns
.preheader5.preheader.0:617  %state_7_37 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 7

ST_91: state_8_37 [1/1] 0.00ns
.preheader5.preheader.0:618  %state_8_37 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 8

ST_91: state_9_37 [1/1] 0.00ns
.preheader5.preheader.0:619  %state_9_37 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 9

ST_91: state_10_37 [1/1] 0.00ns
.preheader5.preheader.0:620  %state_10_37 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 10

ST_91: state_11_37 [1/1] 0.00ns
.preheader5.preheader.0:621  %state_11_37 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 11

ST_91: state_12_37 [1/1] 0.00ns
.preheader5.preheader.0:622  %state_12_37 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 12

ST_91: state_13_37 [1/1] 0.00ns
.preheader5.preheader.0:623  %state_13_37 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 13

ST_91: state_14_37 [1/1] 0.00ns
.preheader5.preheader.0:624  %state_14_37 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 14

ST_91: state_15_37 [1/1] 0.00ns
.preheader5.preheader.0:625  %state_15_37 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret37, 15

ST_91: call_ret38 [1/1] 1.04ns
.preheader5.preheader.0:626  %call_ret38 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_shift_rows(i8 %state_4_37, i8 %state_5_37, i8 %state_6_37, i8 %state_7_37, i8 %state_8_37, i8 %state_9_37, i8 %state_10_37, i8 %state_11_37, i8 %state_12_37, i8 %state_13_37, i8 %state_14_37, i8 %state_15_37)

ST_91: state_4_38 [1/1] 0.00ns
.preheader5.preheader.0:627  %state_4_38 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret38, 0

ST_91: state_5_38 [1/1] 0.00ns
.preheader5.preheader.0:628  %state_5_38 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret38, 1

ST_91: state_6_38 [1/1] 0.00ns
.preheader5.preheader.0:629  %state_6_38 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret38, 2

ST_91: state_7_38 [1/1] 0.00ns
.preheader5.preheader.0:630  %state_7_38 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret38, 3

ST_91: state_8_38 [1/1] 0.00ns
.preheader5.preheader.0:631  %state_8_38 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret38, 4

ST_91: state_9_38 [1/1] 0.00ns
.preheader5.preheader.0:632  %state_9_38 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret38, 5

ST_91: state_10_38 [1/1] 0.00ns
.preheader5.preheader.0:633  %state_10_38 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret38, 6

ST_91: state_11_38 [1/1] 0.00ns
.preheader5.preheader.0:634  %state_11_38 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret38, 7

ST_91: state_12_38 [1/1] 0.00ns
.preheader5.preheader.0:635  %state_12_38 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret38, 8

ST_91: state_13_38 [1/1] 0.00ns
.preheader5.preheader.0:636  %state_13_38 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret38, 9

ST_91: state_14_38 [1/1] 0.00ns
.preheader5.preheader.0:637  %state_14_38 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret38, 10

ST_91: state_15_38 [1/1] 0.00ns
.preheader5.preheader.0:638  %state_15_38 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret38, 11

ST_91: call_ret39 [9/9] 2.41ns
.preheader5.preheader.0:639  %call_ret39 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_28, i8 %state_1_28, i8 %state_2_28, i8 %state_3_28, i8 %state_4_38, i8 %state_5_38, i8 %state_6_38, i8 %state_7_38, i8 %state_8_38, i8 %state_9_38, i8 %state_10_38, i8 %state_11_38, i8 %state_12_38, i8 %state_13_38, i8 %state_14_38, i8 %state_15_38, [176 x i8]* %w, i5 10)


 <State 92>: 4.08ns
ST_92: call_ret39 [8/9] 4.08ns
.preheader5.preheader.0:639  %call_ret39 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_28, i8 %state_1_28, i8 %state_2_28, i8 %state_3_28, i8 %state_4_38, i8 %state_5_38, i8 %state_6_38, i8 %state_7_38, i8 %state_8_38, i8 %state_9_38, i8 %state_10_38, i8 %state_11_38, i8 %state_12_38, i8 %state_13_38, i8 %state_14_38, i8 %state_15_38, [176 x i8]* %w, i5 10)


 <State 93>: 4.08ns
ST_93: call_ret39 [7/9] 4.08ns
.preheader5.preheader.0:639  %call_ret39 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_28, i8 %state_1_28, i8 %state_2_28, i8 %state_3_28, i8 %state_4_38, i8 %state_5_38, i8 %state_6_38, i8 %state_7_38, i8 %state_8_38, i8 %state_9_38, i8 %state_10_38, i8 %state_11_38, i8 %state_12_38, i8 %state_13_38, i8 %state_14_38, i8 %state_15_38, [176 x i8]* %w, i5 10)


 <State 94>: 4.08ns
ST_94: call_ret39 [6/9] 4.08ns
.preheader5.preheader.0:639  %call_ret39 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_28, i8 %state_1_28, i8 %state_2_28, i8 %state_3_28, i8 %state_4_38, i8 %state_5_38, i8 %state_6_38, i8 %state_7_38, i8 %state_8_38, i8 %state_9_38, i8 %state_10_38, i8 %state_11_38, i8 %state_12_38, i8 %state_13_38, i8 %state_14_38, i8 %state_15_38, [176 x i8]* %w, i5 10)


 <State 95>: 4.08ns
ST_95: call_ret39 [5/9] 4.08ns
.preheader5.preheader.0:639  %call_ret39 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_28, i8 %state_1_28, i8 %state_2_28, i8 %state_3_28, i8 %state_4_38, i8 %state_5_38, i8 %state_6_38, i8 %state_7_38, i8 %state_8_38, i8 %state_9_38, i8 %state_10_38, i8 %state_11_38, i8 %state_12_38, i8 %state_13_38, i8 %state_14_38, i8 %state_15_38, [176 x i8]* %w, i5 10)


 <State 96>: 4.08ns
ST_96: call_ret39 [4/9] 4.08ns
.preheader5.preheader.0:639  %call_ret39 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_28, i8 %state_1_28, i8 %state_2_28, i8 %state_3_28, i8 %state_4_38, i8 %state_5_38, i8 %state_6_38, i8 %state_7_38, i8 %state_8_38, i8 %state_9_38, i8 %state_10_38, i8 %state_11_38, i8 %state_12_38, i8 %state_13_38, i8 %state_14_38, i8 %state_15_38, [176 x i8]* %w, i5 10)


 <State 97>: 4.08ns
ST_97: call_ret39 [3/9] 4.08ns
.preheader5.preheader.0:639  %call_ret39 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_28, i8 %state_1_28, i8 %state_2_28, i8 %state_3_28, i8 %state_4_38, i8 %state_5_38, i8 %state_6_38, i8 %state_7_38, i8 %state_8_38, i8 %state_9_38, i8 %state_10_38, i8 %state_11_38, i8 %state_12_38, i8 %state_13_38, i8 %state_14_38, i8 %state_15_38, [176 x i8]* %w, i5 10)


 <State 98>: 4.08ns
ST_98: call_ret39 [2/9] 4.08ns
.preheader5.preheader.0:639  %call_ret39 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_28, i8 %state_1_28, i8 %state_2_28, i8 %state_3_28, i8 %state_4_38, i8 %state_5_38, i8 %state_6_38, i8 %state_7_38, i8 %state_8_38, i8 %state_9_38, i8 %state_10_38, i8 %state_11_38, i8 %state_12_38, i8 %state_13_38, i8 %state_14_38, i8 %state_15_38, [176 x i8]* %w, i5 10)


 <State 99>: 4.08ns
ST_99: call_ret39 [1/9] 4.08ns
.preheader5.preheader.0:639  %call_ret39 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_add_round_key(i8 %state_0_28, i8 %state_1_28, i8 %state_2_28, i8 %state_3_28, i8 %state_4_38, i8 %state_5_38, i8 %state_6_38, i8 %state_7_38, i8 %state_8_38, i8 %state_9_38, i8 %state_10_38, i8 %state_11_38, i8 %state_12_38, i8 %state_13_38, i8 %state_14_38, i8 %state_15_38, [176 x i8]* %w, i5 10)

ST_99: state_1_29 [1/1] 0.00ns
.preheader5.preheader.0:640  %state_1_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 1

ST_99: state_2_29 [1/1] 0.00ns
.preheader5.preheader.0:641  %state_2_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 2

ST_99: state_3_29 [1/1] 0.00ns
.preheader5.preheader.0:642  %state_3_29 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 3

ST_99: state_4_39 [1/1] 0.00ns
.preheader5.preheader.0:643  %state_4_39 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 4

ST_99: state_5_39 [1/1] 0.00ns
.preheader5.preheader.0:644  %state_5_39 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 5

ST_99: state_6_39 [1/1] 0.00ns
.preheader5.preheader.0:645  %state_6_39 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 6

ST_99: state_7_39 [1/1] 0.00ns
.preheader5.preheader.0:646  %state_7_39 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 7

ST_99: state_8_39 [1/1] 0.00ns
.preheader5.preheader.0:647  %state_8_39 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 8

ST_99: state_9_39 [1/1] 0.00ns
.preheader5.preheader.0:648  %state_9_39 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 9

ST_99: state_10_39 [1/1] 0.00ns
.preheader5.preheader.0:649  %state_10_39 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 10

ST_99: state_11_39 [1/1] 0.00ns
.preheader5.preheader.0:650  %state_11_39 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 11

ST_99: state_12_39 [1/1] 0.00ns
.preheader5.preheader.0:651  %state_12_39 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 12

ST_99: state_13_39 [1/1] 0.00ns
.preheader5.preheader.0:652  %state_13_39 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 13

ST_99: state_14_39 [1/1] 0.00ns
.preheader5.preheader.0:653  %state_14_39 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 14

ST_99: state_15_39 [1/1] 0.00ns
.preheader5.preheader.0:654  %state_15_39 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, 15

ST_99: mrv_1 [1/1] 0.00ns
.preheader5.preheader.0:655  %mrv_1 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret39, i8 %state_4_39, 1

ST_99: mrv_2 [1/1] 0.00ns
.preheader5.preheader.0:656  %mrv_2 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_1, i8 %state_8_39, 2

ST_99: mrv_3 [1/1] 0.00ns
.preheader5.preheader.0:657  %mrv_3 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_2, i8 %state_12_39, 3

ST_99: mrv_4 [1/1] 0.00ns
.preheader5.preheader.0:658  %mrv_4 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_3, i8 %state_1_29, 4

ST_99: mrv_5 [1/1] 0.00ns
.preheader5.preheader.0:659  %mrv_5 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_4, i8 %state_5_39, 5

ST_99: mrv_6 [1/1] 0.00ns
.preheader5.preheader.0:660  %mrv_6 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_5, i8 %state_9_39, 6

ST_99: mrv_7 [1/1] 0.00ns
.preheader5.preheader.0:661  %mrv_7 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_6, i8 %state_13_39, 7

ST_99: mrv_8 [1/1] 0.00ns
.preheader5.preheader.0:662  %mrv_8 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_7, i8 %state_2_29, 8

ST_99: mrv_9 [1/1] 0.00ns
.preheader5.preheader.0:663  %mrv_9 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_8, i8 %state_6_39, 9

ST_99: mrv_10 [1/1] 0.00ns
.preheader5.preheader.0:664  %mrv_10 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_9, i8 %state_10_39, 10

ST_99: mrv_11 [1/1] 0.00ns
.preheader5.preheader.0:665  %mrv_11 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_10, i8 %state_14_39, 11

ST_99: mrv_12 [1/1] 0.00ns
.preheader5.preheader.0:666  %mrv_12 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_11, i8 %state_3_29, 12

ST_99: mrv_13 [1/1] 0.00ns
.preheader5.preheader.0:667  %mrv_13 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_12, i8 %state_7_39, 13

ST_99: mrv_14 [1/1] 0.00ns
.preheader5.preheader.0:668  %mrv_14 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_13, i8 %state_11_39, 14

ST_99: mrv_s [1/1] 0.00ns
.preheader5.preheader.0:669  %mrv_s = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_14, i8 %state_15_39, 15

ST_99: stg_868 [1/1] 0.00ns
.preheader5.preheader.0:670  ret { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_s



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 10>: 12.4ns
The critical path consists of the following:
	'call' operation ('call_ret6', AES_Encryption/aes.cpp:301) to 'single_block_AES_encrypt_sub_bytes' (2.39 ns)
	'call' operation ('call_ret7', AES_Encryption/aes.cpp:302) to 'single_block_AES_encrypt_shift_rows' (1.04 ns)
	'call' operation ('call_ret8', AES_Encryption/aes.cpp:303) to 'single_block_AES_encrypt_mix_columns' (6.52 ns)
	'call' operation ('call_ret9', AES_Encryption/aes.cpp:304) to 'single_block_AES_encrypt_add_round_key' (2.41 ns)

 <State 19>: 12.4ns
The critical path consists of the following:
	'call' operation ('call_ret1', AES_Encryption/aes.cpp:301) to 'single_block_AES_encrypt_sub_bytes' (2.39 ns)
	'call' operation ('call_ret2', AES_Encryption/aes.cpp:302) to 'single_block_AES_encrypt_shift_rows' (1.04 ns)
	'call' operation ('call_ret3', AES_Encryption/aes.cpp:303) to 'single_block_AES_encrypt_mix_columns' (6.52 ns)
	'call' operation ('call_ret4', AES_Encryption/aes.cpp:304) to 'single_block_AES_encrypt_add_round_key' (2.41 ns)

 <State 28>: 12.4ns
The critical path consists of the following:
	'call' operation ('call_ret10', AES_Encryption/aes.cpp:301) to 'single_block_AES_encrypt_sub_bytes' (2.39 ns)
	'call' operation ('call_ret11', AES_Encryption/aes.cpp:302) to 'single_block_AES_encrypt_shift_rows' (1.04 ns)
	'call' operation ('call_ret12', AES_Encryption/aes.cpp:303) to 'single_block_AES_encrypt_mix_columns' (6.52 ns)
	'call' operation ('call_ret13', AES_Encryption/aes.cpp:304) to 'single_block_AES_encrypt_add_round_key' (2.41 ns)

 <State 37>: 12.4ns
The critical path consists of the following:
	'call' operation ('call_ret14', AES_Encryption/aes.cpp:301) to 'single_block_AES_encrypt_sub_bytes' (2.39 ns)
	'call' operation ('call_ret15', AES_Encryption/aes.cpp:302) to 'single_block_AES_encrypt_shift_rows' (1.04 ns)
	'call' operation ('call_ret16', AES_Encryption/aes.cpp:303) to 'single_block_AES_encrypt_mix_columns' (6.52 ns)
	'call' operation ('call_ret17', AES_Encryption/aes.cpp:304) to 'single_block_AES_encrypt_add_round_key' (2.41 ns)

 <State 46>: 12.4ns
The critical path consists of the following:
	'call' operation ('call_ret18', AES_Encryption/aes.cpp:301) to 'single_block_AES_encrypt_sub_bytes' (2.39 ns)
	'call' operation ('call_ret19', AES_Encryption/aes.cpp:302) to 'single_block_AES_encrypt_shift_rows' (1.04 ns)
	'call' operation ('call_ret20', AES_Encryption/aes.cpp:303) to 'single_block_AES_encrypt_mix_columns' (6.52 ns)
	'call' operation ('call_ret21', AES_Encryption/aes.cpp:304) to 'single_block_AES_encrypt_add_round_key' (2.41 ns)

 <State 55>: 12.4ns
The critical path consists of the following:
	'call' operation ('call_ret22', AES_Encryption/aes.cpp:301) to 'single_block_AES_encrypt_sub_bytes' (2.39 ns)
	'call' operation ('call_ret23', AES_Encryption/aes.cpp:302) to 'single_block_AES_encrypt_shift_rows' (1.04 ns)
	'call' operation ('call_ret24', AES_Encryption/aes.cpp:303) to 'single_block_AES_encrypt_mix_columns' (6.52 ns)
	'call' operation ('call_ret25', AES_Encryption/aes.cpp:304) to 'single_block_AES_encrypt_add_round_key' (2.41 ns)

 <State 64>: 12.4ns
The critical path consists of the following:
	'call' operation ('call_ret26', AES_Encryption/aes.cpp:301) to 'single_block_AES_encrypt_sub_bytes' (2.39 ns)
	'call' operation ('call_ret27', AES_Encryption/aes.cpp:302) to 'single_block_AES_encrypt_shift_rows' (1.04 ns)
	'call' operation ('call_ret28', AES_Encryption/aes.cpp:303) to 'single_block_AES_encrypt_mix_columns' (6.52 ns)
	'call' operation ('call_ret29', AES_Encryption/aes.cpp:304) to 'single_block_AES_encrypt_add_round_key' (2.41 ns)

 <State 73>: 12.4ns
The critical path consists of the following:
	'call' operation ('call_ret30', AES_Encryption/aes.cpp:301) to 'single_block_AES_encrypt_sub_bytes' (2.39 ns)
	'call' operation ('call_ret31', AES_Encryption/aes.cpp:302) to 'single_block_AES_encrypt_shift_rows' (1.04 ns)
	'call' operation ('call_ret32', AES_Encryption/aes.cpp:303) to 'single_block_AES_encrypt_mix_columns' (6.52 ns)
	'call' operation ('call_ret33', AES_Encryption/aes.cpp:304) to 'single_block_AES_encrypt_add_round_key' (2.41 ns)

 <State 82>: 12.4ns
The critical path consists of the following:
	'call' operation ('call_ret34', AES_Encryption/aes.cpp:301) to 'single_block_AES_encrypt_sub_bytes' (2.39 ns)
	'call' operation ('call_ret35', AES_Encryption/aes.cpp:302) to 'single_block_AES_encrypt_shift_rows' (1.04 ns)
	'call' operation ('call_ret', AES_Encryption/aes.cpp:303) to 'single_block_AES_encrypt_mix_columns' (6.52 ns)
	'call' operation ('call_ret36', AES_Encryption/aes.cpp:304) to 'single_block_AES_encrypt_add_round_key' (2.41 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

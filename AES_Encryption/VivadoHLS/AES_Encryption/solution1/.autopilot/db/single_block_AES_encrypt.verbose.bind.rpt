

================================================================
== Vivado HLS Report for 'single_block_AES_encrypt'
================================================================
* Date:           Thu Feb 08 12:12:20 2024

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        AES_Encryption
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     12.35|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- loop    |  1614|  1614|       130|         99|          2|    16|    yes   |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 99, depth = 130


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 133
* Pipeline: 1
  Pipeline-0: II = 99, D = 130, States = { 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	133  / (exitcond1)
	4  / (!exitcond1)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	3  / true
133 --> 
* FSM state operations: 

 <State 1>: 2.71ns
ST_1: w [1/1] 2.71ns
:7  %w = alloca [176 x i8], align 16

ST_1: stg_135 [2/2] 0.00ns
:11  call fastcc void @single_block_AES_encrypt_aes_key_expansion([176 x i8]* %w)


 <State 2>: 1.57ns
ST_2: stg_136 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i8* %i_plaintext_V_data), !map !19

ST_2: stg_137 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i1* %i_plaintext_V_user_V), !map !23

ST_2: stg_138 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i1* %i_plaintext_V_last_V), !map !27

ST_2: stg_139 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i8* %cipher_V_data), !map !31

ST_2: stg_140 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %cipher_V_user_V), !map !35

ST_2: stg_141 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i1* %cipher_V_last_V), !map !39

ST_2: stg_142 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecTopModule([25 x i8]* @single_block_AES_encrypt_str) nounwind

ST_2: stg_143 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V, [5 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str15, [1 x i8]* @p_str15, [1 x i8]* @p_str15, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str15) nounwind

ST_2: stg_144 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecInterface(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, [5 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str15, [1 x i8]* @p_str15, [1 x i8]* @p_str15, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str15) nounwind

ST_2: stg_145 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str26, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str15, [1 x i8]* @p_str15, [1 x i8]* @p_str15, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str15) nounwind

ST_2: stg_146 [1/2] 0.00ns
:11  call fastcc void @single_block_AES_encrypt_aes_key_expansion([176 x i8]* %w)

ST_2: stg_147 [1/1] 1.57ns
:12  br label %1


 <State 3>: 3.28ns
ST_3: block [1/1] 0.00ns
:0  %block = phi i5 [ 0, %0 ], [ %block_1, %2 ]

ST_3: exitcond1 [1/1] 1.91ns
:1  %exitcond1 = icmp eq i5 %block, -16

ST_3: block_1 [1/1] 1.72ns
:2  %block_1 = add i5 %block, 1

ST_3: stg_151 [1/1] 0.00ns
:3  br i1 %exitcond1, label %3, label %2

ST_3: tmp_last_V [1/1] 1.91ns
:53  %tmp_last_V = icmp eq i5 %block, 15


 <State 4>: 0.00ns
ST_4: empty_7 [1/1] 0.00ns
:4  %empty_7 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_4: tmp_data_16 [1/1] 0.00ns
:5  %tmp_data_16 = extractvalue { i8, i1, i1 } %empty_7, 0


 <State 5>: 0.00ns
ST_5: empty_8 [1/1] 0.00ns
:6  %empty_8 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_5: tmp_data_17 [1/1] 0.00ns
:7  %tmp_data_17 = extractvalue { i8, i1, i1 } %empty_8, 0


 <State 6>: 0.00ns
ST_6: empty_9 [1/1] 0.00ns
:8  %empty_9 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_6: tmp_data_18 [1/1] 0.00ns
:9  %tmp_data_18 = extractvalue { i8, i1, i1 } %empty_9, 0


 <State 7>: 0.00ns
ST_7: empty_10 [1/1] 0.00ns
:10  %empty_10 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_7: tmp_data_19 [1/1] 0.00ns
:11  %tmp_data_19 = extractvalue { i8, i1, i1 } %empty_10, 0


 <State 8>: 0.00ns
ST_8: empty_11 [1/1] 0.00ns
:12  %empty_11 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_8: tmp_data_20 [1/1] 0.00ns
:13  %tmp_data_20 = extractvalue { i8, i1, i1 } %empty_11, 0


 <State 9>: 0.00ns
ST_9: empty_12 [1/1] 0.00ns
:14  %empty_12 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_9: tmp_data_21 [1/1] 0.00ns
:15  %tmp_data_21 = extractvalue { i8, i1, i1 } %empty_12, 0


 <State 10>: 0.00ns
ST_10: empty_13 [1/1] 0.00ns
:16  %empty_13 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_10: tmp_data_22 [1/1] 0.00ns
:17  %tmp_data_22 = extractvalue { i8, i1, i1 } %empty_13, 0


 <State 11>: 0.00ns
ST_11: empty_14 [1/1] 0.00ns
:18  %empty_14 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_11: tmp_data_23 [1/1] 0.00ns
:19  %tmp_data_23 = extractvalue { i8, i1, i1 } %empty_14, 0


 <State 12>: 0.00ns
ST_12: empty_15 [1/1] 0.00ns
:20  %empty_15 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_12: tmp_data_24 [1/1] 0.00ns
:21  %tmp_data_24 = extractvalue { i8, i1, i1 } %empty_15, 0


 <State 13>: 0.00ns
ST_13: empty_16 [1/1] 0.00ns
:22  %empty_16 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_13: tmp_data_25 [1/1] 0.00ns
:23  %tmp_data_25 = extractvalue { i8, i1, i1 } %empty_16, 0


 <State 14>: 0.00ns
ST_14: empty_17 [1/1] 0.00ns
:24  %empty_17 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_14: tmp_data_26 [1/1] 0.00ns
:25  %tmp_data_26 = extractvalue { i8, i1, i1 } %empty_17, 0


 <State 15>: 0.00ns
ST_15: empty_18 [1/1] 0.00ns
:26  %empty_18 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_15: tmp_data_27 [1/1] 0.00ns
:27  %tmp_data_27 = extractvalue { i8, i1, i1 } %empty_18, 0


 <State 16>: 0.00ns
ST_16: empty_19 [1/1] 0.00ns
:28  %empty_19 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_16: tmp_data_28 [1/1] 0.00ns
:29  %tmp_data_28 = extractvalue { i8, i1, i1 } %empty_19, 0


 <State 17>: 0.00ns
ST_17: empty_20 [1/1] 0.00ns
:30  %empty_20 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_17: tmp_data_29 [1/1] 0.00ns
:31  %tmp_data_29 = extractvalue { i8, i1, i1 } %empty_20, 0


 <State 18>: 0.00ns
ST_18: empty_21 [1/1] 0.00ns
:32  %empty_21 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_18: tmp_data_30 [1/1] 0.00ns
:33  %tmp_data_30 = extractvalue { i8, i1, i1 } %empty_21, 0


 <State 19>: 0.00ns
ST_19: empty_22 [1/1] 0.00ns
:34  %empty_22 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_19: tmp_data_31 [1/1] 0.00ns
:35  %tmp_data_31 = extractvalue { i8, i1, i1 } %empty_22, 0

ST_19: call_ret [99/99] 0.00ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 20>: 12.35ns
ST_20: call_ret [98/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 21>: 12.35ns
ST_21: call_ret [97/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 22>: 12.35ns
ST_22: call_ret [96/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 23>: 12.35ns
ST_23: call_ret [95/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 24>: 12.35ns
ST_24: call_ret [94/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 25>: 12.35ns
ST_25: call_ret [93/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 26>: 12.35ns
ST_26: call_ret [92/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 27>: 12.35ns
ST_27: call_ret [91/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 28>: 12.35ns
ST_28: call_ret [90/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 29>: 12.35ns
ST_29: call_ret [89/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 30>: 12.35ns
ST_30: call_ret [88/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 31>: 12.35ns
ST_31: call_ret [87/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 32>: 12.35ns
ST_32: call_ret [86/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 33>: 12.35ns
ST_33: call_ret [85/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 34>: 12.35ns
ST_34: call_ret [84/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 35>: 12.35ns
ST_35: call_ret [83/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 36>: 12.35ns
ST_36: call_ret [82/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 37>: 12.35ns
ST_37: call_ret [81/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 38>: 12.35ns
ST_38: call_ret [80/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 39>: 12.35ns
ST_39: call_ret [79/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 40>: 12.35ns
ST_40: call_ret [78/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 41>: 12.35ns
ST_41: call_ret [77/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 42>: 12.35ns
ST_42: call_ret [76/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 43>: 12.35ns
ST_43: call_ret [75/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 44>: 12.35ns
ST_44: call_ret [74/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 45>: 12.35ns
ST_45: call_ret [73/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 46>: 12.35ns
ST_46: call_ret [72/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 47>: 12.35ns
ST_47: call_ret [71/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 48>: 12.35ns
ST_48: call_ret [70/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 49>: 12.35ns
ST_49: call_ret [69/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 50>: 12.35ns
ST_50: call_ret [68/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 51>: 12.35ns
ST_51: call_ret [67/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 52>: 12.35ns
ST_52: call_ret [66/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 53>: 12.35ns
ST_53: call_ret [65/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 54>: 12.35ns
ST_54: call_ret [64/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 55>: 12.35ns
ST_55: call_ret [63/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 56>: 12.35ns
ST_56: call_ret [62/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 57>: 12.35ns
ST_57: call_ret [61/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 58>: 12.35ns
ST_58: call_ret [60/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 59>: 12.35ns
ST_59: call_ret [59/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 60>: 12.35ns
ST_60: call_ret [58/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 61>: 12.35ns
ST_61: call_ret [57/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 62>: 12.35ns
ST_62: call_ret [56/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 63>: 12.35ns
ST_63: call_ret [55/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 64>: 12.35ns
ST_64: call_ret [54/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 65>: 12.35ns
ST_65: call_ret [53/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 66>: 12.35ns
ST_66: call_ret [52/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 67>: 12.35ns
ST_67: call_ret [51/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 68>: 12.35ns
ST_68: call_ret [50/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 69>: 12.35ns
ST_69: call_ret [49/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 70>: 12.35ns
ST_70: call_ret [48/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 71>: 12.35ns
ST_71: call_ret [47/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 72>: 12.35ns
ST_72: call_ret [46/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 73>: 12.35ns
ST_73: call_ret [45/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 74>: 12.35ns
ST_74: call_ret [44/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 75>: 12.35ns
ST_75: call_ret [43/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 76>: 12.35ns
ST_76: call_ret [42/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 77>: 12.35ns
ST_77: call_ret [41/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 78>: 12.35ns
ST_78: call_ret [40/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 79>: 12.35ns
ST_79: call_ret [39/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 80>: 12.35ns
ST_80: call_ret [38/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 81>: 12.35ns
ST_81: call_ret [37/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 82>: 12.35ns
ST_82: call_ret [36/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 83>: 12.35ns
ST_83: call_ret [35/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 84>: 12.35ns
ST_84: call_ret [34/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 85>: 12.35ns
ST_85: call_ret [33/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 86>: 12.35ns
ST_86: call_ret [32/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 87>: 12.35ns
ST_87: call_ret [31/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 88>: 12.35ns
ST_88: call_ret [30/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 89>: 12.35ns
ST_89: call_ret [29/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 90>: 12.35ns
ST_90: call_ret [28/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 91>: 12.35ns
ST_91: call_ret [27/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 92>: 12.35ns
ST_92: call_ret [26/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 93>: 12.35ns
ST_93: call_ret [25/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 94>: 12.35ns
ST_94: call_ret [24/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 95>: 12.35ns
ST_95: call_ret [23/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 96>: 12.35ns
ST_96: call_ret [22/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 97>: 12.35ns
ST_97: call_ret [21/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 98>: 12.35ns
ST_98: call_ret [20/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 99>: 12.35ns
ST_99: call_ret [19/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 100>: 12.35ns
ST_100: call_ret [18/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 101>: 12.35ns
ST_101: call_ret [17/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 102>: 12.35ns
ST_102: call_ret [16/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 103>: 12.35ns
ST_103: call_ret [15/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 104>: 12.35ns
ST_104: call_ret [14/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 105>: 12.35ns
ST_105: call_ret [13/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 106>: 12.35ns
ST_106: call_ret [12/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 107>: 12.35ns
ST_107: call_ret [11/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 108>: 12.35ns
ST_108: call_ret [10/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 109>: 12.35ns
ST_109: call_ret [9/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 110>: 12.35ns
ST_110: call_ret [8/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 111>: 12.35ns
ST_111: call_ret [7/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 112>: 12.35ns
ST_112: call_ret [6/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 113>: 12.35ns
ST_113: call_ret [5/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 114>: 12.35ns
ST_114: call_ret [4/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 115>: 12.35ns
ST_115: call_ret [3/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 116>: 12.35ns
ST_116: call_ret [2/99] 12.35ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)


 <State 117>: 4.08ns
ST_117: call_ret [1/99] 4.08ns
:36  %call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @single_block_AES_encrypt_aes_cipher(i8 %tmp_data_16, i8 %tmp_data_17, i8 %tmp_data_18, i8 %tmp_data_19, i8 %tmp_data_20, i8 %tmp_data_21, i8 %tmp_data_22, i8 %tmp_data_23, i8 %tmp_data_24, i8 %tmp_data_25, i8 %tmp_data_26, i8 %tmp_data_27, i8 %tmp_data_28, i8 %tmp_data_29, i8 %tmp_data_30, i8 %tmp_data_31, [176 x i8]* %w)

ST_117: tmp_data [1/1] 0.00ns
:37  %tmp_data = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 0

ST_117: tmp_data_2 [1/1] 0.00ns
:38  %tmp_data_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 1

ST_117: tmp_data_3 [1/1] 0.00ns
:39  %tmp_data_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 2

ST_117: tmp_data_4 [1/1] 0.00ns
:40  %tmp_data_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 3

ST_117: tmp_data_5 [1/1] 0.00ns
:41  %tmp_data_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 4

ST_117: tmp_data_6 [1/1] 0.00ns
:42  %tmp_data_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 5

ST_117: tmp_data_7 [1/1] 0.00ns
:43  %tmp_data_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 6

ST_117: tmp_data_8 [1/1] 0.00ns
:44  %tmp_data_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 7

ST_117: tmp_data_9 [1/1] 0.00ns
:45  %tmp_data_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 8

ST_117: tmp_data_1 [1/1] 0.00ns
:46  %tmp_data_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 9

ST_117: tmp_data_10 [1/1] 0.00ns
:47  %tmp_data_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 10

ST_117: tmp_data_11 [1/1] 0.00ns
:48  %tmp_data_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 11

ST_117: tmp_data_12 [1/1] 0.00ns
:49  %tmp_data_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 12

ST_117: tmp_data_13 [1/1] 0.00ns
:50  %tmp_data_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 13

ST_117: tmp_data_14 [1/1] 0.00ns
:51  %tmp_data_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 14

ST_117: tmp_data_15 [1/1] 0.00ns
:52  %tmp_data_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 15

ST_117: stg_300 [1/1] 0.00ns
:54  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data, i1 true, i1 false)


 <State 118>: 0.00ns
ST_118: stg_301 [1/1] 0.00ns
:55  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_2, i1 true, i1 false)


 <State 119>: 0.00ns
ST_119: stg_302 [1/1] 0.00ns
:56  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_3, i1 true, i1 false)


 <State 120>: 0.00ns
ST_120: stg_303 [1/1] 0.00ns
:57  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_4, i1 true, i1 false)


 <State 121>: 0.00ns
ST_121: stg_304 [1/1] 0.00ns
:58  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_5, i1 true, i1 false)


 <State 122>: 0.00ns
ST_122: stg_305 [1/1] 0.00ns
:59  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_6, i1 true, i1 false)


 <State 123>: 0.00ns
ST_123: stg_306 [1/1] 0.00ns
:60  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_7, i1 true, i1 false)


 <State 124>: 0.00ns
ST_124: stg_307 [1/1] 0.00ns
:61  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_8, i1 true, i1 false)


 <State 125>: 0.00ns
ST_125: stg_308 [1/1] 0.00ns
:62  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_9, i1 true, i1 false)


 <State 126>: 0.00ns
ST_126: stg_309 [1/1] 0.00ns
:63  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_1, i1 true, i1 false)


 <State 127>: 0.00ns
ST_127: stg_310 [1/1] 0.00ns
:64  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_10, i1 true, i1 false)


 <State 128>: 0.00ns
ST_128: stg_311 [1/1] 0.00ns
:65  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_11, i1 true, i1 false)


 <State 129>: 0.00ns
ST_129: stg_312 [1/1] 0.00ns
:66  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_12, i1 true, i1 false)


 <State 130>: 0.00ns
ST_130: stg_313 [1/1] 0.00ns
:67  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_13, i1 true, i1 false)


 <State 131>: 0.00ns
ST_131: stg_314 [1/1] 0.00ns
:68  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_14, i1 true, i1 false)


 <State 132>: 0.00ns
ST_132: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_132: stg_316 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([5 x i8]* @p_str37) nounwind

ST_132: tmp_1 [1/1] 0.00ns
:2  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([5 x i8]* @p_str37)

ST_132: stg_318 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 1, i32 0, [1 x i8]* @p_str15) nounwind

ST_132: stg_319 [1/1] 0.00ns
:69  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_15, i1 true, i1 %tmp_last_V)

ST_132: empty_23 [1/1] 0.00ns
:70  %empty_23 = call i32 (...)* @_ssdm_op_SpecRegionEnd([5 x i8]* @p_str37, i32 %tmp_1)

ST_132: stg_321 [1/1] 0.00ns
:71  br label %1


 <State 133>: 0.00ns
ST_133: stg_322 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is clock enabled: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_none:ce=0
Port [ i_plaintext_V_data]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ i_plaintext_V_user_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ i_plaintext_V_last_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ cipher_V_data]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ cipher_V_user_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ cipher_V_last_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ s_box]:  wired=0; compound=1; hidden=1; nouse=1; global=1; static=1; extern=0; dir=0; type=1; pingpong=0; private_global=0; linkage=7; visibility=0; MemPort=[1111111111111111]; IO mode=ap_memory:ce=0
Port [ R]:  wired=0; compound=1; hidden=1; nouse=1; global=1; static=0; extern=0; dir=2; type=1; pingpong=0; private_global=0; linkage=0; visibility=0; MemPort=[21]; IO mode=ap_memory:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
w           (alloca           ) [ 00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110]
stg_136     (specbitsmap      ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_137     (specbitsmap      ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_138     (specbitsmap      ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_139     (specbitsmap      ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_140     (specbitsmap      ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_141     (specbitsmap      ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_142     (spectopmodule    ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_143     (specinterface    ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_144     (specinterface    ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_145     (specinterface    ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_146     (call             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_147     (br               ) [ 00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110]
block       (phi              ) [ 00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
exitcond1   (icmp             ) [ 00011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110]
block_1     (add              ) [ 00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110]
stg_151     (br               ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_last_V  (icmp             ) [ 00011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110]
empty_7     (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_16 (extractvalue     ) [ 00000111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_8     (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_17 (extractvalue     ) [ 00000011111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_9     (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_18 (extractvalue     ) [ 00000001111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_10    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_19 (extractvalue     ) [ 00000000111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_11    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_20 (extractvalue     ) [ 00000000011111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_12    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_21 (extractvalue     ) [ 00000000001111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_13    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_22 (extractvalue     ) [ 00000000000111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_14    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_23 (extractvalue     ) [ 00000000000011111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_15    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_24 (extractvalue     ) [ 00000000000001111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_16    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_25 (extractvalue     ) [ 00000000000000111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_17    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_26 (extractvalue     ) [ 00000000000000011111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_18    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_27 (extractvalue     ) [ 00000000000000001111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_19    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_28 (extractvalue     ) [ 00000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_20    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_29 (extractvalue     ) [ 00000000000000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_21    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_30 (extractvalue     ) [ 00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_22    (read             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_31 (extractvalue     ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
call_ret    (call             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data    (extractvalue     ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_data_2  (extractvalue     ) [ 00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000]
tmp_data_3  (extractvalue     ) [ 00000000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000]
tmp_data_4  (extractvalue     ) [ 00000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000]
tmp_data_5  (extractvalue     ) [ 00000000000000000001111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111000000000000]
tmp_data_6  (extractvalue     ) [ 00000000000000000001111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111100000000000]
tmp_data_7  (extractvalue     ) [ 00000000000000000001111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111110000000000]
tmp_data_8  (extractvalue     ) [ 00000000000000000001111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111000000000]
tmp_data_9  (extractvalue     ) [ 00000000000000000001111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111100000000]
tmp_data_1  (extractvalue     ) [ 00000000000000000001111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111110000000]
tmp_data_10 (extractvalue     ) [ 00000000000000000001111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111000000]
tmp_data_11 (extractvalue     ) [ 00000000000000000001111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111100000]
tmp_data_12 (extractvalue     ) [ 00000000000000000001111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111110000]
tmp_data_13 (extractvalue     ) [ 00000000000000000001111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111000]
tmp_data_14 (extractvalue     ) [ 00000000000000000001111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111100]
tmp_data_15 (extractvalue     ) [ 00000000000000000001111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111110]
stg_300     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_301     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_302     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_303     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_304     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_305     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_306     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_307     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_308     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_309     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_310     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_311     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_312     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_313     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_314     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty       (speclooptripcount) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_316     (specloopname     ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_1       (specregionbegin  ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_318     (specpipeline     ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_319     (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_23    (specregionend    ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_321     (br               ) [ 00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110]
stg_322     (ret              ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="i_plaintext_V_data">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="i_plaintext_V_data"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="i_plaintext_V_user_V">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="i_plaintext_V_user_V"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="i_plaintext_V_last_V">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="i_plaintext_V_last_V"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="cipher_V_data">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="cipher_V_data"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="cipher_V_user_V">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="cipher_V_user_V"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="cipher_V_last_V">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="cipher_V_last_V"/></StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="s_box">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="s_box"/><MemPortTyVec>1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="14" class="1000" name="R">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="R"/><MemPortTyVec>2 1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="single_block_AES_encrypt_aes_key_expansion"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="single_block_AES_encrypt_str"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str15"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str26"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.axis.volatile.i8P.i1P.i1P"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="single_block_AES_encrypt_aes_cipher"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.axis.volatile.i8P.i1P.i1P"/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopName"/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str37"/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionBegin"/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecPipeline"/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionEnd"/></StgValue>
</bind>
</comp>

<comp id="72" class="1004" name="w_alloca_fu_72">
<pin_list>
<pin id="73" dir="0" index="0" bw="2" slack="0"/>
<pin id="74" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="w/1 "/>
</bind>
</comp>

<comp id="76" class="1004" name="grp_read_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="10" slack="0"/>
<pin id="78" dir="0" index="1" bw="8" slack="0"/>
<pin id="79" dir="0" index="2" bw="1" slack="0"/>
<pin id="80" dir="0" index="3" bw="1" slack="0"/>
<pin id="81" dir="1" index="4" bw="10" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="empty_7/4 empty_8/5 empty_9/6 empty_10/7 empty_11/8 empty_12/9 empty_13/10 empty_14/11 empty_15/12 empty_16/13 empty_17/14 empty_18/15 empty_19/16 empty_20/17 empty_21/18 empty_22/19 "/>
</bind>
</comp>

<comp id="86" class="1004" name="grp_write_fu_86">
<pin_list>
<pin id="87" dir="0" index="0" bw="0" slack="0"/>
<pin id="88" dir="0" index="1" bw="8" slack="0"/>
<pin id="89" dir="0" index="2" bw="1" slack="0"/>
<pin id="90" dir="0" index="3" bw="1" slack="0"/>
<pin id="91" dir="0" index="4" bw="8" slack="0"/>
<pin id="92" dir="0" index="5" bw="1" slack="0"/>
<pin id="93" dir="0" index="6" bw="1" slack="0"/>
<pin id="94" dir="1" index="7" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="stg_300/117 stg_301/118 stg_302/119 stg_303/120 stg_304/121 stg_305/122 stg_306/123 stg_307/124 stg_308/125 stg_309/126 stg_310/127 stg_311/128 stg_312/129 stg_313/130 stg_314/131 stg_319/132 "/>
</bind>
</comp>

<comp id="101" class="1005" name="block_reg_101">
<pin_list>
<pin id="102" dir="0" index="0" bw="5" slack="1"/>
<pin id="103" dir="1" index="1" bw="5" slack="1"/>
</pin_list>
<bind>
<opset="block (phireg) "/>
</bind>
</comp>

<comp id="105" class="1004" name="block_phi_fu_105">
<pin_list>
<pin id="106" dir="0" index="0" bw="1" slack="1"/>
<pin id="107" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="108" dir="0" index="2" bw="5" slack="0"/>
<pin id="109" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="110" dir="1" index="4" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="block/3 "/>
</bind>
</comp>

<comp id="112" class="1004" name="grp_single_block_AES_encrypt_aes_cipher_fu_112">
<pin_list>
<pin id="113" dir="0" index="0" bw="128" slack="0"/>
<pin id="114" dir="0" index="1" bw="8" slack="15"/>
<pin id="115" dir="0" index="2" bw="8" slack="14"/>
<pin id="116" dir="0" index="3" bw="8" slack="13"/>
<pin id="117" dir="0" index="4" bw="8" slack="12"/>
<pin id="118" dir="0" index="5" bw="8" slack="11"/>
<pin id="119" dir="0" index="6" bw="8" slack="10"/>
<pin id="120" dir="0" index="7" bw="8" slack="9"/>
<pin id="121" dir="0" index="8" bw="8" slack="8"/>
<pin id="122" dir="0" index="9" bw="8" slack="7"/>
<pin id="123" dir="0" index="10" bw="8" slack="6"/>
<pin id="124" dir="0" index="11" bw="8" slack="5"/>
<pin id="125" dir="0" index="12" bw="8" slack="4"/>
<pin id="126" dir="0" index="13" bw="8" slack="3"/>
<pin id="127" dir="0" index="14" bw="8" slack="2"/>
<pin id="128" dir="0" index="15" bw="8" slack="1"/>
<pin id="129" dir="0" index="16" bw="8" slack="0"/>
<pin id="130" dir="0" index="17" bw="8" slack="2147483647"/>
<pin id="131" dir="0" index="18" bw="8" slack="0"/>
<pin id="132" dir="1" index="19" bw="128" slack="0"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="call_ret/19 "/>
</bind>
</comp>

<comp id="135" class="1004" name="grp_single_block_AES_encrypt_aes_key_expansion_fu_135">
<pin_list>
<pin id="136" dir="0" index="0" bw="0" slack="0"/>
<pin id="137" dir="0" index="1" bw="8" slack="0"/>
<pin id="138" dir="0" index="2" bw="8" slack="0"/>
<pin id="139" dir="0" index="3" bw="8" slack="0"/>
<pin id="140" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="stg_135/1 "/>
</bind>
</comp>

<comp id="145" class="1004" name="grp_fu_145">
<pin_list>
<pin id="146" dir="0" index="0" bw="10" slack="0"/>
<pin id="147" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_16/4 tmp_data_17/5 tmp_data_18/6 tmp_data_19/7 tmp_data_20/8 tmp_data_21/9 tmp_data_22/10 tmp_data_23/11 tmp_data_24/12 tmp_data_25/13 tmp_data_26/14 tmp_data_27/15 tmp_data_28/16 tmp_data_29/17 tmp_data_30/18 tmp_data_31/19 "/>
</bind>
</comp>

<comp id="150" class="1004" name="exitcond1_fu_150">
<pin_list>
<pin id="151" dir="0" index="0" bw="5" slack="0"/>
<pin id="152" dir="0" index="1" bw="5" slack="0"/>
<pin id="153" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond1/3 "/>
</bind>
</comp>

<comp id="156" class="1004" name="block_1_fu_156">
<pin_list>
<pin id="157" dir="0" index="0" bw="5" slack="0"/>
<pin id="158" dir="0" index="1" bw="1" slack="0"/>
<pin id="159" dir="1" index="2" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="block_1/3 "/>
</bind>
</comp>

<comp id="162" class="1004" name="tmp_last_V_fu_162">
<pin_list>
<pin id="163" dir="0" index="0" bw="5" slack="0"/>
<pin id="164" dir="0" index="1" bw="5" slack="0"/>
<pin id="165" dir="1" index="2" bw="1" slack="129"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_last_V/3 "/>
</bind>
</comp>

<comp id="168" class="1004" name="tmp_data_fu_168">
<pin_list>
<pin id="169" dir="0" index="0" bw="128" slack="0"/>
<pin id="170" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data/117 "/>
</bind>
</comp>

<comp id="173" class="1004" name="tmp_data_2_fu_173">
<pin_list>
<pin id="174" dir="0" index="0" bw="128" slack="0"/>
<pin id="175" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_2/117 "/>
</bind>
</comp>

<comp id="177" class="1004" name="tmp_data_3_fu_177">
<pin_list>
<pin id="178" dir="0" index="0" bw="128" slack="0"/>
<pin id="179" dir="1" index="1" bw="8" slack="2"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_3/117 "/>
</bind>
</comp>

<comp id="181" class="1004" name="tmp_data_4_fu_181">
<pin_list>
<pin id="182" dir="0" index="0" bw="128" slack="0"/>
<pin id="183" dir="1" index="1" bw="8" slack="3"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_4/117 "/>
</bind>
</comp>

<comp id="185" class="1004" name="tmp_data_5_fu_185">
<pin_list>
<pin id="186" dir="0" index="0" bw="128" slack="0"/>
<pin id="187" dir="1" index="1" bw="8" slack="4"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_5/117 "/>
</bind>
</comp>

<comp id="189" class="1004" name="tmp_data_6_fu_189">
<pin_list>
<pin id="190" dir="0" index="0" bw="128" slack="0"/>
<pin id="191" dir="1" index="1" bw="8" slack="5"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_6/117 "/>
</bind>
</comp>

<comp id="193" class="1004" name="tmp_data_7_fu_193">
<pin_list>
<pin id="194" dir="0" index="0" bw="128" slack="0"/>
<pin id="195" dir="1" index="1" bw="8" slack="6"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_7/117 "/>
</bind>
</comp>

<comp id="197" class="1004" name="tmp_data_8_fu_197">
<pin_list>
<pin id="198" dir="0" index="0" bw="128" slack="0"/>
<pin id="199" dir="1" index="1" bw="8" slack="7"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_8/117 "/>
</bind>
</comp>

<comp id="201" class="1004" name="tmp_data_9_fu_201">
<pin_list>
<pin id="202" dir="0" index="0" bw="128" slack="0"/>
<pin id="203" dir="1" index="1" bw="8" slack="8"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_9/117 "/>
</bind>
</comp>

<comp id="205" class="1004" name="tmp_data_1_fu_205">
<pin_list>
<pin id="206" dir="0" index="0" bw="128" slack="0"/>
<pin id="207" dir="1" index="1" bw="8" slack="9"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_1/117 "/>
</bind>
</comp>

<comp id="209" class="1004" name="tmp_data_10_fu_209">
<pin_list>
<pin id="210" dir="0" index="0" bw="128" slack="0"/>
<pin id="211" dir="1" index="1" bw="8" slack="10"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_10/117 "/>
</bind>
</comp>

<comp id="213" class="1004" name="tmp_data_11_fu_213">
<pin_list>
<pin id="214" dir="0" index="0" bw="128" slack="0"/>
<pin id="215" dir="1" index="1" bw="8" slack="11"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_11/117 "/>
</bind>
</comp>

<comp id="217" class="1004" name="tmp_data_12_fu_217">
<pin_list>
<pin id="218" dir="0" index="0" bw="128" slack="0"/>
<pin id="219" dir="1" index="1" bw="8" slack="12"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_12/117 "/>
</bind>
</comp>

<comp id="221" class="1004" name="tmp_data_13_fu_221">
<pin_list>
<pin id="222" dir="0" index="0" bw="128" slack="0"/>
<pin id="223" dir="1" index="1" bw="8" slack="13"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_13/117 "/>
</bind>
</comp>

<comp id="225" class="1004" name="tmp_data_14_fu_225">
<pin_list>
<pin id="226" dir="0" index="0" bw="128" slack="0"/>
<pin id="227" dir="1" index="1" bw="8" slack="14"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_14/117 "/>
</bind>
</comp>

<comp id="229" class="1004" name="tmp_data_15_fu_229">
<pin_list>
<pin id="230" dir="0" index="0" bw="128" slack="0"/>
<pin id="231" dir="1" index="1" bw="8" slack="15"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_15/117 "/>
</bind>
</comp>

<comp id="233" class="1005" name="exitcond1_reg_233">
<pin_list>
<pin id="234" dir="0" index="0" bw="1" slack="1"/>
<pin id="235" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="exitcond1 "/>
</bind>
</comp>

<comp id="237" class="1005" name="block_1_reg_237">
<pin_list>
<pin id="238" dir="0" index="0" bw="5" slack="0"/>
<pin id="239" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opset="block_1 "/>
</bind>
</comp>

<comp id="242" class="1005" name="tmp_last_V_reg_242">
<pin_list>
<pin id="243" dir="0" index="0" bw="1" slack="129"/>
<pin id="244" dir="1" index="1" bw="1" slack="129"/>
</pin_list>
<bind>
<opset="tmp_last_V "/>
</bind>
</comp>

<comp id="247" class="1005" name="tmp_data_16_reg_247">
<pin_list>
<pin id="248" dir="0" index="0" bw="8" slack="15"/>
<pin id="249" dir="1" index="1" bw="8" slack="15"/>
</pin_list>
<bind>
<opset="tmp_data_16 "/>
</bind>
</comp>

<comp id="252" class="1005" name="tmp_data_17_reg_252">
<pin_list>
<pin id="253" dir="0" index="0" bw="8" slack="14"/>
<pin id="254" dir="1" index="1" bw="8" slack="14"/>
</pin_list>
<bind>
<opset="tmp_data_17 "/>
</bind>
</comp>

<comp id="257" class="1005" name="tmp_data_18_reg_257">
<pin_list>
<pin id="258" dir="0" index="0" bw="8" slack="13"/>
<pin id="259" dir="1" index="1" bw="8" slack="13"/>
</pin_list>
<bind>
<opset="tmp_data_18 "/>
</bind>
</comp>

<comp id="262" class="1005" name="tmp_data_19_reg_262">
<pin_list>
<pin id="263" dir="0" index="0" bw="8" slack="12"/>
<pin id="264" dir="1" index="1" bw="8" slack="12"/>
</pin_list>
<bind>
<opset="tmp_data_19 "/>
</bind>
</comp>

<comp id="267" class="1005" name="tmp_data_20_reg_267">
<pin_list>
<pin id="268" dir="0" index="0" bw="8" slack="11"/>
<pin id="269" dir="1" index="1" bw="8" slack="11"/>
</pin_list>
<bind>
<opset="tmp_data_20 "/>
</bind>
</comp>

<comp id="272" class="1005" name="tmp_data_21_reg_272">
<pin_list>
<pin id="273" dir="0" index="0" bw="8" slack="10"/>
<pin id="274" dir="1" index="1" bw="8" slack="10"/>
</pin_list>
<bind>
<opset="tmp_data_21 "/>
</bind>
</comp>

<comp id="277" class="1005" name="tmp_data_22_reg_277">
<pin_list>
<pin id="278" dir="0" index="0" bw="8" slack="9"/>
<pin id="279" dir="1" index="1" bw="8" slack="9"/>
</pin_list>
<bind>
<opset="tmp_data_22 "/>
</bind>
</comp>

<comp id="282" class="1005" name="tmp_data_23_reg_282">
<pin_list>
<pin id="283" dir="0" index="0" bw="8" slack="8"/>
<pin id="284" dir="1" index="1" bw="8" slack="8"/>
</pin_list>
<bind>
<opset="tmp_data_23 "/>
</bind>
</comp>

<comp id="287" class="1005" name="tmp_data_24_reg_287">
<pin_list>
<pin id="288" dir="0" index="0" bw="8" slack="7"/>
<pin id="289" dir="1" index="1" bw="8" slack="7"/>
</pin_list>
<bind>
<opset="tmp_data_24 "/>
</bind>
</comp>

<comp id="292" class="1005" name="tmp_data_25_reg_292">
<pin_list>
<pin id="293" dir="0" index="0" bw="8" slack="6"/>
<pin id="294" dir="1" index="1" bw="8" slack="6"/>
</pin_list>
<bind>
<opset="tmp_data_25 "/>
</bind>
</comp>

<comp id="297" class="1005" name="tmp_data_26_reg_297">
<pin_list>
<pin id="298" dir="0" index="0" bw="8" slack="5"/>
<pin id="299" dir="1" index="1" bw="8" slack="5"/>
</pin_list>
<bind>
<opset="tmp_data_26 "/>
</bind>
</comp>

<comp id="302" class="1005" name="tmp_data_27_reg_302">
<pin_list>
<pin id="303" dir="0" index="0" bw="8" slack="4"/>
<pin id="304" dir="1" index="1" bw="8" slack="4"/>
</pin_list>
<bind>
<opset="tmp_data_27 "/>
</bind>
</comp>

<comp id="307" class="1005" name="tmp_data_28_reg_307">
<pin_list>
<pin id="308" dir="0" index="0" bw="8" slack="3"/>
<pin id="309" dir="1" index="1" bw="8" slack="3"/>
</pin_list>
<bind>
<opset="tmp_data_28 "/>
</bind>
</comp>

<comp id="312" class="1005" name="tmp_data_29_reg_312">
<pin_list>
<pin id="313" dir="0" index="0" bw="8" slack="2"/>
<pin id="314" dir="1" index="1" bw="8" slack="2"/>
</pin_list>
<bind>
<opset="tmp_data_29 "/>
</bind>
</comp>

<comp id="317" class="1005" name="tmp_data_30_reg_317">
<pin_list>
<pin id="318" dir="0" index="0" bw="8" slack="1"/>
<pin id="319" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="tmp_data_30 "/>
</bind>
</comp>

<comp id="322" class="1005" name="tmp_data_2_reg_322">
<pin_list>
<pin id="323" dir="0" index="0" bw="8" slack="1"/>
<pin id="324" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="tmp_data_2 "/>
</bind>
</comp>

<comp id="327" class="1005" name="tmp_data_3_reg_327">
<pin_list>
<pin id="328" dir="0" index="0" bw="8" slack="2"/>
<pin id="329" dir="1" index="1" bw="8" slack="2"/>
</pin_list>
<bind>
<opset="tmp_data_3 "/>
</bind>
</comp>

<comp id="332" class="1005" name="tmp_data_4_reg_332">
<pin_list>
<pin id="333" dir="0" index="0" bw="8" slack="3"/>
<pin id="334" dir="1" index="1" bw="8" slack="3"/>
</pin_list>
<bind>
<opset="tmp_data_4 "/>
</bind>
</comp>

<comp id="337" class="1005" name="tmp_data_5_reg_337">
<pin_list>
<pin id="338" dir="0" index="0" bw="8" slack="4"/>
<pin id="339" dir="1" index="1" bw="8" slack="4"/>
</pin_list>
<bind>
<opset="tmp_data_5 "/>
</bind>
</comp>

<comp id="342" class="1005" name="tmp_data_6_reg_342">
<pin_list>
<pin id="343" dir="0" index="0" bw="8" slack="5"/>
<pin id="344" dir="1" index="1" bw="8" slack="5"/>
</pin_list>
<bind>
<opset="tmp_data_6 "/>
</bind>
</comp>

<comp id="347" class="1005" name="tmp_data_7_reg_347">
<pin_list>
<pin id="348" dir="0" index="0" bw="8" slack="6"/>
<pin id="349" dir="1" index="1" bw="8" slack="6"/>
</pin_list>
<bind>
<opset="tmp_data_7 "/>
</bind>
</comp>

<comp id="352" class="1005" name="tmp_data_8_reg_352">
<pin_list>
<pin id="353" dir="0" index="0" bw="8" slack="7"/>
<pin id="354" dir="1" index="1" bw="8" slack="7"/>
</pin_list>
<bind>
<opset="tmp_data_8 "/>
</bind>
</comp>

<comp id="357" class="1005" name="tmp_data_9_reg_357">
<pin_list>
<pin id="358" dir="0" index="0" bw="8" slack="8"/>
<pin id="359" dir="1" index="1" bw="8" slack="8"/>
</pin_list>
<bind>
<opset="tmp_data_9 "/>
</bind>
</comp>

<comp id="362" class="1005" name="tmp_data_1_reg_362">
<pin_list>
<pin id="363" dir="0" index="0" bw="8" slack="9"/>
<pin id="364" dir="1" index="1" bw="8" slack="9"/>
</pin_list>
<bind>
<opset="tmp_data_1 "/>
</bind>
</comp>

<comp id="367" class="1005" name="tmp_data_10_reg_367">
<pin_list>
<pin id="368" dir="0" index="0" bw="8" slack="10"/>
<pin id="369" dir="1" index="1" bw="8" slack="10"/>
</pin_list>
<bind>
<opset="tmp_data_10 "/>
</bind>
</comp>

<comp id="372" class="1005" name="tmp_data_11_reg_372">
<pin_list>
<pin id="373" dir="0" index="0" bw="8" slack="11"/>
<pin id="374" dir="1" index="1" bw="8" slack="11"/>
</pin_list>
<bind>
<opset="tmp_data_11 "/>
</bind>
</comp>

<comp id="377" class="1005" name="tmp_data_12_reg_377">
<pin_list>
<pin id="378" dir="0" index="0" bw="8" slack="12"/>
<pin id="379" dir="1" index="1" bw="8" slack="12"/>
</pin_list>
<bind>
<opset="tmp_data_12 "/>
</bind>
</comp>

<comp id="382" class="1005" name="tmp_data_13_reg_382">
<pin_list>
<pin id="383" dir="0" index="0" bw="8" slack="13"/>
<pin id="384" dir="1" index="1" bw="8" slack="13"/>
</pin_list>
<bind>
<opset="tmp_data_13 "/>
</bind>
</comp>

<comp id="387" class="1005" name="tmp_data_14_reg_387">
<pin_list>
<pin id="388" dir="0" index="0" bw="8" slack="14"/>
<pin id="389" dir="1" index="1" bw="8" slack="14"/>
</pin_list>
<bind>
<opset="tmp_data_14 "/>
</bind>
</comp>

<comp id="392" class="1005" name="tmp_data_15_reg_392">
<pin_list>
<pin id="393" dir="0" index="0" bw="8" slack="15"/>
<pin id="394" dir="1" index="1" bw="8" slack="15"/>
</pin_list>
<bind>
<opset="tmp_data_15 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="75"><net_src comp="16" pin="0"/><net_sink comp="72" pin=0"/></net>

<net id="82"><net_src comp="44" pin="0"/><net_sink comp="76" pin=0"/></net>

<net id="83"><net_src comp="0" pin="0"/><net_sink comp="76" pin=1"/></net>

<net id="84"><net_src comp="2" pin="0"/><net_sink comp="76" pin=2"/></net>

<net id="85"><net_src comp="4" pin="0"/><net_sink comp="76" pin=3"/></net>

<net id="95"><net_src comp="48" pin="0"/><net_sink comp="86" pin=0"/></net>

<net id="96"><net_src comp="6" pin="0"/><net_sink comp="86" pin=1"/></net>

<net id="97"><net_src comp="8" pin="0"/><net_sink comp="86" pin=2"/></net>

<net id="98"><net_src comp="10" pin="0"/><net_sink comp="86" pin=3"/></net>

<net id="99"><net_src comp="50" pin="0"/><net_sink comp="86" pin=5"/></net>

<net id="100"><net_src comp="52" pin="0"/><net_sink comp="86" pin=6"/></net>

<net id="104"><net_src comp="36" pin="0"/><net_sink comp="101" pin=0"/></net>

<net id="111"><net_src comp="101" pin="1"/><net_sink comp="105" pin=0"/></net>

<net id="133"><net_src comp="46" pin="0"/><net_sink comp="112" pin=0"/></net>

<net id="134"><net_src comp="12" pin="0"/><net_sink comp="112" pin=18"/></net>

<net id="141"><net_src comp="18" pin="0"/><net_sink comp="135" pin=0"/></net>

<net id="142"><net_src comp="72" pin="1"/><net_sink comp="135" pin=1"/></net>

<net id="143"><net_src comp="12" pin="0"/><net_sink comp="135" pin=2"/></net>

<net id="144"><net_src comp="14" pin="0"/><net_sink comp="135" pin=3"/></net>

<net id="148"><net_src comp="76" pin="4"/><net_sink comp="145" pin=0"/></net>

<net id="149"><net_src comp="145" pin="1"/><net_sink comp="112" pin=16"/></net>

<net id="154"><net_src comp="105" pin="4"/><net_sink comp="150" pin=0"/></net>

<net id="155"><net_src comp="38" pin="0"/><net_sink comp="150" pin=1"/></net>

<net id="160"><net_src comp="105" pin="4"/><net_sink comp="156" pin=0"/></net>

<net id="161"><net_src comp="40" pin="0"/><net_sink comp="156" pin=1"/></net>

<net id="166"><net_src comp="105" pin="4"/><net_sink comp="162" pin=0"/></net>

<net id="167"><net_src comp="42" pin="0"/><net_sink comp="162" pin=1"/></net>

<net id="171"><net_src comp="112" pin="19"/><net_sink comp="168" pin=0"/></net>

<net id="172"><net_src comp="168" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="176"><net_src comp="112" pin="19"/><net_sink comp="173" pin=0"/></net>

<net id="180"><net_src comp="112" pin="19"/><net_sink comp="177" pin=0"/></net>

<net id="184"><net_src comp="112" pin="19"/><net_sink comp="181" pin=0"/></net>

<net id="188"><net_src comp="112" pin="19"/><net_sink comp="185" pin=0"/></net>

<net id="192"><net_src comp="112" pin="19"/><net_sink comp="189" pin=0"/></net>

<net id="196"><net_src comp="112" pin="19"/><net_sink comp="193" pin=0"/></net>

<net id="200"><net_src comp="112" pin="19"/><net_sink comp="197" pin=0"/></net>

<net id="204"><net_src comp="112" pin="19"/><net_sink comp="201" pin=0"/></net>

<net id="208"><net_src comp="112" pin="19"/><net_sink comp="205" pin=0"/></net>

<net id="212"><net_src comp="112" pin="19"/><net_sink comp="209" pin=0"/></net>

<net id="216"><net_src comp="112" pin="19"/><net_sink comp="213" pin=0"/></net>

<net id="220"><net_src comp="112" pin="19"/><net_sink comp="217" pin=0"/></net>

<net id="224"><net_src comp="112" pin="19"/><net_sink comp="221" pin=0"/></net>

<net id="228"><net_src comp="112" pin="19"/><net_sink comp="225" pin=0"/></net>

<net id="232"><net_src comp="112" pin="19"/><net_sink comp="229" pin=0"/></net>

<net id="236"><net_src comp="150" pin="2"/><net_sink comp="233" pin=0"/></net>

<net id="240"><net_src comp="156" pin="2"/><net_sink comp="237" pin=0"/></net>

<net id="241"><net_src comp="237" pin="1"/><net_sink comp="105" pin=2"/></net>

<net id="245"><net_src comp="162" pin="2"/><net_sink comp="242" pin=0"/></net>

<net id="246"><net_src comp="242" pin="1"/><net_sink comp="86" pin=6"/></net>

<net id="250"><net_src comp="145" pin="1"/><net_sink comp="247" pin=0"/></net>

<net id="251"><net_src comp="247" pin="1"/><net_sink comp="112" pin=1"/></net>

<net id="255"><net_src comp="145" pin="1"/><net_sink comp="252" pin=0"/></net>

<net id="256"><net_src comp="252" pin="1"/><net_sink comp="112" pin=2"/></net>

<net id="260"><net_src comp="145" pin="1"/><net_sink comp="257" pin=0"/></net>

<net id="261"><net_src comp="257" pin="1"/><net_sink comp="112" pin=3"/></net>

<net id="265"><net_src comp="145" pin="1"/><net_sink comp="262" pin=0"/></net>

<net id="266"><net_src comp="262" pin="1"/><net_sink comp="112" pin=4"/></net>

<net id="270"><net_src comp="145" pin="1"/><net_sink comp="267" pin=0"/></net>

<net id="271"><net_src comp="267" pin="1"/><net_sink comp="112" pin=5"/></net>

<net id="275"><net_src comp="145" pin="1"/><net_sink comp="272" pin=0"/></net>

<net id="276"><net_src comp="272" pin="1"/><net_sink comp="112" pin=6"/></net>

<net id="280"><net_src comp="145" pin="1"/><net_sink comp="277" pin=0"/></net>

<net id="281"><net_src comp="277" pin="1"/><net_sink comp="112" pin=7"/></net>

<net id="285"><net_src comp="145" pin="1"/><net_sink comp="282" pin=0"/></net>

<net id="286"><net_src comp="282" pin="1"/><net_sink comp="112" pin=8"/></net>

<net id="290"><net_src comp="145" pin="1"/><net_sink comp="287" pin=0"/></net>

<net id="291"><net_src comp="287" pin="1"/><net_sink comp="112" pin=9"/></net>

<net id="295"><net_src comp="145" pin="1"/><net_sink comp="292" pin=0"/></net>

<net id="296"><net_src comp="292" pin="1"/><net_sink comp="112" pin=10"/></net>

<net id="300"><net_src comp="145" pin="1"/><net_sink comp="297" pin=0"/></net>

<net id="301"><net_src comp="297" pin="1"/><net_sink comp="112" pin=11"/></net>

<net id="305"><net_src comp="145" pin="1"/><net_sink comp="302" pin=0"/></net>

<net id="306"><net_src comp="302" pin="1"/><net_sink comp="112" pin=12"/></net>

<net id="310"><net_src comp="145" pin="1"/><net_sink comp="307" pin=0"/></net>

<net id="311"><net_src comp="307" pin="1"/><net_sink comp="112" pin=13"/></net>

<net id="315"><net_src comp="145" pin="1"/><net_sink comp="312" pin=0"/></net>

<net id="316"><net_src comp="312" pin="1"/><net_sink comp="112" pin=14"/></net>

<net id="320"><net_src comp="145" pin="1"/><net_sink comp="317" pin=0"/></net>

<net id="321"><net_src comp="317" pin="1"/><net_sink comp="112" pin=15"/></net>

<net id="325"><net_src comp="173" pin="1"/><net_sink comp="322" pin=0"/></net>

<net id="326"><net_src comp="322" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="330"><net_src comp="177" pin="1"/><net_sink comp="327" pin=0"/></net>

<net id="331"><net_src comp="327" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="335"><net_src comp="181" pin="1"/><net_sink comp="332" pin=0"/></net>

<net id="336"><net_src comp="332" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="340"><net_src comp="185" pin="1"/><net_sink comp="337" pin=0"/></net>

<net id="341"><net_src comp="337" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="345"><net_src comp="189" pin="1"/><net_sink comp="342" pin=0"/></net>

<net id="346"><net_src comp="342" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="350"><net_src comp="193" pin="1"/><net_sink comp="347" pin=0"/></net>

<net id="351"><net_src comp="347" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="355"><net_src comp="197" pin="1"/><net_sink comp="352" pin=0"/></net>

<net id="356"><net_src comp="352" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="360"><net_src comp="201" pin="1"/><net_sink comp="357" pin=0"/></net>

<net id="361"><net_src comp="357" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="365"><net_src comp="205" pin="1"/><net_sink comp="362" pin=0"/></net>

<net id="366"><net_src comp="362" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="370"><net_src comp="209" pin="1"/><net_sink comp="367" pin=0"/></net>

<net id="371"><net_src comp="367" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="375"><net_src comp="213" pin="1"/><net_sink comp="372" pin=0"/></net>

<net id="376"><net_src comp="372" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="380"><net_src comp="217" pin="1"/><net_sink comp="377" pin=0"/></net>

<net id="381"><net_src comp="377" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="385"><net_src comp="221" pin="1"/><net_sink comp="382" pin=0"/></net>

<net id="386"><net_src comp="382" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="390"><net_src comp="225" pin="1"/><net_sink comp="387" pin=0"/></net>

<net id="391"><net_src comp="387" pin="1"/><net_sink comp="86" pin=4"/></net>

<net id="395"><net_src comp="229" pin="1"/><net_sink comp="392" pin=0"/></net>

<net id="396"><net_src comp="392" pin="1"/><net_sink comp="86" pin=4"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: cipher_V_data | {117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 }
	Port: cipher_V_user_V | {117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 }
	Port: cipher_V_last_V | {117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 }
	Port: R | {1 2 }
 - Input state : 
	Port: single_block_AES_encrypt : i_plaintext_V_data | {4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 }
	Port: single_block_AES_encrypt : i_plaintext_V_user_V | {4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 }
	Port: single_block_AES_encrypt : i_plaintext_V_last_V | {4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 }
	Port: single_block_AES_encrypt : s_box | {1 2 27 28 36 37 45 46 54 55 63 64 72 73 81 82 90 91 99 100 108 109 }
	Port: single_block_AES_encrypt : R | {1 2 }
  - Chain level:
	State 1
		stg_135 : 1
	State 2
	State 3
		exitcond1 : 1
		block_1 : 1
		stg_151 : 2
		tmp_last_V : 1
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
		call_ret : 1
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
		tmp_data : 1
		tmp_data_2 : 1
		tmp_data_3 : 1
		tmp_data_4 : 1
		tmp_data_5 : 1
		tmp_data_6 : 1
		tmp_data_7 : 1
		tmp_data_8 : 1
		tmp_data_9 : 1
		tmp_data_1 : 1
		tmp_data_10 : 1
		tmp_data_11 : 1
		tmp_data_12 : 1
		tmp_data_13 : 1
		tmp_data_14 : 1
		tmp_data_15 : 1
		stg_300 : 2
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
		empty_23 : 1
	State 133


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-------------------------------------------------------|---------|---------|---------|
| Operation|                    Functional Unit                    |  Delay  |    FF   |   LUT   |
|----------|-------------------------------------------------------|---------|---------|---------|
|   call   |     grp_single_block_AES_encrypt_aes_cipher_fu_112    |  91.92  |   872   |   5957  |
|          | grp_single_block_AES_encrypt_aes_key_expansion_fu_135 |  18.003 |   396   |   430   |
|----------|-------------------------------------------------------|---------|---------|---------|
|    add   |                     block_1_fu_156                    |    0    |    0    |    5    |
|----------|-------------------------------------------------------|---------|---------|---------|
|   icmp   |                    exitcond1_fu_150                   |    0    |    0    |    2    |
|          |                   tmp_last_V_fu_162                   |    0    |    0    |    2    |
|----------|-------------------------------------------------------|---------|---------|---------|
|   read   |                     grp_read_fu_76                    |    0    |    0    |    0    |
|----------|-------------------------------------------------------|---------|---------|---------|
|   write  |                    grp_write_fu_86                    |    0    |    0    |    0    |
|----------|-------------------------------------------------------|---------|---------|---------|
|          |                       grp_fu_145                      |    0    |    0    |    0    |
|          |                    tmp_data_fu_168                    |    0    |    0    |    0    |
|          |                   tmp_data_2_fu_173                   |    0    |    0    |    0    |
|          |                   tmp_data_3_fu_177                   |    0    |    0    |    0    |
|          |                   tmp_data_4_fu_181                   |    0    |    0    |    0    |
|          |                   tmp_data_5_fu_185                   |    0    |    0    |    0    |
|          |                   tmp_data_6_fu_189                   |    0    |    0    |    0    |
|          |                   tmp_data_7_fu_193                   |    0    |    0    |    0    |
|extractvalue|                   tmp_data_8_fu_197                   |    0    |    0    |    0    |
|          |                   tmp_data_9_fu_201                   |    0    |    0    |    0    |
|          |                   tmp_data_1_fu_205                   |    0    |    0    |    0    |
|          |                   tmp_data_10_fu_209                  |    0    |    0    |    0    |
|          |                   tmp_data_11_fu_213                  |    0    |    0    |    0    |
|          |                   tmp_data_12_fu_217                  |    0    |    0    |    0    |
|          |                   tmp_data_13_fu_221                  |    0    |    0    |    0    |
|          |                   tmp_data_14_fu_225                  |    0    |    0    |    0    |
|          |                   tmp_data_15_fu_229                  |    0    |    0    |    0    |
|----------|-------------------------------------------------------|---------|---------|---------|
|   Total  |                                                       | 109.923 |   1268  |   6396  |
|----------|-------------------------------------------------------|---------|---------|---------|

Memories:
+-----+--------+--------+--------+
|     |  BRAM  |   FF   |   LUT  |
+-----+--------+--------+--------+
|  R  |    0   |   16   |    1   |
|s_box|    8   |    0   |    0   |
|  w  |    1   |    0   |    0   |
+-----+--------+--------+--------+
|Total|    9   |   16   |    1   |
+-----+--------+--------+--------+

* Register list:
+-------------------+--------+
|                   |   FF   |
+-------------------+--------+
|  block_1_reg_237  |    5   |
|   block_reg_101   |    5   |
| exitcond1_reg_233 |    1   |
|tmp_data_10_reg_367|    8   |
|tmp_data_11_reg_372|    8   |
|tmp_data_12_reg_377|    8   |
|tmp_data_13_reg_382|    8   |
|tmp_data_14_reg_387|    8   |
|tmp_data_15_reg_392|    8   |
|tmp_data_16_reg_247|    8   |
|tmp_data_17_reg_252|    8   |
|tmp_data_18_reg_257|    8   |
|tmp_data_19_reg_262|    8   |
| tmp_data_1_reg_362|    8   |
|tmp_data_20_reg_267|    8   |
|tmp_data_21_reg_272|    8   |
|tmp_data_22_reg_277|    8   |
|tmp_data_23_reg_282|    8   |
|tmp_data_24_reg_287|    8   |
|tmp_data_25_reg_292|    8   |
|tmp_data_26_reg_297|    8   |
|tmp_data_27_reg_302|    8   |
|tmp_data_28_reg_307|    8   |
|tmp_data_29_reg_312|    8   |
| tmp_data_2_reg_322|    8   |
|tmp_data_30_reg_317|    8   |
| tmp_data_3_reg_327|    8   |
| tmp_data_4_reg_332|    8   |
| tmp_data_5_reg_337|    8   |
| tmp_data_6_reg_342|    8   |
| tmp_data_7_reg_347|    8   |
| tmp_data_8_reg_352|    8   |
| tmp_data_9_reg_357|    8   |
| tmp_last_V_reg_242|    1   |
+-------------------+--------+
|       Total       |   252  |
+-------------------+--------+

* Multiplexer (MUX) list: 
|-----------------|------|------|------|--------||---------||---------|
|       Comp      |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|-----------------|------|------|------|--------||---------||---------|
| grp_write_fu_86 |  p4  |  16  |   8  |   128  ||    40   |
| grp_write_fu_86 |  p6  |   2  |   1  |    2   ||    1    |
|-----------------|------|------|------|--------||---------||---------|
|      Total      |      |      |      |   130  ||  3.806  ||    41   |
|-----------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           |  BRAM  |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    -   |   109  |  1268  |  6396  |
|   Memory  |    9   |    -   |   16   |    1   |
|Multiplexer|    -   |    3   |    -   |   41   |
|  Register |    -   |    -   |   252  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    9   |   113  |  1536  |  6438  |
+-----------+--------+--------+--------+--------+

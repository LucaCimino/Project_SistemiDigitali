-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity single_block_AES_encrypt_coef_mult is
port (
    b_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    b_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    b_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    b_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of single_block_AES_encrypt_coef_mult is 
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_single_block_AES_encrypt_gmult_fu_44_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_single_block_AES_encrypt_gmult_fu_52_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_single_block_AES_encrypt_gmult_fu_60_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_single_block_AES_encrypt_gmult_fu_68_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_single_block_AES_encrypt_gmult_fu_76_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_single_block_AES_encrypt_gmult_fu_84_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_single_block_AES_encrypt_gmult_fu_92_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_single_block_AES_encrypt_gmult_fu_100_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_single_block_AES_encrypt_gmult_fu_108_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_single_block_AES_encrypt_gmult_fu_116_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_single_block_AES_encrypt_gmult_fu_124_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_single_block_AES_encrypt_gmult_fu_132_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_fu_146_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_140_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_164_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_158_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_fu_182_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp5_fu_176_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_fu_200_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp7_fu_194_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_0_write_assign_fu_152_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_1_write_assign_fu_170_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_2_write_assign_fu_188_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_3_write_assign_fu_206_p2 : STD_LOGIC_VECTOR (7 downto 0);

    component single_block_AES_encrypt_gmult IS
    port (
        a : IN STD_LOGIC_VECTOR (3 downto 0);
        b : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    tmp_single_block_AES_encrypt_gmult_fu_44 : component single_block_AES_encrypt_gmult
    port map (
        a => ap_const_lv4_2,
        b => b_0_read,
        ap_return => tmp_single_block_AES_encrypt_gmult_fu_44_ap_return);

    tmp_s_single_block_AES_encrypt_gmult_fu_52 : component single_block_AES_encrypt_gmult
    port map (
        a => ap_const_lv4_3,
        b => b_1_read,
        ap_return => tmp_s_single_block_AES_encrypt_gmult_fu_52_ap_return);

    tmp_1_single_block_AES_encrypt_gmult_fu_60 : component single_block_AES_encrypt_gmult
    port map (
        a => ap_const_lv4_1,
        b => b_2_read,
        ap_return => tmp_1_single_block_AES_encrypt_gmult_fu_60_ap_return);

    tmp_2_single_block_AES_encrypt_gmult_fu_68 : component single_block_AES_encrypt_gmult
    port map (
        a => ap_const_lv4_1,
        b => b_3_read,
        ap_return => tmp_2_single_block_AES_encrypt_gmult_fu_68_ap_return);

    tmp_5_single_block_AES_encrypt_gmult_fu_76 : component single_block_AES_encrypt_gmult
    port map (
        a => ap_const_lv4_1,
        b => b_0_read,
        ap_return => tmp_5_single_block_AES_encrypt_gmult_fu_76_ap_return);

    tmp_6_single_block_AES_encrypt_gmult_fu_84 : component single_block_AES_encrypt_gmult
    port map (
        a => ap_const_lv4_2,
        b => b_1_read,
        ap_return => tmp_6_single_block_AES_encrypt_gmult_fu_84_ap_return);

    tmp_7_single_block_AES_encrypt_gmult_fu_92 : component single_block_AES_encrypt_gmult
    port map (
        a => ap_const_lv4_3,
        b => b_2_read,
        ap_return => tmp_7_single_block_AES_encrypt_gmult_fu_92_ap_return);

    tmp_3_single_block_AES_encrypt_gmult_fu_100 : component single_block_AES_encrypt_gmult
    port map (
        a => ap_const_lv4_1,
        b => b_1_read,
        ap_return => tmp_3_single_block_AES_encrypt_gmult_fu_100_ap_return);

    tmp_4_single_block_AES_encrypt_gmult_fu_108 : component single_block_AES_encrypt_gmult
    port map (
        a => ap_const_lv4_2,
        b => b_2_read,
        ap_return => tmp_4_single_block_AES_encrypt_gmult_fu_108_ap_return);

    tmp_8_single_block_AES_encrypt_gmult_fu_116 : component single_block_AES_encrypt_gmult
    port map (
        a => ap_const_lv4_3,
        b => b_3_read,
        ap_return => tmp_8_single_block_AES_encrypt_gmult_fu_116_ap_return);

    tmp_9_single_block_AES_encrypt_gmult_fu_124 : component single_block_AES_encrypt_gmult
    port map (
        a => ap_const_lv4_3,
        b => b_0_read,
        ap_return => tmp_9_single_block_AES_encrypt_gmult_fu_124_ap_return);

    tmp_10_single_block_AES_encrypt_gmult_fu_132 : component single_block_AES_encrypt_gmult
    port map (
        a => ap_const_lv4_2,
        b => b_3_read,
        ap_return => tmp_10_single_block_AES_encrypt_gmult_fu_132_ap_return);




    ap_return_0 <= d_0_write_assign_fu_152_p2;
    ap_return_1 <= d_1_write_assign_fu_170_p2;
    ap_return_2 <= d_2_write_assign_fu_188_p2;
    ap_return_3 <= d_3_write_assign_fu_206_p2;
    d_0_write_assign_fu_152_p2 <= (tmp2_fu_146_p2 xor tmp1_fu_140_p2);
    d_1_write_assign_fu_170_p2 <= (tmp4_fu_164_p2 xor tmp3_fu_158_p2);
    d_2_write_assign_fu_188_p2 <= (tmp6_fu_182_p2 xor tmp5_fu_176_p2);
    d_3_write_assign_fu_206_p2 <= (tmp8_fu_200_p2 xor tmp7_fu_194_p2);
    tmp1_fu_140_p2 <= (tmp_s_single_block_AES_encrypt_gmult_fu_52_ap_return xor tmp_single_block_AES_encrypt_gmult_fu_44_ap_return);
    tmp2_fu_146_p2 <= (tmp_1_single_block_AES_encrypt_gmult_fu_60_ap_return xor tmp_2_single_block_AES_encrypt_gmult_fu_68_ap_return);
    tmp3_fu_158_p2 <= (tmp_6_single_block_AES_encrypt_gmult_fu_84_ap_return xor tmp_5_single_block_AES_encrypt_gmult_fu_76_ap_return);
    tmp4_fu_164_p2 <= (tmp_7_single_block_AES_encrypt_gmult_fu_92_ap_return xor tmp_2_single_block_AES_encrypt_gmult_fu_68_ap_return);
    tmp5_fu_176_p2 <= (tmp_3_single_block_AES_encrypt_gmult_fu_100_ap_return xor tmp_5_single_block_AES_encrypt_gmult_fu_76_ap_return);
    tmp6_fu_182_p2 <= (tmp_4_single_block_AES_encrypt_gmult_fu_108_ap_return xor tmp_8_single_block_AES_encrypt_gmult_fu_116_ap_return);
    tmp7_fu_194_p2 <= (tmp_3_single_block_AES_encrypt_gmult_fu_100_ap_return xor tmp_9_single_block_AES_encrypt_gmult_fu_124_ap_return);
    tmp8_fu_200_p2 <= (tmp_1_single_block_AES_encrypt_gmult_fu_60_ap_return xor tmp_10_single_block_AES_encrypt_gmult_fu_132_ap_return);
end behav;

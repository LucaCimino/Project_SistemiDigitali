-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity single_block_AES_encrypt_aes_key_expansion is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    w_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w_ce0 : OUT STD_LOGIC;
    w_we0 : OUT STD_LOGIC;
    w_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    w_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w_ce1 : OUT STD_LOGIC;
    w_we1 : OUT STD_LOGIC;
    w_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of single_block_AES_encrypt_aes_key_expansion is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv8_63 : STD_LOGIC_VECTOR (7 downto 0) := "01100011";
    constant ap_const_lv8_71 : STD_LOGIC_VECTOR (7 downto 0) := "01110001";
    constant ap_const_lv8_6B : STD_LOGIC_VECTOR (7 downto 0) := "01101011";
    constant ap_const_lv8_12 : STD_LOGIC_VECTOR (7 downto 0) := "00010010";
    constant ap_const_lv8_E7 : STD_LOGIC_VECTOR (7 downto 0) := "11100111";
    constant ap_const_lv8_D2 : STD_LOGIC_VECTOR (7 downto 0) := "11010010";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv8_E3 : STD_LOGIC_VECTOR (7 downto 0) := "11100011";
    constant ap_const_lv8_D3 : STD_LOGIC_VECTOR (7 downto 0) := "11010011";
    constant ap_const_lv8_B2 : STD_LOGIC_VECTOR (7 downto 0) := "10110010";
    constant ap_const_lv8_85 : STD_LOGIC_VECTOR (7 downto 0) := "10000101";
    constant ap_const_lv8_67 : STD_LOGIC_VECTOR (7 downto 0) := "01100111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_15 : STD_LOGIC_VECTOR (7 downto 0) := "00010101";
    constant ap_const_lv8_AB : STD_LOGIC_VECTOR (7 downto 0) := "10101011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv8_FC : STD_LOGIC_VECTOR (7 downto 0) := "11111100";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_lv8_FE : STD_LOGIC_VECTOR (7 downto 0) := "11111110";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv8_1B : STD_LOGIC_VECTOR (7 downto 0) := "00011011";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv8_F1 : STD_LOGIC_VECTOR (7 downto 0) := "11110001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_F2 : STD_LOGIC_VECTOR (7 downto 0) := "11110010";
    constant ap_const_lv8_F3 : STD_LOGIC_VECTOR (7 downto 0) := "11110011";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_38 : BOOLEAN;
    signal s_box_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal s_box_ce0 : STD_LOGIC;
    signal s_box_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_ce0 : STD_LOGIC;
    signal R_we0 : STD_LOGIC;
    signal R_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_ce1 : STD_LOGIC;
    signal R_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_621_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_1102 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_83 : BOOLEAN;
    signal exitcond_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_1126 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_99 : BOOLEAN;
    signal tmp_1_reg_1133 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_112 : BOOLEAN;
    signal tmp_3_1_reg_1155 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_1161 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_687_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_124 : BOOLEAN;
    signal write_flag_1_i_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i1_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_3_read_assign_3_fu_726_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_5_fu_742_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_7_fu_758_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_0_1_fu_766_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_fu_779_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_2_reg_1201 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_148 : BOOLEAN;
    signal tmp_42_fu_785_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_reg_1206 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_i_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_assign_cast1_fu_818_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1226 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_873_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_174 : BOOLEAN;
    signal tmp_3_4_fu_889_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_7_fu_905_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_8_fu_913_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_assign_1_fu_921_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_189 : BOOLEAN;
    signal a_assign_2_i_fu_963_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp9_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_3_fu_971_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_3_reg_1263 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_206 : BOOLEAN;
    signal tmp_2_3_fu_977_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_3_reg_1268 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_0_fu_983_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_217 : BOOLEAN;
    signal tmp_3_9_fu_989_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_1015_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_1293 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_24_fu_1021_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_reg_1298 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_237 : BOOLEAN;
    signal tmp_28_fu_1027_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_reg_1303 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_1067_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_reg_1318 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_252 : BOOLEAN;
    signal tmp_38_fu_1073_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_reg_1323 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_reg_440 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_263 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_271 : BOOLEAN;
    signal write_flag_i_reg_452 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_3_read_assign_2_reg_463 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_1_reg_474 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_1_reg_484 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i1_reg_494 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_3_read_assign_reg_505 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_2_read_assign_reg_515 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_3_reg_526 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_6_reg_537 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i_reg_547 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_assign_reg_558 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_in_i_reg_570 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_s_reg_579 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_0_s_reg_588 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_s_reg_597 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_3_2_reg_606 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_327 : BOOLEAN;
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_338 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_349 : BOOLEAN;
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_360 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_371 : BOOLEAN;
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_382 : BOOLEAN;
    signal tmp_12_fu_635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_646_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_656_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_666_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_i_fu_803_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_1000_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_1010_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_fu_1038_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_1048_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_1053_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_1062_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_1084_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_1094_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_460 : BOOLEAN;
    signal tmp_11_fu_629_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_640_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_651_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_661_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_671_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp_i_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_3_read_assign_fu_699_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_1_fu_712_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_4_fu_734_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_6_fu_750_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_789_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_789_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_assign_fu_808_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_43_fu_828_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp1_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_865_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel2_fu_881_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_5_fu_897_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_fu_927_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_45_fu_943_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_46_fu_949_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_assign_1_i_fu_957_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_995_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_1005_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_1033_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_fu_1043_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_1057_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_1079_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_1089_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);

    component single_block_AES_encrypt_mux_4to1_sel2_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component single_block_AES_encrypt_aes_key_expansion_s_box IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component single_block_AES_encrypt_aes_key_expansion_R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    s_box_U : component single_block_AES_encrypt_aes_key_expansion_s_box
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s_box_address0,
        ce0 => s_box_ce0,
        q0 => s_box_q0);

    R_U : component single_block_AES_encrypt_aes_key_expansion_R
    generic map (
        DataWidth => 8,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => R_address0,
        ce0 => R_ce0,
        we0 => R_we0,
        d0 => R_d0,
        q0 => R_q0,
        address1 => R_address1,
        ce1 => R_ce1,
        q1 => R_q1);

    single_block_AES_encrypt_mux_4to1_sel2_8_1_U0 : component single_block_AES_encrypt_mux_4to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => tmp_3_6_reg_537,
        din2 => tmp_3_3_reg_526,
        din3 => a_2_read_assign_reg_515,
        din4 => a_3_read_assign_reg_505,
        din5 => tmp_fu_789_p5,
        dout => tmp_fu_789_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    a_2_read_assign_reg_515_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                a_2_read_assign_reg_515 <= tmp_3_4_fu_889_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = exitcond_i1_fu_681_p2)))) then 
                a_2_read_assign_reg_515 <= tmp_2_1_reg_474;
            end if; 
        end if;
    end process;

    a_3_read_assign_reg_505_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                a_3_read_assign_reg_505 <= tmp_3_fu_873_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = exitcond_i1_fu_681_p2)))) then 
                a_3_read_assign_reg_505 <= tmp_47_reg_1126;
            end if; 
        end if;
    end process;

    a_assign_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond_i_fu_773_p2)) and (ap_const_lv1_0 = tmp_20_fu_822_p2) and (ap_const_lv1_0 = icmp_fu_838_p2))) then 
                a_assign_reg_558 <= ap_const_lv8_2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = icmp_reg_1226) and (ap_const_lv1_0 = icmp9_fu_937_p2))) then 
                a_assign_reg_558 <= a_assign_2_i_fu_963_p3;
            end if; 
        end if;
    end process;

    i_1_reg_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                i_1_reg_440 <= ap_const_lv6_4;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
                i_1_reg_440 <= i_reg_1293;
            end if; 
        end if;
    end process;

    i_i1_reg_494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = tmp_19_fu_675_p2)))) then 
                i_i1_reg_494 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i1_fu_681_p2))) then 
                i_i1_reg_494 <= i_3_fu_687_p2;
            end if; 
        end if;
    end process;

    i_i_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                i_i_reg_547 <= i_2_reg_1201;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = exitcond_i1_fu_681_p2)))) then 
                i_i_reg_547 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_0_in_i_reg_570_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond_i_fu_773_p2)) and (ap_const_lv1_0 = tmp_20_fu_822_p2) and (ap_const_lv1_0 = icmp_fu_838_p2))) then 
                p_0_in_i_reg_570 <= i_assign_cast1_fu_818_p1;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = icmp_reg_1226) and (ap_const_lv1_0 = icmp9_fu_937_p2))) then 
                p_0_in_i_reg_570 <= i_assign_1_fu_921_p2;
            end if; 
        end if;
    end process;

    tmp_0_s_reg_588_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = tmp_19_fu_675_p2))) then 
                tmp_0_s_reg_588 <= tmp_47_reg_1126;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_lv1_0 = tmp_19_reg_1161)))) then 
                tmp_0_s_reg_588 <= tmp_0_fu_983_p2;
            end if; 
        end if;
    end process;

    tmp_1_1_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = tmp_19_fu_675_p2)))) then 
                tmp_1_1_reg_484 <= tmp_1_reg_1133;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i1_fu_681_p2))) then 
                tmp_1_1_reg_484 <= w_3_read_assign_7_fu_758_p3;
            end if; 
        end if;
    end process;

    tmp_1_s_reg_579_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = tmp_19_fu_675_p2))) then 
                tmp_1_s_reg_579 <= tmp_1_reg_1133;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_lv1_0 = tmp_19_reg_1161)))) then 
                tmp_1_s_reg_579 <= tmp_1_3_reg_1263;
            end if; 
        end if;
    end process;

    tmp_2_1_reg_474_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = tmp_19_fu_675_p2)))) then 
                tmp_2_1_reg_474 <= w_q0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i1_fu_681_p2))) then 
                tmp_2_1_reg_474 <= w_3_read_assign_5_fu_742_p3;
            end if; 
        end if;
    end process;

    tmp_2_3_2_reg_606_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = tmp_19_fu_675_p2))) then 
                tmp_2_3_2_reg_606 <= w_q0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_lv1_0 = tmp_19_reg_1161)))) then 
                tmp_2_3_2_reg_606 <= tmp_2_3_reg_1268;
            end if; 
        end if;
    end process;

    tmp_3_3_reg_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                tmp_3_3_reg_526 <= tmp_3_7_fu_905_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = exitcond_i1_fu_681_p2)))) then 
                tmp_3_3_reg_526 <= tmp_1_1_reg_484;
            end if; 
        end if;
    end process;

    tmp_3_6_reg_537_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                tmp_3_6_reg_537 <= tmp_3_8_fu_913_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = exitcond_i1_fu_681_p2)))) then 
                tmp_3_6_reg_537 <= tmp_0_1_fu_766_p3;
            end if; 
        end if;
    end process;

    tmp_3_s_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = tmp_19_fu_675_p2))) then 
                tmp_3_s_reg_597 <= w_q1;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_lv1_0 = tmp_19_reg_1161)))) then 
                tmp_3_s_reg_597 <= tmp_3_9_fu_989_p2;
            end if; 
        end if;
    end process;

    write_flag_i_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = tmp_19_fu_675_p2)))) then 
                write_flag_i_reg_452 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i1_fu_681_p2))) then 
                write_flag_i_reg_452 <= write_flag_1_i_fu_720_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                i_2_reg_1201 <= i_2_fu_779_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then
                i_reg_1293 <= i_fu_1015_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond_i_fu_773_p2)) and (ap_const_lv1_0 = tmp_20_fu_822_p2))) then
                icmp_reg_1226 <= icmp_fu_838_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                tmp_19_reg_1161 <= tmp_19_fu_675_p2;
                tmp_3_1_reg_1155 <= w_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then
                tmp_1_3_reg_1263 <= tmp_1_3_fu_971_p2;
                tmp_2_3_reg_1268 <= tmp_2_3_fu_977_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                tmp_1_reg_1133 <= w_q1;
                tmp_47_reg_1126 <= w_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then
                tmp_24_reg_1298 <= tmp_24_fu_1021_p2;
                tmp_28_reg_1303 <= tmp_28_fu_1027_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then
                tmp_33_reg_1318 <= tmp_33_fu_1067_p2;
                tmp_38_reg_1323 <= tmp_38_fu_1073_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_lv1_0 = exitcond_i_fu_773_p2))) then
                tmp_42_reg_1206 <= tmp_42_fu_785_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and (exitcond_fu_615_p2 = ap_const_lv1_0))) then
                    tmp_s_reg_1102(7 downto 2) <= tmp_s_fu_621_p3(7 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i1_fu_681_p2))) then
                w_3_read_assign_2_reg_463 <= w_3_read_assign_3_fu_726_p3;
            end if;
        end if;
    end process;
    tmp_s_reg_1102(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_fu_615_p2, tmp_19_fu_675_p2, exitcond_i1_fu_681_p2, exitcond_i_fu_773_p2, icmp_reg_1226, tmp_20_fu_822_p2, icmp9_fu_937_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                if (not((exitcond_fu_615_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                if ((ap_const_lv1_0 = tmp_19_fu_675_p2)) then
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st12_fsm_11 => 
                if (not((ap_const_lv1_0 = exitcond_i1_fu_681_p2))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st13_fsm_12 => 
                if ((not((ap_const_lv1_0 = exitcond_i_fu_773_p2)) and not((ap_const_lv1_0 = tmp_20_fu_822_p2)))) then
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                elsif ((not((ap_const_lv1_0 = exitcond_i_fu_773_p2)) and (ap_const_lv1_0 = tmp_20_fu_822_p2))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                end if;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st15_fsm_14 => 
                if ((not((ap_const_lv1_0 = icmp9_fu_937_p2)) or not((ap_const_lv1_0 = icmp_reg_1226)))) then
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                end if;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    R_address0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            R_address0 <= ap_const_lv2_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            R_address0 <= ap_const_lv2_3;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            R_address0 <= ap_const_lv2_1;
        else 
            R_address0 <= "XX";
        end if; 
    end process;


    R_address1_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            R_address1 <= ap_const_lv2_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            R_address1 <= ap_const_lv2_2;
        else 
            R_address1 <= "XX";
        end if; 
    end process;


    R_ce0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            R_ce0 <= ap_const_logic_1;
        else 
            R_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    R_ce1_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            R_ce1 <= ap_const_logic_1;
        else 
            R_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    R_d0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st15_fsm_14, a_assign_reg_558)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            R_d0 <= a_assign_reg_558;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            R_d0 <= ap_const_lv8_1;
        else 
            R_d0 <= "XXXXXXXX";
        end if; 
    end process;


    R_we0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, exitcond_i_fu_773_p2, icmp_reg_1226, tmp_20_fu_822_p2, ap_sig_cseq_ST_st15_fsm_14, icmp9_fu_937_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond_i_fu_773_p2)) and not((ap_const_lv1_0 = tmp_20_fu_822_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = icmp_reg_1226) and not((ap_const_lv1_0 = icmp9_fu_937_p2))))) then 
            R_we0 <= ap_const_logic_1;
        else 
            R_we0 <= ap_const_logic_0;
        end if; 
    end process;

    a_assign_1_i_fu_957_p2 <= (tmp_45_fu_943_p2 xor ap_const_lv8_1B);
    a_assign_2_i_fu_963_p3 <= 
        a_assign_1_i_fu_957_p2 when (tmp_46_fu_949_p3(0) = '1') else 
        tmp_45_fu_943_p2;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st9_fsm_8, exitcond_fu_615_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((exitcond_fu_615_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, exitcond_fu_615_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((exitcond_fu_615_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_112_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_112 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_124_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_124 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_148_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_148 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_174_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_174 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_189_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_189 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_206_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_206 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_217_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_217 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_237_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_237 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_252_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_252 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_263_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_263 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_271_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_271 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_327_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_327 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_338_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_338 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_349_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_349 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_360_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_360 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_371_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_371 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_38_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_38 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_382_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_382 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_460_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_460 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_83_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_83 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_99_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_99 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_99)
    begin
        if (ap_sig_99) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_112)
    begin
        if (ap_sig_112) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_124)
    begin
        if (ap_sig_124) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_148)
    begin
        if (ap_sig_148) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_174)
    begin
        if (ap_sig_174) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_189)
    begin
        if (ap_sig_189) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_460)
    begin
        if (ap_sig_460) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_206)
    begin
        if (ap_sig_206) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_217)
    begin
        if (ap_sig_217) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_237)
    begin
        if (ap_sig_237) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_38)
    begin
        if (ap_sig_38) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_252)
    begin
        if (ap_sig_252) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_263)
    begin
        if (ap_sig_263) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_327)
    begin
        if (ap_sig_327) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_338)
    begin
        if (ap_sig_338) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_349)
    begin
        if (ap_sig_349) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_360)
    begin
        if (ap_sig_360) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_371)
    begin
        if (ap_sig_371) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_382)
    begin
        if (ap_sig_382) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_271)
    begin
        if (ap_sig_271) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_83)
    begin
        if (ap_sig_83) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_615_p2 <= "1" when (i_1_reg_440 = ap_const_lv6_2C) else "0";
    exitcond_i1_fu_681_p2 <= "1" when (i_i1_reg_494 = ap_const_lv2_3) else "0";
    exitcond_i_fu_773_p2 <= "1" when (i_i_reg_547 = ap_const_lv3_4) else "0";
    i_2_fu_779_p2 <= std_logic_vector(unsigned(i_i_reg_547) + unsigned(ap_const_lv3_1));
    i_3_fu_687_p2 <= std_logic_vector(unsigned(i_i1_reg_494) + unsigned(ap_const_lv2_1));
    i_assign_1_fu_921_p2 <= std_logic_vector(unsigned(p_0_in_i_reg_570) + unsigned(ap_const_lv8_FF));
    i_assign_cast1_fu_818_p1 <= std_logic_vector(resize(unsigned(i_assign_fu_808_p4),8));
    i_assign_fu_808_p4 <= i_1_reg_440(5 downto 2);
    i_fu_1015_p2 <= std_logic_vector(unsigned(i_1_reg_440) + unsigned(ap_const_lv6_1));
    icmp9_fu_937_p2 <= "1" when (tmp_44_fu_927_p4 = ap_const_lv7_0) else "0";
    icmp_fu_838_p2 <= "1" when (tmp_43_fu_828_p4 = ap_const_lv3_0) else "0";
    newSel2_fu_881_p3 <= 
        s_box_q0 when (sel_tmp_fu_844_p2(0) = '1') else 
        a_2_read_assign_reg_515;
    newSel_fu_865_p3 <= 
        a_3_read_assign_reg_505 when (sel_tmp_fu_844_p2(0) = '1') else 
        s_box_q0;
    or_cond_fu_859_p2 <= (sel_tmp1_fu_854_p2 or sel_tmp8_fu_849_p2);
    s_box_address0 <= tmp_1_i_fu_803_p1(8 - 1 downto 0);

    s_box_ce0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            s_box_ce0 <= ap_const_logic_1;
        else 
            s_box_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sel_tmp1_fu_854_p2 <= "1" when (tmp_42_reg_1206 = ap_const_lv2_0) else "0";
    sel_tmp2_i_fu_706_p2 <= "1" when (i_i1_reg_494 = ap_const_lv2_0) else "0";
    sel_tmp8_fu_849_p2 <= "1" when (tmp_42_reg_1206 = ap_const_lv2_1) else "0";
    sel_tmp_fu_844_p2 <= "1" when (tmp_42_reg_1206 = ap_const_lv2_2) else "0";
    sel_tmp_i_fu_693_p2 <= "1" when (i_i1_reg_494 = ap_const_lv2_1) else "0";
    tmp_0_1_fu_766_p3 <= 
        w_3_read_assign_2_reg_463 when (write_flag_i_reg_452(0) = '1') else 
        tmp_47_reg_1126;
    tmp_0_fu_983_p2 <= (R_q1 xor tmp_3_6_reg_537);
    tmp_11_fu_629_p2 <= std_logic_vector(signed(ap_const_lv8_FC) + signed(tmp_s_fu_621_p3));
    tmp_12_fu_635_p1 <= std_logic_vector(resize(unsigned(tmp_11_fu_629_p2),64));
    tmp_13_fu_640_p2 <= std_logic_vector(signed(ap_const_lv8_FD) + signed(tmp_s_fu_621_p3));
    tmp_14_fu_646_p1 <= std_logic_vector(resize(unsigned(tmp_13_fu_640_p2),64));
    tmp_15_fu_651_p2 <= std_logic_vector(signed(ap_const_lv8_FE) + signed(tmp_s_reg_1102));
    tmp_16_fu_656_p1 <= std_logic_vector(resize(unsigned(tmp_15_fu_651_p2),64));
    tmp_17_fu_661_p2 <= std_logic_vector(signed(ap_const_lv8_FF) + signed(tmp_s_reg_1102));
    tmp_18_fu_666_p1 <= std_logic_vector(resize(unsigned(tmp_17_fu_661_p2),64));
    tmp_19_fu_675_p2 <= "1" when (tmp_22_fu_671_p1 = ap_const_lv2_0) else "0";
    tmp_1_3_fu_971_p2 <= (R_q0 xor tmp_3_3_reg_526);
    tmp_1_i_fu_803_p1 <= std_logic_vector(resize(unsigned(tmp_fu_789_p6),64));
    tmp_20_fu_822_p2 <= "1" when (i_assign_fu_808_p4 = ap_const_lv4_1) else "0";
    tmp_21_fu_995_p2 <= std_logic_vector(unsigned(tmp_s_reg_1102) + unsigned(ap_const_lv8_F0));
    tmp_22_fu_671_p1 <= i_1_reg_440(2 - 1 downto 0);
    tmp_23_fu_1000_p1 <= std_logic_vector(resize(unsigned(tmp_21_fu_995_p2),64));
    tmp_24_fu_1021_p2 <= (w_q0 xor tmp_0_s_reg_588);
    tmp_25_fu_1053_p1 <= std_logic_vector(resize(unsigned(tmp_s_reg_1102),64));
    tmp_26_fu_1005_p2 <= std_logic_vector(unsigned(tmp_s_reg_1102) + unsigned(ap_const_lv8_F1));
    tmp_27_fu_1010_p1 <= std_logic_vector(resize(unsigned(tmp_26_fu_1005_p2),64));
    tmp_28_fu_1027_p2 <= (w_q1 xor tmp_1_s_reg_579);
    tmp_29_fu_1057_p2 <= (tmp_s_reg_1102 or ap_const_lv8_1);
    tmp_2_3_fu_977_p2 <= (R_q1 xor a_2_read_assign_reg_515);
    tmp_30_fu_1062_p1 <= std_logic_vector(resize(unsigned(tmp_29_fu_1057_p2),64));
    tmp_31_fu_1033_p2 <= std_logic_vector(unsigned(tmp_s_reg_1102) + unsigned(ap_const_lv8_F2));
    tmp_32_fu_1038_p1 <= std_logic_vector(resize(unsigned(tmp_31_fu_1033_p2),64));
    tmp_33_fu_1067_p2 <= (w_q0 xor tmp_2_3_2_reg_606);
    tmp_34_fu_1079_p2 <= (tmp_s_reg_1102 or ap_const_lv8_2);
    tmp_35_fu_1084_p1 <= std_logic_vector(resize(unsigned(tmp_34_fu_1079_p2),64));
    tmp_36_fu_1043_p2 <= std_logic_vector(unsigned(tmp_s_reg_1102) + unsigned(ap_const_lv8_F3));
    tmp_37_fu_1048_p1 <= std_logic_vector(resize(unsigned(tmp_36_fu_1043_p2),64));
    tmp_38_fu_1073_p2 <= (w_q1 xor tmp_3_s_reg_597);
    tmp_39_fu_1089_p2 <= (tmp_s_reg_1102 or ap_const_lv8_3);
    tmp_3_4_fu_889_p3 <= 
        a_2_read_assign_reg_515 when (or_cond_fu_859_p2(0) = '1') else 
        newSel2_fu_881_p3;
    tmp_3_5_fu_897_p3 <= 
        s_box_q0 when (sel_tmp8_fu_849_p2(0) = '1') else 
        tmp_3_3_reg_526;
    tmp_3_7_fu_905_p3 <= 
        tmp_3_3_reg_526 when (sel_tmp1_fu_854_p2(0) = '1') else 
        tmp_3_5_fu_897_p3;
    tmp_3_8_fu_913_p3 <= 
        s_box_q0 when (sel_tmp1_fu_854_p2(0) = '1') else 
        tmp_3_6_reg_537;
    tmp_3_9_fu_989_p2 <= (R_q0 xor a_3_read_assign_reg_505);
    tmp_3_fu_873_p3 <= 
        a_3_read_assign_reg_505 when (or_cond_fu_859_p2(0) = '1') else 
        newSel_fu_865_p3;
    tmp_40_fu_1094_p1 <= std_logic_vector(resize(unsigned(tmp_39_fu_1089_p2),64));
    tmp_42_fu_785_p1 <= i_i_reg_547(2 - 1 downto 0);
    tmp_43_fu_828_p4 <= i_1_reg_440(5 downto 3);
    tmp_44_fu_927_p4 <= i_assign_1_fu_921_p2(7 downto 1);
    tmp_45_fu_943_p2 <= std_logic_vector(shift_left(unsigned(a_assign_reg_558),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_46_fu_949_p3 <= a_assign_reg_558(7 downto 7);
    tmp_fu_789_p5 <= i_i_reg_547(2 - 1 downto 0);
    tmp_s_fu_621_p3 <= (i_1_reg_440 & ap_const_lv2_0);
    w_3_read_assign_1_fu_712_p3 <= 
        tmp_1_1_reg_484 when (sel_tmp2_i_fu_706_p2(0) = '1') else 
        w_3_read_assign_fu_699_p3;
    w_3_read_assign_3_fu_726_p3 <= 
        tmp_1_1_reg_484 when (sel_tmp2_i_fu_706_p2(0) = '1') else 
        w_3_read_assign_2_reg_463;
    w_3_read_assign_4_fu_734_p3 <= 
        tmp_2_1_reg_474 when (sel_tmp_i_fu_693_p2(0) = '1') else 
        w_3_read_assign_1_fu_712_p3;
    w_3_read_assign_5_fu_742_p3 <= 
        tmp_2_1_reg_474 when (sel_tmp2_i_fu_706_p2(0) = '1') else 
        w_3_read_assign_4_fu_734_p3;
    w_3_read_assign_6_fu_750_p3 <= 
        w_3_read_assign_1_fu_712_p3 when (sel_tmp_i_fu_693_p2(0) = '1') else 
        tmp_1_1_reg_484;
    w_3_read_assign_7_fu_758_p3 <= 
        tmp_1_1_reg_484 when (sel_tmp2_i_fu_706_p2(0) = '1') else 
        w_3_read_assign_6_fu_750_p3;
    w_3_read_assign_fu_699_p3 <= 
        tmp_2_1_reg_474 when (sel_tmp_i_fu_693_p2(0) = '1') else 
        tmp_3_1_reg_1155;

    w_address0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, tmp_12_fu_635_p1, tmp_16_fu_656_p1, tmp_23_fu_1000_p1, tmp_32_fu_1038_p1, tmp_25_fu_1053_p1, tmp_35_fu_1084_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            w_address0 <= tmp_35_fu_1084_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            w_address0 <= tmp_25_fu_1053_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            w_address0 <= ap_const_lv64_E(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            w_address0 <= ap_const_lv64_C(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            w_address0 <= ap_const_lv64_A(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            w_address0 <= ap_const_lv64_8(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            w_address0 <= ap_const_lv64_6(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            w_address0 <= ap_const_lv64_4(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            w_address0 <= ap_const_lv64_2(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            w_address0 <= ap_const_lv64_0(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            w_address0 <= tmp_32_fu_1038_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            w_address0 <= tmp_23_fu_1000_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            w_address0 <= tmp_16_fu_656_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            w_address0 <= tmp_12_fu_635_p1(8 - 1 downto 0);
        else 
            w_address0 <= "XXXXXXXX";
        end if; 
    end process;


    w_address1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, tmp_14_fu_646_p1, tmp_18_fu_666_p1, tmp_27_fu_1010_p1, tmp_37_fu_1048_p1, tmp_30_fu_1062_p1, tmp_40_fu_1094_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            w_address1 <= tmp_40_fu_1094_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            w_address1 <= tmp_30_fu_1062_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            w_address1 <= ap_const_lv64_F(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            w_address1 <= ap_const_lv64_D(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            w_address1 <= ap_const_lv64_B(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            w_address1 <= ap_const_lv64_9(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            w_address1 <= ap_const_lv64_7(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            w_address1 <= ap_const_lv64_5(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            w_address1 <= ap_const_lv64_3(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            w_address1 <= ap_const_lv64_1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            w_address1 <= tmp_37_fu_1048_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            w_address1 <= tmp_27_fu_1010_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            w_address1 <= tmp_18_fu_666_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            w_address1 <= tmp_14_fu_646_p1(8 - 1 downto 0);
        else 
            w_address1 <= "XXXXXXXX";
        end if; 
    end process;


    w_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))))) then 
            w_ce0 <= ap_const_logic_1;
        else 
            w_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w_ce1_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))))) then 
            w_ce1 <= ap_const_logic_1;
        else 
            w_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    w_d0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, tmp_24_reg_1298, tmp_33_reg_1318, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            w_d0 <= tmp_33_reg_1318;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            w_d0 <= tmp_24_reg_1298;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            w_d0 <= ap_const_lv8_E3;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            w_d0 <= ap_const_lv8_11;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            w_d0 <= ap_const_lv8_D2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            w_d0 <= ap_const_lv8_E7;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            w_d0 <= ap_const_lv8_12;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            w_d0 <= ap_const_lv8_6B;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            w_d0 <= ap_const_lv8_71;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            w_d0 <= ap_const_lv8_63;
        else 
            w_d0 <= "XXXXXXXX";
        end if; 
    end process;


    w_d1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, tmp_28_reg_1303, ap_sig_cseq_ST_st20_fsm_19, tmp_38_reg_1323, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            w_d1 <= tmp_38_reg_1323;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            w_d1 <= tmp_28_reg_1303;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            w_d1 <= ap_const_lv8_AB;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            w_d1 <= ap_const_lv8_15;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            w_d1 <= ap_const_lv8_FF;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            w_d1 <= ap_const_lv8_67;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            w_d1 <= ap_const_lv8_85;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            w_d1 <= ap_const_lv8_B2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            w_d1 <= ap_const_lv8_E3;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            w_d1 <= ap_const_lv8_D3;
        else 
            w_d1 <= "XXXXXXXX";
        end if; 
    end process;


    w_we0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))))) then 
            w_we0 <= ap_const_logic_1;
        else 
            w_we0 <= ap_const_logic_0;
        end if; 
    end process;


    w_we1_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))))) then 
            w_we1 <= ap_const_logic_1;
        else 
            w_we1 <= ap_const_logic_0;
        end if; 
    end process;

    write_flag_1_i_fu_720_p2 <= (sel_tmp2_i_fu_706_p2 or write_flag_i_reg_452);
end behav;

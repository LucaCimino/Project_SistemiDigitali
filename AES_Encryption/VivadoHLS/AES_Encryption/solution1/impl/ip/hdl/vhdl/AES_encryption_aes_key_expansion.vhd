-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AES_encryption_aes_key_expansion is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    w_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w_ce0 : OUT STD_LOGIC;
    w_we0 : OUT STD_LOGIC;
    w_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    w_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w_ce1 : OUT STD_LOGIC;
    w_we1 : OUT STD_LOGIC;
    w_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of AES_encryption_aes_key_expansion is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv8_63 : STD_LOGIC_VECTOR (7 downto 0) := "01100011";
    constant ap_const_lv8_71 : STD_LOGIC_VECTOR (7 downto 0) := "01110001";
    constant ap_const_lv8_6B : STD_LOGIC_VECTOR (7 downto 0) := "01101011";
    constant ap_const_lv8_12 : STD_LOGIC_VECTOR (7 downto 0) := "00010010";
    constant ap_const_lv8_E7 : STD_LOGIC_VECTOR (7 downto 0) := "11100111";
    constant ap_const_lv8_D2 : STD_LOGIC_VECTOR (7 downto 0) := "11010010";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv8_E3 : STD_LOGIC_VECTOR (7 downto 0) := "11100011";
    constant ap_const_lv8_D3 : STD_LOGIC_VECTOR (7 downto 0) := "11010011";
    constant ap_const_lv8_B2 : STD_LOGIC_VECTOR (7 downto 0) := "10110010";
    constant ap_const_lv8_85 : STD_LOGIC_VECTOR (7 downto 0) := "10000101";
    constant ap_const_lv8_67 : STD_LOGIC_VECTOR (7 downto 0) := "01100111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_15 : STD_LOGIC_VECTOR (7 downto 0) := "00010101";
    constant ap_const_lv8_AB : STD_LOGIC_VECTOR (7 downto 0) := "10101011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv8_FC : STD_LOGIC_VECTOR (7 downto 0) := "11111100";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_lv8_FE : STD_LOGIC_VECTOR (7 downto 0) := "11111110";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv8_1B : STD_LOGIC_VECTOR (7 downto 0) := "00011011";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv8_F1 : STD_LOGIC_VECTOR (7 downto 0) := "11110001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_F2 : STD_LOGIC_VECTOR (7 downto 0) := "11110010";
    constant ap_const_lv8_F3 : STD_LOGIC_VECTOR (7 downto 0) := "11110011";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_39 : BOOLEAN;
    signal s_box_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal s_box_ce0 : STD_LOGIC;
    signal s_box_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_ce0 : STD_LOGIC;
    signal R_we0 : STD_LOGIC;
    signal R_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_ce1 : STD_LOGIC;
    signal R_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_679_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_1204 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_84 : BOOLEAN;
    signal exitcond_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_1228 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_100 : BOOLEAN;
    signal tmp_1_reg_1235 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_113 : BOOLEAN;
    signal tmp_3_1_reg_1257 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1263 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_745_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_125 : BOOLEAN;
    signal write_flag_1_i_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_3_read_assign_3_fu_784_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_5_fu_800_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_7_fu_816_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_0_1_fu_824_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_6_fu_837_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_6_reg_1303 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_149 : BOOLEAN;
    signal tmp_37_fu_843_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_37_reg_1308 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_i_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_assign_cast1_fu_876_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1328 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_18_fu_931_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_175 : BOOLEAN;
    signal tmp_3_4_fu_947_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_7_fu_963_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_8_fu_971_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_assign_1_fu_979_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_assign_1_reg_1352 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_190 : BOOLEAN;
    signal i_7_fu_1007_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_201 : BOOLEAN;
    signal p_0_i_21_fu_1025_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_i1_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_assign_5_fu_1051_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_assign_fu_1069_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_3_fu_1073_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_3_reg_1383 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_219 : BOOLEAN;
    signal tmp_2_3_fu_1079_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_3_reg_1388 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_0_fu_1085_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_230 : BOOLEAN;
    signal tmp_3_9_fu_1091_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_1117_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_1413 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_fu_1123_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_reg_1418 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_250 : BOOLEAN;
    signal tmp_18_fu_1129_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_reg_1423 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_1169_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_reg_1438 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_265 : BOOLEAN;
    signal tmp_28_fu_1175_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_reg_1443 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_reg_452 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st22_fsm_21 : STD_LOGIC;
    signal ap_sig_276 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_284 : BOOLEAN;
    signal write_flag_i_reg_464 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_3_read_assign_2_reg_475 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_1_reg_486 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_1_reg_496 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i2_reg_506 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_3_read_assign_reg_517 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_2_read_assign_reg_527 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_3_reg_538 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_6_reg_549 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i_reg_559 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_assign_reg_570 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_in_i_reg_583 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i1_reg_592 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp1_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_reg_603 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_19_reg_616 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_0_i_reg_627 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_s_reg_637 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_0_s_reg_646 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_s_reg_655 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_3_2_reg_664 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_357 : BOOLEAN;
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_368 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_379 : BOOLEAN;
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_390 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_401 : BOOLEAN;
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_412 : BOOLEAN;
    signal tmp_5_fu_693_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_704_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_i_fu_861_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_1102_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_1112_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_1140_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_1150_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_1155_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_1164_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_1186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_1196_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_490 : BOOLEAN;
    signal tmp_4_fu_687_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_698_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_709_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_15_fu_719_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_fu_729_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp_i_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_3_read_assign_fu_757_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_1_fu_770_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_4_fu_792_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_6_fu_808_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_847_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_847_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_assign_fu_866_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_38_fu_886_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp2_fu_912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_923_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel5_fu_939_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_5_fu_955_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_985_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_40_fu_1013_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_fu_1017_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_1031_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_42_fu_1037_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_assign_4_fu_1045_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_fu_1059_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_12_fu_1097_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1107_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_1135_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_1145_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_1159_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_1181_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_1191_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (21 downto 0);

    component AES_encryption_mux_4to1_sel2_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component AES_encryption_aes_key_expansion_s_box IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component AES_encryption_aes_key_expansion_R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    s_box_U : component AES_encryption_aes_key_expansion_s_box
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s_box_address0,
        ce0 => s_box_ce0,
        q0 => s_box_q0);

    R_U : component AES_encryption_aes_key_expansion_R
    generic map (
        DataWidth => 8,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => R_address0,
        ce0 => R_ce0,
        we0 => R_we0,
        d0 => R_d0,
        q0 => R_q0,
        address1 => R_address1,
        ce1 => R_ce1,
        q1 => R_q1);

    AES_encryption_mux_4to1_sel2_8_1_U0 : component AES_encryption_mux_4to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => tmp_3_6_reg_549,
        din2 => tmp_3_3_reg_538,
        din3 => a_2_read_assign_reg_527,
        din4 => a_3_read_assign_reg_517,
        din5 => tmp_fu_847_p5,
        dout => tmp_fu_847_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    a_2_read_assign_reg_527_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                a_2_read_assign_reg_527 <= tmp_3_4_fu_947_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = exitcond_i2_fu_739_p2)))) then 
                a_2_read_assign_reg_527 <= tmp_2_1_reg_486;
            end if; 
        end if;
    end process;

    a_3_read_assign_reg_517_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                a_3_read_assign_reg_517 <= tmp_3_18_fu_931_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = exitcond_i2_fu_739_p2)))) then 
                a_3_read_assign_reg_517 <= tmp_44_reg_1228;
            end if; 
        end if;
    end process;

    a_assign_reg_570_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and not((ap_const_lv1_0 = exitcond_i1_fu_1001_p2)))) then 
                a_assign_reg_570 <= p_i_reg_603;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond_i_fu_831_p2)) and (ap_const_lv1_0 = tmp_11_fu_880_p2) and (ap_const_lv1_0 = icmp_fu_896_p2))) then 
                a_assign_reg_570 <= ap_const_lv8_2;
            end if; 
        end if;
    end process;

    i_1_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                i_1_reg_452 <= ap_const_lv6_4;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
                i_1_reg_452 <= i_reg_1413;
            end if; 
        end if;
    end process;

    i_i1_reg_592_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = icmp_reg_1328) and (ap_const_lv1_0 = icmp1_fu_995_p2))) then 
                i_i1_reg_592 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and (ap_const_lv1_0 = exitcond_i1_fu_1001_p2))) then 
                i_i1_reg_592 <= i_7_fu_1007_p2;
            end if; 
        end if;
    end process;

    i_i2_reg_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = tmp_10_fu_733_p2)))) then 
                i_i2_reg_506 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i2_fu_739_p2))) then 
                i_i2_reg_506 <= i_5_fu_745_p2;
            end if; 
        end if;
    end process;

    i_i_reg_559_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                i_i_reg_559 <= i_6_reg_1303;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = exitcond_i2_fu_739_p2)))) then 
                i_i_reg_559 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_0_i_reg_627_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = icmp_reg_1328) and (ap_const_lv1_0 = icmp1_fu_995_p2))) then 
                p_0_i_reg_627 <= a_assign_reg_570;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and (ap_const_lv1_0 = exitcond_i1_fu_1001_p2))) then 
                p_0_i_reg_627 <= a_assign_5_fu_1051_p3;
            end if; 
        end if;
    end process;

    p_0_in_i_reg_583_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and not((ap_const_lv1_0 = exitcond_i1_fu_1001_p2)))) then 
                p_0_in_i_reg_583 <= i_assign_1_reg_1352;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond_i_fu_831_p2)) and (ap_const_lv1_0 = tmp_11_fu_880_p2) and (ap_const_lv1_0 = icmp_fu_896_p2))) then 
                p_0_in_i_reg_583 <= i_assign_cast1_fu_876_p1;
            end if; 
        end if;
    end process;

    p_i_19_reg_616_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = icmp_reg_1328) and (ap_const_lv1_0 = icmp1_fu_995_p2))) then 
                p_i_19_reg_616(0) <= '0';
                p_i_19_reg_616(1) <= '1';
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and (ap_const_lv1_0 = exitcond_i1_fu_1001_p2))) then 
                                p_i_19_reg_616(1 downto 0) <= b_assign_fu_1069_p1(1 downto 0);
            end if; 
        end if;
    end process;

    p_i_reg_603_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = icmp_reg_1328) and (ap_const_lv1_0 = icmp1_fu_995_p2))) then 
                p_i_reg_603 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and (ap_const_lv1_0 = exitcond_i1_fu_1001_p2))) then 
                p_i_reg_603 <= p_0_i_21_fu_1025_p2;
            end if; 
        end if;
    end process;

    tmp_0_s_reg_646_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = tmp_10_fu_733_p2))) then 
                tmp_0_s_reg_646 <= tmp_44_reg_1228;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and not((ap_const_lv1_0 = tmp_10_reg_1263)))) then 
                tmp_0_s_reg_646 <= tmp_0_fu_1085_p2;
            end if; 
        end if;
    end process;

    tmp_1_1_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = tmp_10_fu_733_p2)))) then 
                tmp_1_1_reg_496 <= tmp_1_reg_1235;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i2_fu_739_p2))) then 
                tmp_1_1_reg_496 <= w_3_read_assign_7_fu_816_p3;
            end if; 
        end if;
    end process;

    tmp_1_s_reg_637_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = tmp_10_fu_733_p2))) then 
                tmp_1_s_reg_637 <= tmp_1_reg_1235;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and not((ap_const_lv1_0 = tmp_10_reg_1263)))) then 
                tmp_1_s_reg_637 <= tmp_1_3_reg_1383;
            end if; 
        end if;
    end process;

    tmp_2_1_reg_486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = tmp_10_fu_733_p2)))) then 
                tmp_2_1_reg_486 <= w_q0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i2_fu_739_p2))) then 
                tmp_2_1_reg_486 <= w_3_read_assign_5_fu_800_p3;
            end if; 
        end if;
    end process;

    tmp_2_3_2_reg_664_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = tmp_10_fu_733_p2))) then 
                tmp_2_3_2_reg_664 <= w_q0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and not((ap_const_lv1_0 = tmp_10_reg_1263)))) then 
                tmp_2_3_2_reg_664 <= tmp_2_3_reg_1388;
            end if; 
        end if;
    end process;

    tmp_3_3_reg_538_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                tmp_3_3_reg_538 <= tmp_3_7_fu_963_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = exitcond_i2_fu_739_p2)))) then 
                tmp_3_3_reg_538 <= tmp_1_1_reg_496;
            end if; 
        end if;
    end process;

    tmp_3_6_reg_549_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                tmp_3_6_reg_549 <= tmp_3_8_fu_971_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = exitcond_i2_fu_739_p2)))) then 
                tmp_3_6_reg_549 <= tmp_0_1_fu_824_p3;
            end if; 
        end if;
    end process;

    tmp_3_s_reg_655_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = tmp_10_fu_733_p2))) then 
                tmp_3_s_reg_655 <= w_q1;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and not((ap_const_lv1_0 = tmp_10_reg_1263)))) then 
                tmp_3_s_reg_655 <= tmp_3_9_fu_1091_p2;
            end if; 
        end if;
    end process;

    write_flag_i_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = tmp_10_fu_733_p2)))) then 
                write_flag_i_reg_464 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i2_fu_739_p2))) then 
                write_flag_i_reg_464 <= write_flag_1_i_fu_778_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                i_6_reg_1303 <= i_6_fu_837_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = icmp_reg_1328))) then
                i_assign_1_reg_1352 <= i_assign_1_fu_979_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then
                i_reg_1413 <= i_fu_1117_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond_i_fu_831_p2)) and (ap_const_lv1_0 = tmp_11_fu_880_p2))) then
                icmp_reg_1328 <= icmp_fu_896_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                tmp_10_reg_1263 <= tmp_10_fu_733_p2;
                tmp_3_1_reg_1257 <= w_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then
                tmp_14_reg_1418 <= tmp_14_fu_1123_p2;
                tmp_18_reg_1423 <= tmp_18_fu_1129_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then
                tmp_1_3_reg_1383 <= tmp_1_3_fu_1073_p2;
                tmp_2_3_reg_1388 <= tmp_2_3_fu_1079_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                tmp_1_reg_1235 <= w_q1;
                tmp_44_reg_1228 <= w_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then
                tmp_23_reg_1438 <= tmp_23_fu_1169_p2;
                tmp_28_reg_1443 <= tmp_28_fu_1175_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_lv1_0 = exitcond_i_fu_831_p2))) then
                tmp_37_reg_1308 <= tmp_37_fu_843_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and (exitcond_fu_673_p2 = ap_const_lv1_0))) then
                    tmp_s_reg_1204(7 downto 2) <= tmp_s_fu_679_p3(7 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i2_fu_739_p2))) then
                w_3_read_assign_2_reg_475 <= w_3_read_assign_3_fu_784_p3;
            end if;
        end if;
    end process;
    tmp_s_reg_1204(1 downto 0) <= "00";
    p_i_19_reg_616(4 downto 2) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_fu_673_p2, tmp_10_fu_733_p2, exitcond_i2_fu_739_p2, exitcond_i_fu_831_p2, icmp_reg_1328, tmp_11_fu_880_p2, exitcond_i1_fu_1001_p2, icmp1_fu_995_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                if (not((exitcond_fu_673_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                if ((ap_const_lv1_0 = tmp_10_fu_733_p2)) then
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st12_fsm_11 => 
                if (not((ap_const_lv1_0 = exitcond_i2_fu_739_p2))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st13_fsm_12 => 
                if ((not((ap_const_lv1_0 = exitcond_i_fu_831_p2)) and not((ap_const_lv1_0 = tmp_11_fu_880_p2)))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                elsif ((not((ap_const_lv1_0 = exitcond_i_fu_831_p2)) and (ap_const_lv1_0 = tmp_11_fu_880_p2))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                end if;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st15_fsm_14 => 
                if ((not((ap_const_lv1_0 = icmp1_fu_995_p2)) or not((ap_const_lv1_0 = icmp_reg_1328)))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                else
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                end if;
            when ap_ST_st16_fsm_15 => 
                if ((ap_const_lv1_0 = exitcond_i1_fu_1001_p2)) then
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                end if;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    R_address0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            R_address0 <= ap_const_lv2_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            R_address0 <= ap_const_lv2_3;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            R_address0 <= ap_const_lv2_1;
        else 
            R_address0 <= "XX";
        end if; 
    end process;


    R_address1_assign_proc : process(ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            R_address1 <= ap_const_lv2_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            R_address1 <= ap_const_lv2_2;
        else 
            R_address1 <= "XX";
        end if; 
    end process;


    R_ce0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            R_ce0 <= ap_const_logic_1;
        else 
            R_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    R_ce1_assign_proc : process(ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            R_ce1 <= ap_const_logic_1;
        else 
            R_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    R_d0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st15_fsm_14, a_assign_reg_570)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            R_d0 <= a_assign_reg_570;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            R_d0 <= ap_const_lv8_1;
        else 
            R_d0 <= "XXXXXXXX";
        end if; 
    end process;


    R_we0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, exitcond_i_fu_831_p2, icmp_reg_1328, tmp_11_fu_880_p2, ap_sig_cseq_ST_st15_fsm_14, icmp1_fu_995_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond_i_fu_831_p2)) and not((ap_const_lv1_0 = tmp_11_fu_880_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = icmp_reg_1328) and not((ap_const_lv1_0 = icmp1_fu_995_p2))))) then 
            R_we0 <= ap_const_logic_1;
        else 
            R_we0 <= ap_const_logic_0;
        end if; 
    end process;

    a_assign_4_fu_1045_p2 <= (tmp_41_fu_1031_p2 xor ap_const_lv8_1B);
    a_assign_5_fu_1051_p3 <= 
        a_assign_4_fu_1045_p2 when (tmp_42_fu_1037_p3(0) = '1') else 
        tmp_41_fu_1031_p2;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st9_fsm_8, exitcond_fu_673_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((exitcond_fu_673_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, exitcond_fu_673_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((exitcond_fu_673_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_100_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_100 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_113_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_113 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_125_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_125 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_149_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_149 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_175_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_175 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_190_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_190 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_201_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_201 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_219_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_219 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_230_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_230 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_250_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_250 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_265_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_265 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_276_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_276 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    ap_sig_284_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_284 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_357_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_357 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_368_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_368 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_379_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_379 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_39_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_39 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_390_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_390 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_401_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_401 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_412_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_412 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_490_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_490 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_84_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_84 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_100)
    begin
        if (ap_sig_100) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_113)
    begin
        if (ap_sig_113) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_125)
    begin
        if (ap_sig_125) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_149)
    begin
        if (ap_sig_149) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_175)
    begin
        if (ap_sig_175) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_190)
    begin
        if (ap_sig_190) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_201)
    begin
        if (ap_sig_201) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_490)
    begin
        if (ap_sig_490) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_219)
    begin
        if (ap_sig_219) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_230)
    begin
        if (ap_sig_230) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_39)
    begin
        if (ap_sig_39) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_250)
    begin
        if (ap_sig_250) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_265)
    begin
        if (ap_sig_265) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st22_fsm_21_assign_proc : process(ap_sig_276)
    begin
        if (ap_sig_276) then 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_357)
    begin
        if (ap_sig_357) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_368)
    begin
        if (ap_sig_368) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_379)
    begin
        if (ap_sig_379) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_390)
    begin
        if (ap_sig_390) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_401)
    begin
        if (ap_sig_401) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_412)
    begin
        if (ap_sig_412) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_284)
    begin
        if (ap_sig_284) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_84)
    begin
        if (ap_sig_84) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    b_assign_fu_1069_p1 <= std_logic_vector(resize(unsigned(tmp_43_fu_1059_p4),5));
    exitcond_fu_673_p2 <= "1" when (i_1_reg_452 = ap_const_lv6_2C) else "0";
    exitcond_i1_fu_1001_p2 <= "1" when (i_i1_reg_592 = ap_const_lv4_8) else "0";
    exitcond_i2_fu_739_p2 <= "1" when (i_i2_reg_506 = ap_const_lv2_3) else "0";
    exitcond_i_fu_831_p2 <= "1" when (i_i_reg_559 = ap_const_lv3_4) else "0";
    i_5_fu_745_p2 <= std_logic_vector(unsigned(i_i2_reg_506) + unsigned(ap_const_lv2_1));
    i_6_fu_837_p2 <= std_logic_vector(unsigned(i_i_reg_559) + unsigned(ap_const_lv3_1));
    i_7_fu_1007_p2 <= std_logic_vector(unsigned(i_i1_reg_592) + unsigned(ap_const_lv4_1));
    i_assign_1_fu_979_p2 <= std_logic_vector(unsigned(p_0_in_i_reg_583) + unsigned(ap_const_lv8_FF));
    i_assign_cast1_fu_876_p1 <= std_logic_vector(resize(unsigned(i_assign_fu_866_p4),8));
    i_assign_fu_866_p4 <= i_1_reg_452(5 downto 2);
    i_fu_1117_p2 <= std_logic_vector(unsigned(i_1_reg_452) + unsigned(ap_const_lv6_1));
    icmp1_fu_995_p2 <= "1" when (tmp_39_fu_985_p4 = ap_const_lv7_0) else "0";
    icmp_fu_896_p2 <= "1" when (tmp_38_fu_886_p4 = ap_const_lv3_0) else "0";
    newSel5_fu_939_p3 <= 
        s_box_q0 when (sel_tmp_fu_902_p2(0) = '1') else 
        a_2_read_assign_reg_527;
    newSel_fu_923_p3 <= 
        a_3_read_assign_reg_517 when (sel_tmp_fu_902_p2(0) = '1') else 
        s_box_q0;
    or_cond_fu_917_p2 <= (sel_tmp2_fu_912_p2 or sel_tmp8_fu_907_p2);
    p_0_i_21_fu_1025_p2 <= (tmp_18_i_fu_1017_p3 xor p_i_reg_603);
    s_box_address0 <= tmp_1_i_fu_861_p1(8 - 1 downto 0);

    s_box_ce0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            s_box_ce0 <= ap_const_logic_1;
        else 
            s_box_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sel_tmp2_fu_912_p2 <= "1" when (tmp_37_reg_1308 = ap_const_lv2_0) else "0";
    sel_tmp2_i_fu_764_p2 <= "1" when (i_i2_reg_506 = ap_const_lv2_0) else "0";
    sel_tmp8_fu_907_p2 <= "1" when (tmp_37_reg_1308 = ap_const_lv2_1) else "0";
    sel_tmp_fu_902_p2 <= "1" when (tmp_37_reg_1308 = ap_const_lv2_2) else "0";
    sel_tmp_i_fu_751_p2 <= "1" when (i_i2_reg_506 = ap_const_lv2_1) else "0";
    tmp_0_1_fu_824_p3 <= 
        w_3_read_assign_2_reg_475 when (write_flag_i_reg_464(0) = '1') else 
        tmp_44_reg_1228;
    tmp_0_fu_1085_p2 <= (R_q1 xor tmp_3_6_reg_549);
    tmp_10_fu_733_p2 <= "1" when (tmp_36_fu_729_p1 = ap_const_lv2_0) else "0";
    tmp_11_fu_880_p2 <= "1" when (i_assign_fu_866_p4 = ap_const_lv4_1) else "0";
    tmp_12_fu_1097_p2 <= std_logic_vector(unsigned(tmp_s_reg_1204) + unsigned(ap_const_lv8_F0));
    tmp_13_fu_1102_p1 <= std_logic_vector(resize(unsigned(tmp_12_fu_1097_p2),64));
    tmp_14_fu_1123_p2 <= (w_q0 xor tmp_0_s_reg_646);
    tmp_15_fu_1155_p1 <= std_logic_vector(resize(unsigned(tmp_s_reg_1204),64));
    tmp_16_fu_1107_p2 <= std_logic_vector(unsigned(tmp_s_reg_1204) + unsigned(ap_const_lv8_F1));
    tmp_17_fu_1112_p1 <= std_logic_vector(resize(unsigned(tmp_16_fu_1107_p2),64));
    tmp_18_fu_1129_p2 <= (w_q1 xor tmp_1_s_reg_637);
    tmp_18_i_fu_1017_p3 <= 
        p_0_i_reg_627 when (tmp_40_fu_1013_p1(0) = '1') else 
        ap_const_lv8_0;
    tmp_19_fu_1159_p2 <= (tmp_s_reg_1204 or ap_const_lv8_1);
    tmp_1_3_fu_1073_p2 <= (R_q0 xor tmp_3_3_reg_538);
    tmp_1_i_fu_861_p1 <= std_logic_vector(resize(unsigned(tmp_fu_847_p6),64));
    tmp_20_fu_1164_p1 <= std_logic_vector(resize(unsigned(tmp_19_fu_1159_p2),64));
    tmp_21_fu_1135_p2 <= std_logic_vector(unsigned(tmp_s_reg_1204) + unsigned(ap_const_lv8_F2));
    tmp_22_fu_1140_p1 <= std_logic_vector(resize(unsigned(tmp_21_fu_1135_p2),64));
    tmp_23_fu_1169_p2 <= (w_q0 xor tmp_2_3_2_reg_664);
    tmp_24_fu_1181_p2 <= (tmp_s_reg_1204 or ap_const_lv8_2);
    tmp_25_fu_1186_p1 <= std_logic_vector(resize(unsigned(tmp_24_fu_1181_p2),64));
    tmp_26_fu_1145_p2 <= std_logic_vector(unsigned(tmp_s_reg_1204) + unsigned(ap_const_lv8_F3));
    tmp_27_fu_1150_p1 <= std_logic_vector(resize(unsigned(tmp_26_fu_1145_p2),64));
    tmp_28_fu_1175_p2 <= (w_q1 xor tmp_3_s_reg_655);
    tmp_29_fu_1191_p2 <= (tmp_s_reg_1204 or ap_const_lv8_3);
    tmp_2_15_fu_719_p2 <= std_logic_vector(signed(ap_const_lv8_FF) + signed(tmp_s_reg_1204));
    tmp_2_3_fu_1079_p2 <= (R_q1 xor a_2_read_assign_reg_527);
    tmp_30_fu_1196_p1 <= std_logic_vector(resize(unsigned(tmp_29_fu_1191_p2),64));
    tmp_36_fu_729_p1 <= i_1_reg_452(2 - 1 downto 0);
    tmp_37_fu_843_p1 <= i_i_reg_559(2 - 1 downto 0);
    tmp_38_fu_886_p4 <= i_1_reg_452(5 downto 3);
    tmp_39_fu_985_p4 <= i_assign_1_fu_979_p2(7 downto 1);
    tmp_3_18_fu_931_p3 <= 
        a_3_read_assign_reg_517 when (or_cond_fu_917_p2(0) = '1') else 
        newSel_fu_923_p3;
    tmp_3_4_fu_947_p3 <= 
        a_2_read_assign_reg_527 when (or_cond_fu_917_p2(0) = '1') else 
        newSel5_fu_939_p3;
    tmp_3_5_fu_955_p3 <= 
        s_box_q0 when (sel_tmp8_fu_907_p2(0) = '1') else 
        tmp_3_3_reg_538;
    tmp_3_7_fu_963_p3 <= 
        tmp_3_3_reg_538 when (sel_tmp2_fu_912_p2(0) = '1') else 
        tmp_3_5_fu_955_p3;
    tmp_3_8_fu_971_p3 <= 
        s_box_q0 when (sel_tmp2_fu_912_p2(0) = '1') else 
        tmp_3_6_reg_549;
    tmp_3_9_fu_1091_p2 <= (R_q0 xor a_3_read_assign_reg_517);
    tmp_3_fu_724_p1 <= std_logic_vector(resize(unsigned(tmp_2_15_fu_719_p2),64));
    tmp_40_fu_1013_p1 <= p_i_19_reg_616(1 - 1 downto 0);
    tmp_41_fu_1031_p2 <= std_logic_vector(shift_left(unsigned(p_0_i_reg_627),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_42_fu_1037_p3 <= p_0_i_reg_627(7 downto 7);
    tmp_43_fu_1059_p4 <= p_i_19_reg_616(4 downto 1);
    tmp_4_fu_687_p2 <= std_logic_vector(signed(ap_const_lv8_FC) + signed(tmp_s_fu_679_p3));
    tmp_5_fu_693_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_687_p2),64));
    tmp_6_fu_698_p2 <= std_logic_vector(signed(ap_const_lv8_FD) + signed(tmp_s_fu_679_p3));
    tmp_7_fu_704_p1 <= std_logic_vector(resize(unsigned(tmp_6_fu_698_p2),64));
    tmp_8_fu_709_p2 <= std_logic_vector(signed(ap_const_lv8_FE) + signed(tmp_s_reg_1204));
    tmp_9_fu_714_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_709_p2),64));
    tmp_fu_847_p5 <= i_i_reg_559(2 - 1 downto 0);
    tmp_s_fu_679_p3 <= (i_1_reg_452 & ap_const_lv2_0);
    w_3_read_assign_1_fu_770_p3 <= 
        tmp_1_1_reg_496 when (sel_tmp2_i_fu_764_p2(0) = '1') else 
        w_3_read_assign_fu_757_p3;
    w_3_read_assign_3_fu_784_p3 <= 
        tmp_1_1_reg_496 when (sel_tmp2_i_fu_764_p2(0) = '1') else 
        w_3_read_assign_2_reg_475;
    w_3_read_assign_4_fu_792_p3 <= 
        tmp_2_1_reg_486 when (sel_tmp_i_fu_751_p2(0) = '1') else 
        w_3_read_assign_1_fu_770_p3;
    w_3_read_assign_5_fu_800_p3 <= 
        tmp_2_1_reg_486 when (sel_tmp2_i_fu_764_p2(0) = '1') else 
        w_3_read_assign_4_fu_792_p3;
    w_3_read_assign_6_fu_808_p3 <= 
        w_3_read_assign_1_fu_770_p3 when (sel_tmp_i_fu_751_p2(0) = '1') else 
        tmp_1_1_reg_496;
    w_3_read_assign_7_fu_816_p3 <= 
        tmp_1_1_reg_496 when (sel_tmp2_i_fu_764_p2(0) = '1') else 
        w_3_read_assign_6_fu_808_p3;
    w_3_read_assign_fu_757_p3 <= 
        tmp_2_1_reg_486 when (sel_tmp_i_fu_751_p2(0) = '1') else 
        tmp_3_1_reg_1257;

    w_address0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st22_fsm_21, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, tmp_5_fu_693_p1, tmp_9_fu_714_p1, tmp_13_fu_1102_p1, tmp_22_fu_1140_p1, tmp_15_fu_1155_p1, tmp_25_fu_1186_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
            w_address0 <= tmp_25_fu_1186_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            w_address0 <= tmp_15_fu_1155_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            w_address0 <= ap_const_lv64_E(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            w_address0 <= ap_const_lv64_C(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            w_address0 <= ap_const_lv64_A(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            w_address0 <= ap_const_lv64_8(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            w_address0 <= ap_const_lv64_6(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            w_address0 <= ap_const_lv64_4(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            w_address0 <= ap_const_lv64_2(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            w_address0 <= ap_const_lv64_0(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            w_address0 <= tmp_22_fu_1140_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            w_address0 <= tmp_13_fu_1102_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            w_address0 <= tmp_9_fu_714_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            w_address0 <= tmp_5_fu_693_p1(8 - 1 downto 0);
        else 
            w_address0 <= "XXXXXXXX";
        end if; 
    end process;


    w_address1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st22_fsm_21, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, tmp_7_fu_704_p1, tmp_3_fu_724_p1, tmp_17_fu_1112_p1, tmp_27_fu_1150_p1, tmp_20_fu_1164_p1, tmp_30_fu_1196_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
            w_address1 <= tmp_30_fu_1196_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            w_address1 <= tmp_20_fu_1164_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            w_address1 <= ap_const_lv64_F(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            w_address1 <= ap_const_lv64_D(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            w_address1 <= ap_const_lv64_B(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            w_address1 <= ap_const_lv64_9(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            w_address1 <= ap_const_lv64_7(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            w_address1 <= ap_const_lv64_5(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            w_address1 <= ap_const_lv64_3(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            w_address1 <= ap_const_lv64_1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            w_address1 <= tmp_27_fu_1150_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            w_address1 <= tmp_17_fu_1112_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            w_address1 <= tmp_3_fu_724_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            w_address1 <= tmp_7_fu_704_p1(8 - 1 downto 0);
        else 
            w_address1 <= "XXXXXXXX";
        end if; 
    end process;


    w_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st22_fsm_21, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))))) then 
            w_ce0 <= ap_const_logic_1;
        else 
            w_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w_ce1_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st22_fsm_21, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))))) then 
            w_ce1 <= ap_const_logic_1;
        else 
            w_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    w_d0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, tmp_14_reg_1418, tmp_23_reg_1438, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st22_fsm_21, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
            w_d0 <= tmp_23_reg_1438;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            w_d0 <= tmp_14_reg_1418;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            w_d0 <= ap_const_lv8_E3;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            w_d0 <= ap_const_lv8_11;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            w_d0 <= ap_const_lv8_D2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            w_d0 <= ap_const_lv8_E7;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            w_d0 <= ap_const_lv8_12;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            w_d0 <= ap_const_lv8_6B;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            w_d0 <= ap_const_lv8_71;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            w_d0 <= ap_const_lv8_63;
        else 
            w_d0 <= "XXXXXXXX";
        end if; 
    end process;


    w_d1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, tmp_18_reg_1423, ap_sig_cseq_ST_st21_fsm_20, tmp_28_reg_1443, ap_sig_cseq_ST_st22_fsm_21, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
            w_d1 <= tmp_28_reg_1443;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            w_d1 <= tmp_18_reg_1423;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            w_d1 <= ap_const_lv8_AB;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            w_d1 <= ap_const_lv8_15;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            w_d1 <= ap_const_lv8_FF;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            w_d1 <= ap_const_lv8_67;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            w_d1 <= ap_const_lv8_85;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            w_d1 <= ap_const_lv8_B2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            w_d1 <= ap_const_lv8_E3;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            w_d1 <= ap_const_lv8_D3;
        else 
            w_d1 <= "XXXXXXXX";
        end if; 
    end process;


    w_we0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st22_fsm_21, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))))) then 
            w_we0 <= ap_const_logic_1;
        else 
            w_we0 <= ap_const_logic_0;
        end if; 
    end process;


    w_we1_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st22_fsm_21, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))))) then 
            w_we1 <= ap_const_logic_1;
        else 
            w_we1 <= ap_const_logic_0;
        end if; 
    end process;

    write_flag_1_i_fu_778_p2 <= (sel_tmp2_i_fu_764_p2 or write_flag_i_reg_464);
end behav;

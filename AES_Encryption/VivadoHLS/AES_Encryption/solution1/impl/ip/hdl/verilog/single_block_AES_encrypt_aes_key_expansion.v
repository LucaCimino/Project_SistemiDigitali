// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module single_block_AES_encrypt_aes_key_expansion (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        w_address0,
        w_ce0,
        w_we0,
        w_d0,
        w_q0,
        w_address1,
        w_ce1,
        w_we1,
        w_d1,
        w_q1
);

parameter    ap_ST_st1_fsm_0 = 21'b1;
parameter    ap_ST_st2_fsm_1 = 21'b10;
parameter    ap_ST_st3_fsm_2 = 21'b100;
parameter    ap_ST_st4_fsm_3 = 21'b1000;
parameter    ap_ST_st5_fsm_4 = 21'b10000;
parameter    ap_ST_st6_fsm_5 = 21'b100000;
parameter    ap_ST_st7_fsm_6 = 21'b1000000;
parameter    ap_ST_st8_fsm_7 = 21'b10000000;
parameter    ap_ST_st9_fsm_8 = 21'b100000000;
parameter    ap_ST_st10_fsm_9 = 21'b1000000000;
parameter    ap_ST_st11_fsm_10 = 21'b10000000000;
parameter    ap_ST_st12_fsm_11 = 21'b100000000000;
parameter    ap_ST_st13_fsm_12 = 21'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 21'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 21'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 21'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 21'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 21'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 21'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 21'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 21'b100000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv6_4 = 6'b100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv8_2 = 8'b10;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv64_9 = 64'b1001;
parameter    ap_const_lv64_A = 64'b1010;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv64_B = 64'b1011;
parameter    ap_const_lv64_C = 64'b1100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv64_D = 64'b1101;
parameter    ap_const_lv64_E = 64'b1110;
parameter    ap_const_lv64_F = 64'b1111;
parameter    ap_const_lv8_63 = 8'b1100011;
parameter    ap_const_lv8_71 = 8'b1110001;
parameter    ap_const_lv8_6B = 8'b1101011;
parameter    ap_const_lv8_12 = 8'b10010;
parameter    ap_const_lv8_E7 = 8'b11100111;
parameter    ap_const_lv8_D2 = 8'b11010010;
parameter    ap_const_lv8_11 = 8'b10001;
parameter    ap_const_lv8_E3 = 8'b11100011;
parameter    ap_const_lv8_D3 = 8'b11010011;
parameter    ap_const_lv8_B2 = 8'b10110010;
parameter    ap_const_lv8_85 = 8'b10000101;
parameter    ap_const_lv8_67 = 8'b1100111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv8_15 = 8'b10101;
parameter    ap_const_lv8_AB = 8'b10101011;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv6_2C = 6'b101100;
parameter    ap_const_lv8_FC = 8'b11111100;
parameter    ap_const_lv8_FD = 8'b11111101;
parameter    ap_const_lv8_FE = 8'b11111110;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv8_1B = 8'b11011;
parameter    ap_const_lv8_F0 = 8'b11110000;
parameter    ap_const_lv8_F1 = 8'b11110001;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv8_F2 = 8'b11110010;
parameter    ap_const_lv8_F3 = 8'b11110011;
parameter    ap_const_lv8_3 = 8'b11;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] w_address0;
output   w_ce0;
output   w_we0;
output  [7:0] w_d0;
input  [7:0] w_q0;
output  [7:0] w_address1;
output   w_ce1;
output   w_we1;
output  [7:0] w_d1;
input  [7:0] w_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] w_address0;
reg w_ce0;
reg w_we0;
reg[7:0] w_d0;
reg[7:0] w_address1;
reg w_ce1;
reg w_we1;
reg[7:0] w_d1;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_38;
wire   [7:0] s_box_address0;
reg    s_box_ce0;
wire   [7:0] s_box_q0;
reg   [1:0] R_address0;
reg    R_ce0;
reg    R_we0;
reg   [7:0] R_d0;
wire   [7:0] R_q0;
reg   [1:0] R_address1;
reg    R_ce1;
wire   [7:0] R_q1;
wire   [7:0] tmp_s_fu_621_p3;
reg   [7:0] tmp_s_reg_1102;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_83;
wire   [0:0] exitcond_fu_615_p2;
reg   [7:0] tmp_47_reg_1126;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_99;
reg   [7:0] tmp_1_reg_1133;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_112;
reg   [7:0] tmp_3_1_reg_1155;
wire   [0:0] tmp_19_fu_675_p2;
reg   [0:0] tmp_19_reg_1161;
wire   [1:0] i_3_fu_687_p2;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_124;
wire   [0:0] write_flag_1_i_fu_720_p2;
wire   [0:0] exitcond_i1_fu_681_p2;
wire   [7:0] w_3_read_assign_3_fu_726_p3;
wire   [7:0] w_3_read_assign_5_fu_742_p3;
wire   [7:0] w_3_read_assign_7_fu_758_p3;
wire   [7:0] tmp_0_1_fu_766_p3;
wire   [2:0] i_2_fu_779_p2;
reg   [2:0] i_2_reg_1201;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_148;
wire   [1:0] tmp_42_fu_785_p1;
reg   [1:0] tmp_42_reg_1206;
wire   [0:0] exitcond_i_fu_773_p2;
wire   [7:0] i_assign_cast1_fu_818_p1;
wire   [0:0] icmp_fu_838_p2;
reg   [0:0] icmp_reg_1226;
wire   [0:0] tmp_20_fu_822_p2;
wire   [7:0] tmp_3_fu_873_p3;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_174;
wire   [7:0] tmp_3_4_fu_889_p3;
wire   [7:0] tmp_3_7_fu_905_p3;
wire   [7:0] tmp_3_8_fu_913_p3;
wire   [7:0] i_assign_1_fu_921_p2;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_189;
wire   [7:0] a_assign_2_i_fu_963_p3;
wire   [0:0] icmp9_fu_937_p2;
wire   [7:0] tmp_1_3_fu_971_p2;
reg   [7:0] tmp_1_3_reg_1263;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_206;
wire   [7:0] tmp_2_3_fu_977_p2;
reg   [7:0] tmp_2_3_reg_1268;
wire   [7:0] tmp_0_fu_983_p2;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_217;
wire   [7:0] tmp_3_9_fu_989_p2;
wire   [5:0] i_fu_1015_p2;
reg   [5:0] i_reg_1293;
wire   [7:0] tmp_24_fu_1021_p2;
reg   [7:0] tmp_24_reg_1298;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_237;
wire   [7:0] tmp_28_fu_1027_p2;
reg   [7:0] tmp_28_reg_1303;
wire   [7:0] tmp_33_fu_1067_p2;
reg   [7:0] tmp_33_reg_1318;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_252;
wire   [7:0] tmp_38_fu_1073_p2;
reg   [7:0] tmp_38_reg_1323;
reg   [5:0] i_1_reg_440;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_263;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_271;
reg   [0:0] write_flag_i_reg_452;
reg   [7:0] w_3_read_assign_2_reg_463;
reg   [7:0] tmp_2_1_reg_474;
reg   [7:0] tmp_1_1_reg_484;
reg   [1:0] i_i1_reg_494;
reg   [7:0] a_3_read_assign_reg_505;
reg   [7:0] a_2_read_assign_reg_515;
reg   [7:0] tmp_3_3_reg_526;
reg   [7:0] tmp_3_6_reg_537;
reg   [2:0] i_i_reg_547;
reg   [7:0] a_assign_reg_558;
reg   [7:0] p_0_in_i_reg_570;
reg   [7:0] tmp_1_s_reg_579;
reg   [7:0] tmp_0_s_reg_588;
reg   [7:0] tmp_3_s_reg_597;
reg   [7:0] tmp_2_3_2_reg_606;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_327;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_338;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_349;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_360;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_371;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_382;
wire   [63:0] tmp_12_fu_635_p1;
wire   [63:0] tmp_14_fu_646_p1;
wire   [63:0] tmp_16_fu_656_p1;
wire   [63:0] tmp_18_fu_666_p1;
wire   [63:0] tmp_1_i_fu_803_p1;
wire   [63:0] tmp_23_fu_1000_p1;
wire   [63:0] tmp_27_fu_1010_p1;
wire   [63:0] tmp_32_fu_1038_p1;
wire   [63:0] tmp_37_fu_1048_p1;
wire   [63:0] tmp_25_fu_1053_p1;
wire   [63:0] tmp_30_fu_1062_p1;
wire   [63:0] tmp_35_fu_1084_p1;
wire   [63:0] tmp_40_fu_1094_p1;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_460;
wire   [7:0] tmp_11_fu_629_p2;
wire   [7:0] tmp_13_fu_640_p2;
wire   [7:0] tmp_15_fu_651_p2;
wire   [7:0] tmp_17_fu_661_p2;
wire   [1:0] tmp_22_fu_671_p1;
wire   [0:0] sel_tmp_i_fu_693_p2;
wire   [0:0] sel_tmp2_i_fu_706_p2;
wire   [7:0] w_3_read_assign_fu_699_p3;
wire   [7:0] w_3_read_assign_1_fu_712_p3;
wire   [7:0] w_3_read_assign_4_fu_734_p3;
wire   [7:0] w_3_read_assign_6_fu_750_p3;
wire   [1:0] tmp_fu_789_p5;
wire   [7:0] tmp_fu_789_p6;
wire   [3:0] i_assign_fu_808_p4;
wire   [2:0] tmp_43_fu_828_p4;
wire   [0:0] sel_tmp1_fu_854_p2;
wire   [0:0] sel_tmp8_fu_849_p2;
wire   [0:0] sel_tmp_fu_844_p2;
wire   [0:0] or_cond_fu_859_p2;
wire   [7:0] newSel_fu_865_p3;
wire   [7:0] newSel2_fu_881_p3;
wire   [7:0] tmp_3_5_fu_897_p3;
wire   [6:0] tmp_44_fu_927_p4;
wire   [7:0] tmp_45_fu_943_p2;
wire   [0:0] tmp_46_fu_949_p3;
wire   [7:0] a_assign_1_i_fu_957_p2;
wire   [7:0] tmp_21_fu_995_p2;
wire   [7:0] tmp_26_fu_1005_p2;
wire   [7:0] tmp_31_fu_1033_p2;
wire   [7:0] tmp_36_fu_1043_p2;
wire   [7:0] tmp_29_fu_1057_p2;
wire   [7:0] tmp_34_fu_1079_p2;
wire   [7:0] tmp_39_fu_1089_p2;
reg   [20:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'b1;
end

single_block_AES_encrypt_aes_key_expansion_s_box #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
s_box_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s_box_address0),
    .ce0(s_box_ce0),
    .q0(s_box_q0)
);

single_block_AES_encrypt_aes_key_expansion_R #(
    .DataWidth( 8 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
R_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(R_address0),
    .ce0(R_ce0),
    .we0(R_we0),
    .d0(R_d0),
    .q0(R_q0),
    .address1(R_address1),
    .ce1(R_ce1),
    .q1(R_q1)
);

single_block_AES_encrypt_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
single_block_AES_encrypt_mux_4to1_sel2_8_1_U0(
    .din1(tmp_3_6_reg_537),
    .din2(tmp_3_3_reg_526),
    .din3(a_2_read_assign_reg_515),
    .din4(a_3_read_assign_reg_505),
    .din5(tmp_fu_789_p5),
    .dout(tmp_fu_789_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        a_2_read_assign_reg_515 <= tmp_3_4_fu_889_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == exitcond_i1_fu_681_p2))) begin
        a_2_read_assign_reg_515 <= tmp_2_1_reg_474;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        a_3_read_assign_reg_505 <= tmp_3_fu_873_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == exitcond_i1_fu_681_p2))) begin
        a_3_read_assign_reg_505 <= tmp_47_reg_1126;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond_i_fu_773_p2) & (1'b0 == tmp_20_fu_822_p2) & (1'b0 == icmp_fu_838_p2))) begin
        a_assign_reg_558 <= ap_const_lv8_2;
    end else if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & (1'b0 == icmp_reg_1226) & (1'b0 == icmp9_fu_937_p2))) begin
        a_assign_reg_558 <= a_assign_2_i_fu_963_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        i_1_reg_440 <= ap_const_lv6_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        i_1_reg_440 <= i_reg_1293;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == tmp_19_fu_675_p2))) begin
        i_i1_reg_494 <= ap_const_lv2_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (1'b0 == exitcond_i1_fu_681_p2))) begin
        i_i1_reg_494 <= i_3_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        i_i_reg_547 <= i_2_reg_1201;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == exitcond_i1_fu_681_p2))) begin
        i_i_reg_547 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond_i_fu_773_p2) & (1'b0 == tmp_20_fu_822_p2) & (1'b0 == icmp_fu_838_p2))) begin
        p_0_in_i_reg_570 <= i_assign_cast1_fu_818_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & (1'b0 == icmp_reg_1226) & (1'b0 == icmp9_fu_937_p2))) begin
        p_0_in_i_reg_570 <= i_assign_1_fu_921_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & (1'b0 == tmp_19_fu_675_p2))) begin
        tmp_0_s_reg_588 <= tmp_47_reg_1126;
    end else if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & ~(1'b0 == tmp_19_reg_1161))) begin
        tmp_0_s_reg_588 <= tmp_0_fu_983_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == tmp_19_fu_675_p2))) begin
        tmp_1_1_reg_484 <= tmp_1_reg_1133;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (1'b0 == exitcond_i1_fu_681_p2))) begin
        tmp_1_1_reg_484 <= w_3_read_assign_7_fu_758_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & (1'b0 == tmp_19_fu_675_p2))) begin
        tmp_1_s_reg_579 <= tmp_1_reg_1133;
    end else if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & ~(1'b0 == tmp_19_reg_1161))) begin
        tmp_1_s_reg_579 <= tmp_1_3_reg_1263;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == tmp_19_fu_675_p2))) begin
        tmp_2_1_reg_474 <= w_q0;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (1'b0 == exitcond_i1_fu_681_p2))) begin
        tmp_2_1_reg_474 <= w_3_read_assign_5_fu_742_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & (1'b0 == tmp_19_fu_675_p2))) begin
        tmp_2_3_2_reg_606 <= w_q0;
    end else if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & ~(1'b0 == tmp_19_reg_1161))) begin
        tmp_2_3_2_reg_606 <= tmp_2_3_reg_1268;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        tmp_3_3_reg_526 <= tmp_3_7_fu_905_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == exitcond_i1_fu_681_p2))) begin
        tmp_3_3_reg_526 <= tmp_1_1_reg_484;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        tmp_3_6_reg_537 <= tmp_3_8_fu_913_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == exitcond_i1_fu_681_p2))) begin
        tmp_3_6_reg_537 <= tmp_0_1_fu_766_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & (1'b0 == tmp_19_fu_675_p2))) begin
        tmp_3_s_reg_597 <= w_q1;
    end else if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & ~(1'b0 == tmp_19_reg_1161))) begin
        tmp_3_s_reg_597 <= tmp_3_9_fu_989_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == tmp_19_fu_675_p2))) begin
        write_flag_i_reg_452 <= 1'b0;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (1'b0 == exitcond_i1_fu_681_p2))) begin
        write_flag_i_reg_452 <= write_flag_1_i_fu_720_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        i_2_reg_1201 <= i_2_fu_779_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        i_reg_1293 <= i_fu_1015_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond_i_fu_773_p2) & (1'b0 == tmp_20_fu_822_p2))) begin
        icmp_reg_1226 <= icmp_fu_838_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        tmp_19_reg_1161 <= tmp_19_fu_675_p2;
        tmp_3_1_reg_1155 <= w_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        tmp_1_3_reg_1263 <= tmp_1_3_fu_971_p2;
        tmp_2_3_reg_1268 <= tmp_2_3_fu_977_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        tmp_1_reg_1133 <= w_q1;
        tmp_47_reg_1126 <= w_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        tmp_24_reg_1298 <= tmp_24_fu_1021_p2;
        tmp_28_reg_1303 <= tmp_28_fu_1027_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        tmp_33_reg_1318 <= tmp_33_fu_1067_p2;
        tmp_38_reg_1323 <= tmp_38_fu_1073_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (1'b0 == exitcond_i_fu_773_p2))) begin
        tmp_42_reg_1206 <= tmp_42_fu_785_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (exitcond_fu_615_p2 == 1'b0))) begin
        tmp_s_reg_1102[7 : 2] <= tmp_s_fu_621_p3[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (1'b0 == exitcond_i1_fu_681_p2))) begin
        w_3_read_assign_2_reg_463 <= w_3_read_assign_3_fu_726_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        R_address0 = ap_const_lv2_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        R_address0 = ap_const_lv2_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        R_address0 = ap_const_lv2_1;
    end else begin
        R_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        R_address1 = ap_const_lv2_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        R_address1 = ap_const_lv2_2;
    end else begin
        R_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        R_ce0 = 1'b1;
    end else begin
        R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        R_ce1 = 1'b1;
    end else begin
        R_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        R_d0 = a_assign_reg_558;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        R_d0 = ap_const_lv8_1;
    end else begin
        R_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond_i_fu_773_p2) & ~(1'b0 == tmp_20_fu_822_p2)) | ((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & (1'b0 == icmp_reg_1226) & ~(1'b0 == icmp9_fu_937_p2)))) begin
        R_we0 = 1'b1;
    end else begin
        R_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(exitcond_fu_615_p2 == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(exitcond_fu_615_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_99) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_112) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_124) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_148) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_174) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_189) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_460) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_206) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_217) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_237) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_38) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_252) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_263) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_327) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_338) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_349) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_360) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_371) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_382) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_271) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_83) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        s_box_ce0 = 1'b1;
    end else begin
        s_box_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        w_address0 = tmp_35_fu_1084_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        w_address0 = tmp_25_fu_1053_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        w_address0 = ap_const_lv64_E;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        w_address0 = ap_const_lv64_C;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        w_address0 = ap_const_lv64_A;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        w_address0 = ap_const_lv64_8;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        w_address0 = ap_const_lv64_6;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        w_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        w_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        w_address0 = ap_const_lv64_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        w_address0 = tmp_32_fu_1038_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        w_address0 = tmp_23_fu_1000_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        w_address0 = tmp_16_fu_656_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        w_address0 = tmp_12_fu_635_p1;
    end else begin
        w_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        w_address1 = tmp_40_fu_1094_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        w_address1 = tmp_30_fu_1062_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        w_address1 = ap_const_lv64_F;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        w_address1 = ap_const_lv64_D;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        w_address1 = ap_const_lv64_B;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        w_address1 = ap_const_lv64_9;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        w_address1 = ap_const_lv64_7;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        w_address1 = ap_const_lv64_5;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        w_address1 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        w_address1 = ap_const_lv64_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        w_address1 = tmp_37_fu_1048_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        w_address1 = tmp_27_fu_1010_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        w_address1 = tmp_18_fu_666_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        w_address1 = tmp_14_fu_646_p1;
    end else begin
        w_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)))) begin
        w_ce0 = 1'b1;
    end else begin
        w_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)))) begin
        w_ce1 = 1'b1;
    end else begin
        w_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        w_d0 = tmp_33_reg_1318;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        w_d0 = tmp_24_reg_1298;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        w_d0 = ap_const_lv8_E3;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        w_d0 = ap_const_lv8_11;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        w_d0 = ap_const_lv8_D2;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        w_d0 = ap_const_lv8_E7;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        w_d0 = ap_const_lv8_12;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        w_d0 = ap_const_lv8_6B;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        w_d0 = ap_const_lv8_71;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        w_d0 = ap_const_lv8_63;
    end else begin
        w_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        w_d1 = tmp_38_reg_1323;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        w_d1 = tmp_28_reg_1303;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        w_d1 = ap_const_lv8_AB;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        w_d1 = ap_const_lv8_15;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        w_d1 = ap_const_lv8_FF;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        w_d1 = ap_const_lv8_67;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        w_d1 = ap_const_lv8_85;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        w_d1 = ap_const_lv8_B2;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        w_d1 = ap_const_lv8_E3;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        w_d1 = ap_const_lv8_D3;
    end else begin
        w_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)))) begin
        w_we0 = 1'b1;
    end else begin
        w_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)))) begin
        w_we1 = 1'b1;
    end else begin
        w_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            if (~(exitcond_fu_615_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            if ((1'b0 == tmp_19_fu_675_p2)) begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st12_fsm_11 : begin
            if (~(1'b0 == exitcond_i1_fu_681_p2)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st13_fsm_12 : begin
            if ((~(1'b0 == exitcond_i_fu_773_p2) & ~(1'b0 == tmp_20_fu_822_p2))) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else if ((~(1'b0 == exitcond_i_fu_773_p2) & (1'b0 == tmp_20_fu_822_p2))) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st15_fsm_14 : begin
            if ((~(1'b0 == icmp9_fu_937_p2) | ~(1'b0 == icmp_reg_1226))) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_assign_1_i_fu_957_p2 = (tmp_45_fu_943_p2 ^ ap_const_lv8_1B);

assign a_assign_2_i_fu_963_p3 = ((tmp_46_fu_949_p3[0:0] === 1'b1) ? a_assign_1_i_fu_957_p2 : tmp_45_fu_943_p2);

always @ (*) begin
    ap_sig_112 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_124 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_148 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_174 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_189 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_206 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_217 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_237 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_252 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_263 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_271 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_327 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_338 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_349 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_360 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_371 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_38 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_382 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_460 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_83 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_99 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

assign exitcond_fu_615_p2 = ((i_1_reg_440 == ap_const_lv6_2C) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_681_p2 = ((i_i1_reg_494 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond_i_fu_773_p2 = ((i_i_reg_547 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign i_2_fu_779_p2 = (i_i_reg_547 + ap_const_lv3_1);

assign i_3_fu_687_p2 = (i_i1_reg_494 + ap_const_lv2_1);

assign i_assign_1_fu_921_p2 = ($signed(p_0_in_i_reg_570) + $signed(ap_const_lv8_FF));

assign i_assign_cast1_fu_818_p1 = i_assign_fu_808_p4;

assign i_assign_fu_808_p4 = {{i_1_reg_440[ap_const_lv32_5 : ap_const_lv32_2]}};

assign i_fu_1015_p2 = (i_1_reg_440 + ap_const_lv6_1);

assign icmp9_fu_937_p2 = ((tmp_44_fu_927_p4 == ap_const_lv7_0) ? 1'b1 : 1'b0);

assign icmp_fu_838_p2 = ((tmp_43_fu_828_p4 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign newSel2_fu_881_p3 = ((sel_tmp_fu_844_p2[0:0] === 1'b1) ? s_box_q0 : a_2_read_assign_reg_515);

assign newSel_fu_865_p3 = ((sel_tmp_fu_844_p2[0:0] === 1'b1) ? a_3_read_assign_reg_505 : s_box_q0);

assign or_cond_fu_859_p2 = (sel_tmp1_fu_854_p2 | sel_tmp8_fu_849_p2);

assign s_box_address0 = tmp_1_i_fu_803_p1;

assign sel_tmp1_fu_854_p2 = ((tmp_42_reg_1206 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp2_i_fu_706_p2 = ((i_i1_reg_494 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp8_fu_849_p2 = ((tmp_42_reg_1206 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp_fu_844_p2 = ((tmp_42_reg_1206 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign sel_tmp_i_fu_693_p2 = ((i_i1_reg_494 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign tmp_0_1_fu_766_p3 = ((write_flag_i_reg_452[0:0] === 1'b1) ? w_3_read_assign_2_reg_463 : tmp_47_reg_1126);

assign tmp_0_fu_983_p2 = (R_q1 ^ tmp_3_6_reg_537);

assign tmp_11_fu_629_p2 = ($signed(ap_const_lv8_FC) + $signed(tmp_s_fu_621_p3));

assign tmp_12_fu_635_p1 = tmp_11_fu_629_p2;

assign tmp_13_fu_640_p2 = ($signed(ap_const_lv8_FD) + $signed(tmp_s_fu_621_p3));

assign tmp_14_fu_646_p1 = tmp_13_fu_640_p2;

assign tmp_15_fu_651_p2 = ($signed(ap_const_lv8_FE) + $signed(tmp_s_reg_1102));

assign tmp_16_fu_656_p1 = tmp_15_fu_651_p2;

assign tmp_17_fu_661_p2 = ($signed(ap_const_lv8_FF) + $signed(tmp_s_reg_1102));

assign tmp_18_fu_666_p1 = tmp_17_fu_661_p2;

assign tmp_19_fu_675_p2 = ((tmp_22_fu_671_p1 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign tmp_1_3_fu_971_p2 = (R_q0 ^ tmp_3_3_reg_526);

assign tmp_1_i_fu_803_p1 = tmp_fu_789_p6;

assign tmp_20_fu_822_p2 = ((i_assign_fu_808_p4 == ap_const_lv4_1) ? 1'b1 : 1'b0);

assign tmp_21_fu_995_p2 = ($signed(tmp_s_reg_1102) + $signed(ap_const_lv8_F0));

assign tmp_22_fu_671_p1 = i_1_reg_440[1:0];

assign tmp_23_fu_1000_p1 = tmp_21_fu_995_p2;

assign tmp_24_fu_1021_p2 = (w_q0 ^ tmp_0_s_reg_588);

assign tmp_25_fu_1053_p1 = tmp_s_reg_1102;

assign tmp_26_fu_1005_p2 = ($signed(tmp_s_reg_1102) + $signed(ap_const_lv8_F1));

assign tmp_27_fu_1010_p1 = tmp_26_fu_1005_p2;

assign tmp_28_fu_1027_p2 = (w_q1 ^ tmp_1_s_reg_579);

assign tmp_29_fu_1057_p2 = (tmp_s_reg_1102 | ap_const_lv8_1);

assign tmp_2_3_fu_977_p2 = (R_q1 ^ a_2_read_assign_reg_515);

assign tmp_30_fu_1062_p1 = tmp_29_fu_1057_p2;

assign tmp_31_fu_1033_p2 = ($signed(tmp_s_reg_1102) + $signed(ap_const_lv8_F2));

assign tmp_32_fu_1038_p1 = tmp_31_fu_1033_p2;

assign tmp_33_fu_1067_p2 = (w_q0 ^ tmp_2_3_2_reg_606);

assign tmp_34_fu_1079_p2 = (tmp_s_reg_1102 | ap_const_lv8_2);

assign tmp_35_fu_1084_p1 = tmp_34_fu_1079_p2;

assign tmp_36_fu_1043_p2 = ($signed(tmp_s_reg_1102) + $signed(ap_const_lv8_F3));

assign tmp_37_fu_1048_p1 = tmp_36_fu_1043_p2;

assign tmp_38_fu_1073_p2 = (w_q1 ^ tmp_3_s_reg_597);

assign tmp_39_fu_1089_p2 = (tmp_s_reg_1102 | ap_const_lv8_3);

assign tmp_3_4_fu_889_p3 = ((or_cond_fu_859_p2[0:0] === 1'b1) ? a_2_read_assign_reg_515 : newSel2_fu_881_p3);

assign tmp_3_5_fu_897_p3 = ((sel_tmp8_fu_849_p2[0:0] === 1'b1) ? s_box_q0 : tmp_3_3_reg_526);

assign tmp_3_7_fu_905_p3 = ((sel_tmp1_fu_854_p2[0:0] === 1'b1) ? tmp_3_3_reg_526 : tmp_3_5_fu_897_p3);

assign tmp_3_8_fu_913_p3 = ((sel_tmp1_fu_854_p2[0:0] === 1'b1) ? s_box_q0 : tmp_3_6_reg_537);

assign tmp_3_9_fu_989_p2 = (R_q0 ^ a_3_read_assign_reg_505);

assign tmp_3_fu_873_p3 = ((or_cond_fu_859_p2[0:0] === 1'b1) ? a_3_read_assign_reg_505 : newSel_fu_865_p3);

assign tmp_40_fu_1094_p1 = tmp_39_fu_1089_p2;

assign tmp_42_fu_785_p1 = i_i_reg_547[1:0];

assign tmp_43_fu_828_p4 = {{i_1_reg_440[ap_const_lv32_5 : ap_const_lv32_3]}};

assign tmp_44_fu_927_p4 = {{i_assign_1_fu_921_p2[ap_const_lv32_7 : ap_const_lv32_1]}};

assign tmp_45_fu_943_p2 = a_assign_reg_558 << ap_const_lv8_1;

assign tmp_46_fu_949_p3 = a_assign_reg_558[ap_const_lv32_7];

assign tmp_fu_789_p5 = i_i_reg_547[1:0];

assign tmp_s_fu_621_p3 = {{i_1_reg_440}, {ap_const_lv2_0}};

assign w_3_read_assign_1_fu_712_p3 = ((sel_tmp2_i_fu_706_p2[0:0] === 1'b1) ? tmp_1_1_reg_484 : w_3_read_assign_fu_699_p3);

assign w_3_read_assign_3_fu_726_p3 = ((sel_tmp2_i_fu_706_p2[0:0] === 1'b1) ? tmp_1_1_reg_484 : w_3_read_assign_2_reg_463);

assign w_3_read_assign_4_fu_734_p3 = ((sel_tmp_i_fu_693_p2[0:0] === 1'b1) ? tmp_2_1_reg_474 : w_3_read_assign_1_fu_712_p3);

assign w_3_read_assign_5_fu_742_p3 = ((sel_tmp2_i_fu_706_p2[0:0] === 1'b1) ? tmp_2_1_reg_474 : w_3_read_assign_4_fu_734_p3);

assign w_3_read_assign_6_fu_750_p3 = ((sel_tmp_i_fu_693_p2[0:0] === 1'b1) ? w_3_read_assign_1_fu_712_p3 : tmp_1_1_reg_484);

assign w_3_read_assign_7_fu_758_p3 = ((sel_tmp2_i_fu_706_p2[0:0] === 1'b1) ? tmp_1_1_reg_484 : w_3_read_assign_6_fu_750_p3);

assign w_3_read_assign_fu_699_p3 = ((sel_tmp_i_fu_693_p2[0:0] === 1'b1) ? tmp_2_1_reg_474 : tmp_3_1_reg_1155);

assign write_flag_1_i_fu_720_p2 = (sel_tmp2_i_fu_706_p2 | write_flag_i_reg_452);

always @ (posedge ap_clk) begin
    tmp_s_reg_1102[1:0] <= 2'b00;
end

endmodule //single_block_AES_encrypt_aes_key_expansion

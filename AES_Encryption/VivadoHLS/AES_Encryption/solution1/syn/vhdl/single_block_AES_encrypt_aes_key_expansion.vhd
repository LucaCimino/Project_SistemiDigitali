-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity single_block_AES_encrypt_aes_key_expansion is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    w_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w_ce0 : OUT STD_LOGIC;
    w_we0 : OUT STD_LOGIC;
    w_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    w_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w_ce1 : OUT STD_LOGIC;
    w_we1 : OUT STD_LOGIC;
    w_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of single_block_AES_encrypt_aes_key_expansion is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv8_FC : STD_LOGIC_VECTOR (7 downto 0) := "11111100";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_lv8_FE : STD_LOGIC_VECTOR (7 downto 0) := "11111110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv8_1B : STD_LOGIC_VECTOR (7 downto 0) := "00011011";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv8_F1 : STD_LOGIC_VECTOR (7 downto 0) := "11110001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_F2 : STD_LOGIC_VECTOR (7 downto 0) := "11110010";
    constant ap_const_lv8_F3 : STD_LOGIC_VECTOR (7 downto 0) := "11110011";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_35 : BOOLEAN;
    signal key_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_ce0 : STD_LOGIC;
    signal key_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal key_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_ce1 : STD_LOGIC;
    signal key_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal s_box_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal s_box_ce0 : STD_LOGIC;
    signal s_box_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_ce0 : STD_LOGIC;
    signal R_we0 : STD_LOGIC;
    signal R_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_ce1 : STD_LOGIC;
    signal R_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_7_fu_559_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_7_reg_1144 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_91 : BOOLEAN;
    signal tmp_s_fu_569_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_reg_1149 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond1_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_577_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_reg_1155 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_reg_1165 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_reg_1175 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_114 : BOOLEAN;
    signal tmp_2_fu_608_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_reg_1185 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_619_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_reg_1198 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_129 : BOOLEAN;
    signal exitcond_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_reg_1222 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_144 : BOOLEAN;
    signal tmp_1_reg_1229 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_157 : BOOLEAN;
    signal tmp_3_1_reg_1251 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_1257 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_8_fu_685_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_169 : BOOLEAN;
    signal write_flag_1_i_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_3_read_assign_3_fu_724_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_5_fu_740_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_7_fu_756_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_0_1_fu_764_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_9_fu_777_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_9_reg_1297 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_193 : BOOLEAN;
    signal tmp_45_fu_783_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_45_reg_1302 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_i_fu_771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_assign_cast1_fu_816_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1322 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_21_fu_871_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_219 : BOOLEAN;
    signal tmp_3_4_fu_887_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_7_fu_903_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_8_fu_911_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_assign_1_fu_919_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_assign_1_reg_1346 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_234 : BOOLEAN;
    signal i_10_fu_947_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_245 : BOOLEAN;
    signal p_0_i_24_fu_965_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_i1_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_assign_5_fu_991_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_assign_fu_1009_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_3_fu_1013_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_3_reg_1377 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_263 : BOOLEAN;
    signal tmp_2_3_fu_1019_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_3_reg_1382 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_0_fu_1025_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_274 : BOOLEAN;
    signal tmp_3_9_fu_1031_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_11_fu_1057_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_11_reg_1407 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_22_fu_1063_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_reg_1412 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_294 : BOOLEAN;
    signal tmp_27_fu_1069_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_reg_1417 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_1109_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_reg_1432 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_309 : BOOLEAN;
    signal tmp_37_fu_1115_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_reg_1437 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_321 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_324 : BOOLEAN;
    signal i_1_reg_332 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_333 : BOOLEAN;
    signal write_flag_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_3_read_assign_2_reg_355 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_1_reg_366 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_1_reg_376 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i2_reg_386 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_3_read_assign_reg_397 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_2_read_assign_reg_407 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_3_reg_418 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_6_reg_429 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i_reg_439 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_assign_reg_450 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_in_i_reg_463 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i1_reg_472 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp1_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_reg_483 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_22_reg_496 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_0_i_reg_507 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_s_reg_517 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_0_s_reg_526 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_s_reg_535 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_3_2_reg_544 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_644_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_654_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_664_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_i_fu_801_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1042_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_1052_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_1080_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_1090_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_1095_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_1104_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_1126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_fu_1136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_442 : BOOLEAN;
    signal tmp_23_fu_565_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_582_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_fu_593_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_603_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_fu_627_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_638_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_649_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_659_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_fu_669_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp_i_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_3_read_assign_fu_697_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_1_fu_710_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_4_fu_732_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_3_read_assign_6_fu_748_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_787_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_787_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_assign_fu_806_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_46_fu_826_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp2_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_863_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel5_fu_879_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_5_fu_895_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_fu_925_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_48_fu_953_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_fu_957_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_fu_971_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_50_fu_977_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_assign_4_fu_985_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_999_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_20_fu_1037_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_1047_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_1075_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_1085_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_1099_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_1121_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_fu_1131_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);

    component single_block_AES_encrypt_mux_4to1_sel2_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component single_block_AES_encrypt_aes_key_expansion_key IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component single_block_AES_encrypt_aes_key_expansion_s_box IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component single_block_AES_encrypt_aes_key_expansion_R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    key_U : component single_block_AES_encrypt_aes_key_expansion_key
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => key_address0,
        ce0 => key_ce0,
        q0 => key_q0,
        address1 => key_address1,
        ce1 => key_ce1,
        q1 => key_q1);

    s_box_U : component single_block_AES_encrypt_aes_key_expansion_s_box
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s_box_address0,
        ce0 => s_box_ce0,
        q0 => s_box_q0);

    R_U : component single_block_AES_encrypt_aes_key_expansion_R
    generic map (
        DataWidth => 8,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => R_address0,
        ce0 => R_ce0,
        we0 => R_we0,
        d0 => R_d0,
        q0 => R_q0,
        address1 => R_address1,
        ce1 => R_ce1,
        q1 => R_q1);

    single_block_AES_encrypt_mux_4to1_sel2_8_1_U0 : component single_block_AES_encrypt_mux_4to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => tmp_3_6_reg_429,
        din2 => tmp_3_3_reg_418,
        din3 => a_2_read_assign_reg_407,
        din4 => a_3_read_assign_reg_397,
        din5 => tmp_fu_787_p5,
        dout => tmp_fu_787_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    a_2_read_assign_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                a_2_read_assign_reg_407 <= tmp_3_4_fu_887_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond_i2_fu_679_p2)))) then 
                a_2_read_assign_reg_407 <= tmp_2_1_reg_366;
            end if; 
        end if;
    end process;

    a_3_read_assign_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                a_3_read_assign_reg_397 <= tmp_3_21_fu_871_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond_i2_fu_679_p2)))) then 
                a_3_read_assign_reg_397 <= tmp_52_reg_1222;
            end if; 
        end if;
    end process;

    a_assign_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = exitcond_i1_fu_941_p2)))) then 
                a_assign_reg_450 <= p_i_reg_483;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = exitcond_i_fu_771_p2)) and (ap_const_lv1_0 = tmp_19_fu_820_p2) and (ap_const_lv1_0 = icmp_fu_836_p2))) then 
                a_assign_reg_450 <= ap_const_lv8_2;
            end if; 
        end if;
    end process;

    i_1_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_553_p2 = ap_const_lv1_0)))) then 
                i_1_reg_332 <= ap_const_lv6_4;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                i_1_reg_332 <= i_11_reg_1407;
            end if; 
        end if;
    end process;

    i_i1_reg_472_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = icmp_reg_1322) and (ap_const_lv1_0 = icmp1_fu_935_p2))) then 
                i_i1_reg_472 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i1_fu_941_p2))) then 
                i_i1_reg_472 <= i_10_fu_947_p2;
            end if; 
        end if;
    end process;

    i_i2_reg_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_18_fu_673_p2)))) then 
                i_i2_reg_386 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = exitcond_i2_fu_679_p2))) then 
                i_i2_reg_386 <= i_8_fu_685_p2;
            end if; 
        end if;
    end process;

    i_i_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                i_i_reg_439 <= i_9_reg_1297;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond_i2_fu_679_p2)))) then 
                i_i_reg_439 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                i_reg_321 <= i_7_reg_1144;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_321 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_0_i_reg_507_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = icmp_reg_1322) and (ap_const_lv1_0 = icmp1_fu_935_p2))) then 
                p_0_i_reg_507 <= a_assign_reg_450;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i1_fu_941_p2))) then 
                p_0_i_reg_507 <= a_assign_5_fu_991_p3;
            end if; 
        end if;
    end process;

    p_0_in_i_reg_463_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = exitcond_i1_fu_941_p2)))) then 
                p_0_in_i_reg_463 <= i_assign_1_reg_1346;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = exitcond_i_fu_771_p2)) and (ap_const_lv1_0 = tmp_19_fu_820_p2) and (ap_const_lv1_0 = icmp_fu_836_p2))) then 
                p_0_in_i_reg_463 <= i_assign_cast1_fu_816_p1;
            end if; 
        end if;
    end process;

    p_i_22_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = icmp_reg_1322) and (ap_const_lv1_0 = icmp1_fu_935_p2))) then 
                p_i_22_reg_496(0) <= '0';
                p_i_22_reg_496(1) <= '1';
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i1_fu_941_p2))) then 
                                p_i_22_reg_496(1 downto 0) <= b_assign_fu_1009_p1(1 downto 0);
            end if; 
        end if;
    end process;

    p_i_reg_483_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = icmp_reg_1322) and (ap_const_lv1_0 = icmp1_fu_935_p2))) then 
                p_i_reg_483 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = exitcond_i1_fu_941_p2))) then 
                p_i_reg_483 <= p_0_i_24_fu_965_p2;
            end if; 
        end if;
    end process;

    tmp_0_s_reg_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_18_fu_673_p2))) then 
                tmp_0_s_reg_526 <= tmp_52_reg_1222;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = tmp_18_reg_1257)))) then 
                tmp_0_s_reg_526 <= tmp_0_fu_1025_p2;
            end if; 
        end if;
    end process;

    tmp_1_1_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_18_fu_673_p2)))) then 
                tmp_1_1_reg_376 <= tmp_1_reg_1229;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = exitcond_i2_fu_679_p2))) then 
                tmp_1_1_reg_376 <= w_3_read_assign_7_fu_756_p3;
            end if; 
        end if;
    end process;

    tmp_1_s_reg_517_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_18_fu_673_p2))) then 
                tmp_1_s_reg_517 <= tmp_1_reg_1229;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = tmp_18_reg_1257)))) then 
                tmp_1_s_reg_517 <= tmp_1_3_reg_1377;
            end if; 
        end if;
    end process;

    tmp_2_1_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_18_fu_673_p2)))) then 
                tmp_2_1_reg_366 <= w_q0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = exitcond_i2_fu_679_p2))) then 
                tmp_2_1_reg_366 <= w_3_read_assign_5_fu_740_p3;
            end if; 
        end if;
    end process;

    tmp_2_3_2_reg_544_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_18_fu_673_p2))) then 
                tmp_2_3_2_reg_544 <= w_q0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = tmp_18_reg_1257)))) then 
                tmp_2_3_2_reg_544 <= tmp_2_3_reg_1382;
            end if; 
        end if;
    end process;

    tmp_3_3_reg_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                tmp_3_3_reg_418 <= tmp_3_7_fu_903_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond_i2_fu_679_p2)))) then 
                tmp_3_3_reg_418 <= tmp_1_1_reg_376;
            end if; 
        end if;
    end process;

    tmp_3_6_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                tmp_3_6_reg_429 <= tmp_3_8_fu_911_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond_i2_fu_679_p2)))) then 
                tmp_3_6_reg_429 <= tmp_0_1_fu_764_p3;
            end if; 
        end if;
    end process;

    tmp_3_s_reg_535_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_18_fu_673_p2))) then 
                tmp_3_s_reg_535 <= w_q1;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = tmp_18_reg_1257)))) then 
                tmp_3_s_reg_535 <= tmp_3_9_fu_1031_p2;
            end if; 
        end if;
    end process;

    write_flag_i_reg_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_18_fu_673_p2)))) then 
                write_flag_i_reg_344 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = exitcond_i2_fu_679_p2))) then 
                write_flag_i_reg_344 <= write_flag_1_i_fu_718_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then
                i_11_reg_1407 <= i_11_fu_1057_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_7_reg_1144 <= i_7_fu_559_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                i_9_reg_1297 <= i_9_fu_777_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = icmp_reg_1322))) then
                i_assign_1_reg_1346 <= i_assign_1_fu_919_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = exitcond_i_fu_771_p2)) and (ap_const_lv1_0 = tmp_19_fu_820_p2))) then
                icmp_reg_1322 <= icmp_fu_836_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                tmp_18_reg_1257 <= tmp_18_fu_673_p2;
                tmp_3_1_reg_1251 <= w_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then
                tmp_1_3_reg_1377 <= tmp_1_3_fu_1013_p2;
                tmp_2_3_reg_1382 <= tmp_2_3_fu_1019_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                tmp_1_reg_1229 <= w_q1;
                tmp_52_reg_1222 <= w_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then
                tmp_22_reg_1412 <= tmp_22_fu_1063_p2;
                tmp_27_reg_1417 <= tmp_27_fu_1069_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                    tmp_2_reg_1185(3 downto 2) <= tmp_2_fu_608_p1(3 downto 2);
                    tmp_8_reg_1175(3 downto 2) <= tmp_8_fu_598_p1(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then
                tmp_32_reg_1432 <= tmp_32_fu_1109_p2;
                tmp_37_reg_1437 <= tmp_37_fu_1115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond_fu_613_p2))) then
                    tmp_3_reg_1198(7 downto 2) <= tmp_3_fu_619_p3(7 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and (ap_const_lv1_0 = exitcond_i_fu_771_p2))) then
                tmp_45_reg_1302 <= tmp_45_fu_783_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_553_p2 = ap_const_lv1_0))) then
                    tmp_4_reg_1155(3 downto 2) <= tmp_4_fu_577_p1(3 downto 2);
                    tmp_6_reg_1165(3 downto 2) <= tmp_6_fu_588_p1(3 downto 2);
                    tmp_s_reg_1149(3 downto 2) <= tmp_s_fu_569_p3(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = exitcond_i2_fu_679_p2))) then
                w_3_read_assign_2_reg_355 <= w_3_read_assign_3_fu_724_p3;
            end if;
        end if;
    end process;
    tmp_s_reg_1149(1 downto 0) <= "00";
    tmp_4_reg_1155(1 downto 0) <= "00";
    tmp_4_reg_1155(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    tmp_6_reg_1165(1 downto 0) <= "01";
    tmp_6_reg_1165(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    tmp_8_reg_1175(1 downto 0) <= "10";
    tmp_8_reg_1175(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    tmp_2_reg_1185(1 downto 0) <= "11";
    tmp_2_reg_1185(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    tmp_3_reg_1198(1 downto 0) <= "00";
    p_i_22_reg_496(4 downto 2) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond1_fu_553_p2, exitcond_fu_613_p2, tmp_18_fu_673_p2, exitcond_i2_fu_679_p2, exitcond_i_fu_771_p2, icmp_reg_1322, tmp_19_fu_820_p2, exitcond_i1_fu_941_p2, icmp1_fu_935_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond1_fu_553_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = exitcond_fu_613_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if ((ap_const_lv1_0 = tmp_18_fu_673_p2)) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_lv1_0 = exitcond_i2_fu_679_p2))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                if ((not((ap_const_lv1_0 = exitcond_i_fu_771_p2)) and not((ap_const_lv1_0 = tmp_19_fu_820_p2)))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                elsif ((not((ap_const_lv1_0 = exitcond_i_fu_771_p2)) and (ap_const_lv1_0 = tmp_19_fu_820_p2))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st11_fsm_10 => 
                if ((not((ap_const_lv1_0 = icmp1_fu_935_p2)) or not((ap_const_lv1_0 = icmp_reg_1322)))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st12_fsm_11 => 
                if ((ap_const_lv1_0 = exitcond_i1_fu_941_p2)) then
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    R_address0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            R_address0 <= ap_const_lv2_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            R_address0 <= ap_const_lv2_3;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            R_address0 <= ap_const_lv2_1;
        else 
            R_address0 <= "XX";
        end if; 
    end process;


    R_address1_assign_proc : process(ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            R_address1 <= ap_const_lv2_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            R_address1 <= ap_const_lv2_2;
        else 
            R_address1 <= "XX";
        end if; 
    end process;


    R_ce0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            R_ce0 <= ap_const_logic_1;
        else 
            R_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    R_ce1_assign_proc : process(ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            R_ce1 <= ap_const_logic_1;
        else 
            R_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    R_d0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st11_fsm_10, a_assign_reg_450)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            R_d0 <= a_assign_reg_450;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            R_d0 <= ap_const_lv8_1;
        else 
            R_d0 <= "XXXXXXXX";
        end if; 
    end process;


    R_we0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, exitcond_i_fu_771_p2, icmp_reg_1322, tmp_19_fu_820_p2, ap_sig_cseq_ST_st11_fsm_10, icmp1_fu_935_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = exitcond_i_fu_771_p2)) and not((ap_const_lv1_0 = tmp_19_fu_820_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = icmp_reg_1322) and not((ap_const_lv1_0 = icmp1_fu_935_p2))))) then 
            R_we0 <= ap_const_logic_1;
        else 
            R_we0 <= ap_const_logic_0;
        end if; 
    end process;

    a_assign_4_fu_985_p2 <= (tmp_49_fu_971_p2 xor ap_const_lv8_1B);
    a_assign_5_fu_991_p3 <= 
        a_assign_4_fu_985_p2 when (tmp_50_fu_977_p3(0) = '1') else 
        tmp_49_fu_971_p2;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st5_fsm_4, exitcond_fu_613_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond_fu_613_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, exitcond_fu_613_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond_fu_613_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_114_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_114 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_129_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_129 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_144_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_144 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_157_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_157 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_169_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_169 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_193_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_193 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_219_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_219 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_234_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_234 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_245_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_245 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_263_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_263 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_274_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_274 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_294_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_294 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_309_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_309 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_324_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_324 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_333_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_333 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_35_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_35 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_442_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_442 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_91_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_91 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_219)
    begin
        if (ap_sig_219) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_234)
    begin
        if (ap_sig_234) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_245)
    begin
        if (ap_sig_245) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_442)
    begin
        if (ap_sig_442) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_263)
    begin
        if (ap_sig_263) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_274)
    begin
        if (ap_sig_274) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_294)
    begin
        if (ap_sig_294) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_309)
    begin
        if (ap_sig_309) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_333)
    begin
        if (ap_sig_333) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_35)
    begin
        if (ap_sig_35) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_91)
    begin
        if (ap_sig_91) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_114)
    begin
        if (ap_sig_114) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_324)
    begin
        if (ap_sig_324) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_129)
    begin
        if (ap_sig_129) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_144)
    begin
        if (ap_sig_144) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_157)
    begin
        if (ap_sig_157) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_169)
    begin
        if (ap_sig_169) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_193)
    begin
        if (ap_sig_193) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    b_assign_fu_1009_p1 <= std_logic_vector(resize(unsigned(tmp_51_fu_999_p4),5));
    exitcond1_fu_553_p2 <= "1" when (i_reg_321 = ap_const_lv3_4) else "0";
    exitcond_fu_613_p2 <= "1" when (i_1_reg_332 = ap_const_lv6_2C) else "0";
    exitcond_i1_fu_941_p2 <= "1" when (i_i1_reg_472 = ap_const_lv4_8) else "0";
    exitcond_i2_fu_679_p2 <= "1" when (i_i2_reg_386 = ap_const_lv2_3) else "0";
    exitcond_i_fu_771_p2 <= "1" when (i_i_reg_439 = ap_const_lv3_4) else "0";
    i_10_fu_947_p2 <= std_logic_vector(unsigned(i_i1_reg_472) + unsigned(ap_const_lv4_1));
    i_11_fu_1057_p2 <= std_logic_vector(unsigned(i_1_reg_332) + unsigned(ap_const_lv6_1));
    i_7_fu_559_p2 <= std_logic_vector(unsigned(i_reg_321) + unsigned(ap_const_lv3_1));
    i_8_fu_685_p2 <= std_logic_vector(unsigned(i_i2_reg_386) + unsigned(ap_const_lv2_1));
    i_9_fu_777_p2 <= std_logic_vector(unsigned(i_i_reg_439) + unsigned(ap_const_lv3_1));
    i_assign_1_fu_919_p2 <= std_logic_vector(unsigned(p_0_in_i_reg_463) + unsigned(ap_const_lv8_FF));
    i_assign_cast1_fu_816_p1 <= std_logic_vector(resize(unsigned(i_assign_fu_806_p4),8));
    i_assign_fu_806_p4 <= i_1_reg_332(5 downto 2);
    icmp1_fu_935_p2 <= "1" when (tmp_47_fu_925_p4 = ap_const_lv7_0) else "0";
    icmp_fu_836_p2 <= "1" when (tmp_46_fu_826_p4 = ap_const_lv3_0) else "0";

    key_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, tmp_4_fu_577_p1, tmp_8_fu_598_p1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            key_address0 <= tmp_8_fu_598_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            key_address0 <= tmp_4_fu_577_p1(4 - 1 downto 0);
        else 
            key_address0 <= "XXXX";
        end if; 
    end process;


    key_address1_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, tmp_6_fu_588_p1, ap_sig_cseq_ST_st3_fsm_2, tmp_2_fu_608_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            key_address1 <= tmp_2_fu_608_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            key_address1 <= tmp_6_fu_588_p1(4 - 1 downto 0);
        else 
            key_address1 <= "XXXX";
        end if; 
    end process;


    key_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            key_ce0 <= ap_const_logic_1;
        else 
            key_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    key_ce1_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            key_ce1 <= ap_const_logic_1;
        else 
            key_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    newSel5_fu_879_p3 <= 
        s_box_q0 when (sel_tmp_fu_842_p2(0) = '1') else 
        a_2_read_assign_reg_407;
    newSel_fu_863_p3 <= 
        a_3_read_assign_reg_397 when (sel_tmp_fu_842_p2(0) = '1') else 
        s_box_q0;
    or_cond_fu_857_p2 <= (sel_tmp2_fu_852_p2 or sel_tmp8_fu_847_p2);
    p_0_i_24_fu_965_p2 <= (tmp_18_i_fu_957_p3 xor p_i_reg_483);
    s_box_address0 <= tmp_1_i_fu_801_p1(8 - 1 downto 0);

    s_box_ce0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            s_box_ce0 <= ap_const_logic_1;
        else 
            s_box_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sel_tmp2_fu_852_p2 <= "1" when (tmp_45_reg_1302 = ap_const_lv2_0) else "0";
    sel_tmp2_i_fu_704_p2 <= "1" when (i_i2_reg_386 = ap_const_lv2_0) else "0";
    sel_tmp8_fu_847_p2 <= "1" when (tmp_45_reg_1302 = ap_const_lv2_1) else "0";
    sel_tmp_fu_842_p2 <= "1" when (tmp_45_reg_1302 = ap_const_lv2_2) else "0";
    sel_tmp_i_fu_691_p2 <= "1" when (i_i2_reg_386 = ap_const_lv2_1) else "0";
    tmp_0_1_fu_764_p3 <= 
        w_3_read_assign_2_reg_355 when (write_flag_i_reg_344(0) = '1') else 
        tmp_52_reg_1222;
    tmp_0_fu_1025_p2 <= (R_q1 xor tmp_3_6_reg_429);
    tmp_10_fu_627_p2 <= std_logic_vector(signed(ap_const_lv8_FC) + signed(tmp_3_fu_619_p3));
    tmp_11_fu_633_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_627_p2),64));
    tmp_12_fu_638_p2 <= std_logic_vector(signed(ap_const_lv8_FD) + signed(tmp_3_fu_619_p3));
    tmp_13_fu_644_p1 <= std_logic_vector(resize(unsigned(tmp_12_fu_638_p2),64));
    tmp_14_fu_649_p2 <= std_logic_vector(signed(ap_const_lv8_FE) + signed(tmp_3_reg_1198));
    tmp_15_fu_654_p1 <= std_logic_vector(resize(unsigned(tmp_14_fu_649_p2),64));
    tmp_16_fu_659_p2 <= std_logic_vector(signed(ap_const_lv8_FF) + signed(tmp_3_reg_1198));
    tmp_17_fu_664_p1 <= std_logic_vector(resize(unsigned(tmp_16_fu_659_p2),64));
    tmp_18_fu_673_p2 <= "1" when (tmp_44_fu_669_p1 = ap_const_lv2_0) else "0";
    tmp_18_i_fu_957_p3 <= 
        p_0_i_reg_507 when (tmp_48_fu_953_p1(0) = '1') else 
        ap_const_lv8_0;
    tmp_19_fu_820_p2 <= "1" when (i_assign_fu_806_p4 = ap_const_lv4_1) else "0";
    tmp_1_3_fu_1013_p2 <= (R_q0 xor tmp_3_3_reg_418);
    tmp_1_i_fu_801_p1 <= std_logic_vector(resize(unsigned(tmp_fu_787_p6),64));
    tmp_20_fu_1037_p2 <= std_logic_vector(unsigned(tmp_3_reg_1198) + unsigned(ap_const_lv8_F0));
    tmp_21_fu_1042_p1 <= std_logic_vector(resize(unsigned(tmp_20_fu_1037_p2),64));
    tmp_22_fu_1063_p2 <= (w_q0 xor tmp_0_s_reg_526);
    tmp_23_fu_565_p1 <= i_reg_321(2 - 1 downto 0);
    tmp_24_fu_1095_p1 <= std_logic_vector(resize(unsigned(tmp_3_reg_1198),64));
    tmp_25_fu_1047_p2 <= std_logic_vector(unsigned(tmp_3_reg_1198) + unsigned(ap_const_lv8_F1));
    tmp_26_fu_1052_p1 <= std_logic_vector(resize(unsigned(tmp_25_fu_1047_p2),64));
    tmp_27_fu_1069_p2 <= (w_q1 xor tmp_1_s_reg_517);
    tmp_28_fu_1099_p2 <= (tmp_3_reg_1198 or ap_const_lv8_1);
    tmp_29_fu_1104_p1 <= std_logic_vector(resize(unsigned(tmp_28_fu_1099_p2),64));
    tmp_2_3_fu_1019_p2 <= (R_q1 xor a_2_read_assign_reg_407);
    tmp_2_fu_608_p1 <= std_logic_vector(resize(unsigned(tmp_9_fu_603_p2),64));
    tmp_30_fu_1075_p2 <= std_logic_vector(unsigned(tmp_3_reg_1198) + unsigned(ap_const_lv8_F2));
    tmp_31_fu_1080_p1 <= std_logic_vector(resize(unsigned(tmp_30_fu_1075_p2),64));
    tmp_32_fu_1109_p2 <= (w_q0 xor tmp_2_3_2_reg_544);
    tmp_33_fu_1121_p2 <= (tmp_3_reg_1198 or ap_const_lv8_2);
    tmp_34_fu_1126_p1 <= std_logic_vector(resize(unsigned(tmp_33_fu_1121_p2),64));
    tmp_35_fu_1085_p2 <= std_logic_vector(unsigned(tmp_3_reg_1198) + unsigned(ap_const_lv8_F3));
    tmp_36_fu_1090_p1 <= std_logic_vector(resize(unsigned(tmp_35_fu_1085_p2),64));
    tmp_37_fu_1115_p2 <= (w_q1 xor tmp_3_s_reg_535);
    tmp_38_fu_1131_p2 <= (tmp_3_reg_1198 or ap_const_lv8_3);
    tmp_39_fu_1136_p1 <= std_logic_vector(resize(unsigned(tmp_38_fu_1131_p2),64));
    tmp_3_21_fu_871_p3 <= 
        a_3_read_assign_reg_397 when (or_cond_fu_857_p2(0) = '1') else 
        newSel_fu_863_p3;
    tmp_3_4_fu_887_p3 <= 
        a_2_read_assign_reg_407 when (or_cond_fu_857_p2(0) = '1') else 
        newSel5_fu_879_p3;
    tmp_3_5_fu_895_p3 <= 
        s_box_q0 when (sel_tmp8_fu_847_p2(0) = '1') else 
        tmp_3_3_reg_418;
    tmp_3_7_fu_903_p3 <= 
        tmp_3_3_reg_418 when (sel_tmp2_fu_852_p2(0) = '1') else 
        tmp_3_5_fu_895_p3;
    tmp_3_8_fu_911_p3 <= 
        s_box_q0 when (sel_tmp2_fu_852_p2(0) = '1') else 
        tmp_3_6_reg_429;
    tmp_3_9_fu_1031_p2 <= (R_q0 xor a_3_read_assign_reg_397);
    tmp_3_fu_619_p3 <= (i_1_reg_332 & ap_const_lv2_0);
    tmp_44_fu_669_p1 <= i_1_reg_332(2 - 1 downto 0);
    tmp_45_fu_783_p1 <= i_i_reg_439(2 - 1 downto 0);
    tmp_46_fu_826_p4 <= i_1_reg_332(5 downto 3);
    tmp_47_fu_925_p4 <= i_assign_1_fu_919_p2(7 downto 1);
    tmp_48_fu_953_p1 <= p_i_22_reg_496(1 - 1 downto 0);
    tmp_49_fu_971_p2 <= std_logic_vector(shift_left(unsigned(p_0_i_reg_507),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_4_fu_577_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_569_p3),64));
    tmp_50_fu_977_p3 <= p_0_i_reg_507(7 downto 7);
    tmp_51_fu_999_p4 <= p_i_22_reg_496(4 downto 1);
    tmp_5_fu_582_p2 <= (tmp_s_fu_569_p3 or ap_const_lv4_1);
    tmp_6_fu_588_p1 <= std_logic_vector(resize(unsigned(tmp_5_fu_582_p2),64));
    tmp_7_fu_593_p2 <= (tmp_s_reg_1149 or ap_const_lv4_2);
    tmp_8_fu_598_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_593_p2),64));
    tmp_9_fu_603_p2 <= (tmp_s_reg_1149 or ap_const_lv4_3);
    tmp_fu_787_p5 <= i_i_reg_439(2 - 1 downto 0);
    tmp_s_fu_569_p3 <= (tmp_23_fu_565_p1 & ap_const_lv2_0);
    w_3_read_assign_1_fu_710_p3 <= 
        tmp_1_1_reg_376 when (sel_tmp2_i_fu_704_p2(0) = '1') else 
        w_3_read_assign_fu_697_p3;
    w_3_read_assign_3_fu_724_p3 <= 
        tmp_1_1_reg_376 when (sel_tmp2_i_fu_704_p2(0) = '1') else 
        w_3_read_assign_2_reg_355;
    w_3_read_assign_4_fu_732_p3 <= 
        tmp_2_1_reg_366 when (sel_tmp_i_fu_691_p2(0) = '1') else 
        w_3_read_assign_1_fu_710_p3;
    w_3_read_assign_5_fu_740_p3 <= 
        tmp_2_1_reg_366 when (sel_tmp2_i_fu_704_p2(0) = '1') else 
        w_3_read_assign_4_fu_732_p3;
    w_3_read_assign_6_fu_748_p3 <= 
        w_3_read_assign_1_fu_710_p3 when (sel_tmp_i_fu_691_p2(0) = '1') else 
        tmp_1_1_reg_376;
    w_3_read_assign_7_fu_756_p3 <= 
        tmp_1_1_reg_376 when (sel_tmp2_i_fu_704_p2(0) = '1') else 
        w_3_read_assign_6_fu_748_p3;
    w_3_read_assign_fu_697_p3 <= 
        tmp_2_1_reg_366 when (sel_tmp_i_fu_691_p2(0) = '1') else 
        tmp_3_1_reg_1251;

    w_address0_assign_proc : process(tmp_4_reg_1155, tmp_8_reg_1175, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st18_fsm_17, tmp_11_fu_633_p1, tmp_15_fu_654_p1, tmp_21_fu_1042_p1, tmp_31_fu_1080_p1, tmp_24_fu_1095_p1, tmp_34_fu_1126_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            w_address0 <= tmp_34_fu_1126_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            w_address0 <= tmp_24_fu_1095_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            w_address0 <= tmp_8_reg_1175(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            w_address0 <= tmp_4_reg_1155(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            w_address0 <= tmp_31_fu_1080_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            w_address0 <= tmp_21_fu_1042_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            w_address0 <= tmp_15_fu_654_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            w_address0 <= tmp_11_fu_633_p1(8 - 1 downto 0);
        else 
            w_address0 <= "XXXXXXXX";
        end if; 
    end process;


    w_address1_assign_proc : process(tmp_6_reg_1165, ap_sig_cseq_ST_st3_fsm_2, tmp_2_reg_1185, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st18_fsm_17, tmp_13_fu_644_p1, tmp_17_fu_664_p1, tmp_26_fu_1052_p1, tmp_36_fu_1090_p1, tmp_29_fu_1104_p1, tmp_39_fu_1136_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            w_address1 <= tmp_39_fu_1136_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            w_address1 <= tmp_29_fu_1104_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            w_address1 <= tmp_2_reg_1185(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            w_address1 <= tmp_6_reg_1165(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            w_address1 <= tmp_36_fu_1090_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            w_address1 <= tmp_26_fu_1052_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            w_address1 <= tmp_17_fu_664_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            w_address1 <= tmp_13_fu_644_p1(8 - 1 downto 0);
        else 
            w_address1 <= "XXXXXXXX";
        end if; 
    end process;


    w_ce0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st18_fsm_17)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17))) then 
            w_ce0 <= ap_const_logic_1;
        else 
            w_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w_ce1_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st18_fsm_17)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17))) then 
            w_ce1 <= ap_const_logic_1;
        else 
            w_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    w_d0_assign_proc : process(key_q0, ap_sig_cseq_ST_st3_fsm_2, tmp_22_reg_1412, tmp_32_reg_1432, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st18_fsm_17)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            w_d0 <= tmp_32_reg_1432;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            w_d0 <= tmp_22_reg_1412;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            w_d0 <= key_q0;
        else 
            w_d0 <= "XXXXXXXX";
        end if; 
    end process;


    w_d1_assign_proc : process(key_q1, ap_sig_cseq_ST_st3_fsm_2, tmp_27_reg_1417, ap_sig_cseq_ST_st17_fsm_16, tmp_37_reg_1437, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st18_fsm_17)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            w_d1 <= tmp_37_reg_1437;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            w_d1 <= tmp_27_reg_1417;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            w_d1 <= key_q1;
        else 
            w_d1 <= "XXXXXXXX";
        end if; 
    end process;


    w_we0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st18_fsm_17)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17))) then 
            w_we0 <= ap_const_logic_1;
        else 
            w_we0 <= ap_const_logic_0;
        end if; 
    end process;


    w_we1_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st18_fsm_17)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17))) then 
            w_we1 <= ap_const_logic_1;
        else 
            w_we1 <= ap_const_logic_0;
        end if; 
    end process;

    write_flag_1_i_fu_718_p2 <= (sel_tmp2_i_fu_704_p2 or write_flag_i_reg_344);
end behav;

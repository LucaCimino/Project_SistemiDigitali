// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "single_block_AES_encrypt_aes_cipher.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic single_block_AES_encrypt_aes_cipher::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic single_block_AES_encrypt_aes_cipher::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st1_fsm_0 = "1";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st2_fsm_1 = "10";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st3_fsm_2 = "100";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st4_fsm_3 = "1000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st5_fsm_4 = "10000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st6_fsm_5 = "100000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> single_block_AES_encrypt_aes_cipher::ap_const_lv1_1 = "1";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_1 = "1";
const sc_lv<1> single_block_AES_encrypt_aes_cipher::ap_const_lv1_0 = "0";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_2 = "10";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_B = "1011";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_12 = "10010";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_13 = "10011";
const sc_lv<3> single_block_AES_encrypt_aes_cipher::ap_const_lv3_0 = "000";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_3 = "11";
const sc_lv<4> single_block_AES_encrypt_aes_cipher::ap_const_lv4_1 = "1";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_4 = "100";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_C = "1100";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_11 = "10001";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_14 = "10100";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_9 = "1001";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_A = "1010";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_10 = "10000";
const sc_lv<6> single_block_AES_encrypt_aes_cipher::ap_const_lv6_0 = "000000";
const sc_lv<6> single_block_AES_encrypt_aes_cipher::ap_const_lv6_A = "1010";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_7 = "111";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_E = "1110";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_8 = "1000";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_F = "1111";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_5 = "101";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_6 = "110";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_D = "1101";
const sc_lv<3> single_block_AES_encrypt_aes_cipher::ap_const_lv3_4 = "100";
const sc_lv<3> single_block_AES_encrypt_aes_cipher::ap_const_lv3_1 = "1";
const sc_lv<2> single_block_AES_encrypt_aes_cipher::ap_const_lv2_0 = "00";
const sc_lv<4> single_block_AES_encrypt_aes_cipher::ap_const_lv4_A = "1010";

single_block_AES_encrypt_aes_cipher::single_block_AES_encrypt_aes_cipher(sc_module_name name) : sc_module(name), mVcdFile(0) {
    state_U = new single_block_AES_encrypt_aes_cipher_state("state_U");
    state_U->clk(ap_clk);
    state_U->reset(ap_rst);
    state_U->address0(state_address0);
    state_U->ce0(state_ce0);
    state_U->we0(state_we0);
    state_U->d0(state_d0);
    state_U->q0(state_q0);
    state_U->address1(grp_single_block_AES_encrypt_add_round_key_fu_153_state_address1);
    state_U->ce1(state_ce1);
    state_U->we1(state_we1);
    state_U->d1(grp_single_block_AES_encrypt_add_round_key_fu_153_state_d1);
    state_U->q1(state_q1);
    grp_single_block_AES_encrypt_mix_columns_fu_148 = new single_block_AES_encrypt_mix_columns("grp_single_block_AES_encrypt_mix_columns_fu_148");
    grp_single_block_AES_encrypt_mix_columns_fu_148->ap_clk(ap_clk);
    grp_single_block_AES_encrypt_mix_columns_fu_148->ap_rst(ap_rst);
    grp_single_block_AES_encrypt_mix_columns_fu_148->ap_start(grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start);
    grp_single_block_AES_encrypt_mix_columns_fu_148->ap_done(grp_single_block_AES_encrypt_mix_columns_fu_148_ap_done);
    grp_single_block_AES_encrypt_mix_columns_fu_148->ap_idle(grp_single_block_AES_encrypt_mix_columns_fu_148_ap_idle);
    grp_single_block_AES_encrypt_mix_columns_fu_148->ap_ready(grp_single_block_AES_encrypt_mix_columns_fu_148_ap_ready);
    grp_single_block_AES_encrypt_mix_columns_fu_148->state_address0(grp_single_block_AES_encrypt_mix_columns_fu_148_state_address0);
    grp_single_block_AES_encrypt_mix_columns_fu_148->state_ce0(grp_single_block_AES_encrypt_mix_columns_fu_148_state_ce0);
    grp_single_block_AES_encrypt_mix_columns_fu_148->state_we0(grp_single_block_AES_encrypt_mix_columns_fu_148_state_we0);
    grp_single_block_AES_encrypt_mix_columns_fu_148->state_d0(grp_single_block_AES_encrypt_mix_columns_fu_148_state_d0);
    grp_single_block_AES_encrypt_mix_columns_fu_148->state_q0(state_q0);
    grp_single_block_AES_encrypt_add_round_key_fu_153 = new single_block_AES_encrypt_add_round_key("grp_single_block_AES_encrypt_add_round_key_fu_153");
    grp_single_block_AES_encrypt_add_round_key_fu_153->ap_clk(ap_clk);
    grp_single_block_AES_encrypt_add_round_key_fu_153->ap_rst(ap_rst);
    grp_single_block_AES_encrypt_add_round_key_fu_153->ap_start(grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start);
    grp_single_block_AES_encrypt_add_round_key_fu_153->ap_done(grp_single_block_AES_encrypt_add_round_key_fu_153_ap_done);
    grp_single_block_AES_encrypt_add_round_key_fu_153->ap_idle(grp_single_block_AES_encrypt_add_round_key_fu_153_ap_idle);
    grp_single_block_AES_encrypt_add_round_key_fu_153->ap_ready(grp_single_block_AES_encrypt_add_round_key_fu_153_ap_ready);
    grp_single_block_AES_encrypt_add_round_key_fu_153->state_address0(grp_single_block_AES_encrypt_add_round_key_fu_153_state_address0);
    grp_single_block_AES_encrypt_add_round_key_fu_153->state_ce0(grp_single_block_AES_encrypt_add_round_key_fu_153_state_ce0);
    grp_single_block_AES_encrypt_add_round_key_fu_153->state_we0(grp_single_block_AES_encrypt_add_round_key_fu_153_state_we0);
    grp_single_block_AES_encrypt_add_round_key_fu_153->state_d0(grp_single_block_AES_encrypt_add_round_key_fu_153_state_d0);
    grp_single_block_AES_encrypt_add_round_key_fu_153->state_q0(state_q0);
    grp_single_block_AES_encrypt_add_round_key_fu_153->state_address1(grp_single_block_AES_encrypt_add_round_key_fu_153_state_address1);
    grp_single_block_AES_encrypt_add_round_key_fu_153->state_ce1(grp_single_block_AES_encrypt_add_round_key_fu_153_state_ce1);
    grp_single_block_AES_encrypt_add_round_key_fu_153->state_we1(grp_single_block_AES_encrypt_add_round_key_fu_153_state_we1);
    grp_single_block_AES_encrypt_add_round_key_fu_153->state_d1(grp_single_block_AES_encrypt_add_round_key_fu_153_state_d1);
    grp_single_block_AES_encrypt_add_round_key_fu_153->state_q1(state_q1);
    grp_single_block_AES_encrypt_add_round_key_fu_153->w_address0(grp_single_block_AES_encrypt_add_round_key_fu_153_w_address0);
    grp_single_block_AES_encrypt_add_round_key_fu_153->w_ce0(grp_single_block_AES_encrypt_add_round_key_fu_153_w_ce0);
    grp_single_block_AES_encrypt_add_round_key_fu_153->w_q0(w_q0);
    grp_single_block_AES_encrypt_add_round_key_fu_153->w_address1(grp_single_block_AES_encrypt_add_round_key_fu_153_w_address1);
    grp_single_block_AES_encrypt_add_round_key_fu_153->w_ce1(grp_single_block_AES_encrypt_add_round_key_fu_153_w_ce1);
    grp_single_block_AES_encrypt_add_round_key_fu_153->w_q1(w_q1);
    grp_single_block_AES_encrypt_add_round_key_fu_153->r(grp_single_block_AES_encrypt_add_round_key_fu_153_r);
    grp_single_block_AES_encrypt_shift_rows_fu_163 = new single_block_AES_encrypt_shift_rows("grp_single_block_AES_encrypt_shift_rows_fu_163");
    grp_single_block_AES_encrypt_shift_rows_fu_163->ap_clk(ap_clk);
    grp_single_block_AES_encrypt_shift_rows_fu_163->ap_rst(ap_rst);
    grp_single_block_AES_encrypt_shift_rows_fu_163->ap_start(grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start);
    grp_single_block_AES_encrypt_shift_rows_fu_163->ap_done(grp_single_block_AES_encrypt_shift_rows_fu_163_ap_done);
    grp_single_block_AES_encrypt_shift_rows_fu_163->ap_idle(grp_single_block_AES_encrypt_shift_rows_fu_163_ap_idle);
    grp_single_block_AES_encrypt_shift_rows_fu_163->ap_ready(grp_single_block_AES_encrypt_shift_rows_fu_163_ap_ready);
    grp_single_block_AES_encrypt_shift_rows_fu_163->state_address0(grp_single_block_AES_encrypt_shift_rows_fu_163_state_address0);
    grp_single_block_AES_encrypt_shift_rows_fu_163->state_ce0(grp_single_block_AES_encrypt_shift_rows_fu_163_state_ce0);
    grp_single_block_AES_encrypt_shift_rows_fu_163->state_we0(grp_single_block_AES_encrypt_shift_rows_fu_163_state_we0);
    grp_single_block_AES_encrypt_shift_rows_fu_163->state_d0(grp_single_block_AES_encrypt_shift_rows_fu_163_state_d0);
    grp_single_block_AES_encrypt_shift_rows_fu_163->state_q0(state_q0);
    grp_single_block_AES_encrypt_sub_bytes_fu_168 = new single_block_AES_encrypt_sub_bytes("grp_single_block_AES_encrypt_sub_bytes_fu_168");
    grp_single_block_AES_encrypt_sub_bytes_fu_168->ap_clk(ap_clk);
    grp_single_block_AES_encrypt_sub_bytes_fu_168->ap_rst(ap_rst);
    grp_single_block_AES_encrypt_sub_bytes_fu_168->ap_start(grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start);
    grp_single_block_AES_encrypt_sub_bytes_fu_168->ap_done(grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_done);
    grp_single_block_AES_encrypt_sub_bytes_fu_168->ap_idle(grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_idle);
    grp_single_block_AES_encrypt_sub_bytes_fu_168->ap_ready(grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_ready);
    grp_single_block_AES_encrypt_sub_bytes_fu_168->state_address0(grp_single_block_AES_encrypt_sub_bytes_fu_168_state_address0);
    grp_single_block_AES_encrypt_sub_bytes_fu_168->state_ce0(grp_single_block_AES_encrypt_sub_bytes_fu_168_state_ce0);
    grp_single_block_AES_encrypt_sub_bytes_fu_168->state_we0(grp_single_block_AES_encrypt_sub_bytes_fu_168_state_we0);
    grp_single_block_AES_encrypt_sub_bytes_fu_168->state_d0(grp_single_block_AES_encrypt_sub_bytes_fu_168_state_d0);
    grp_single_block_AES_encrypt_sub_bytes_fu_168->state_q0(state_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( exitcond1_fu_267_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( exitcond1_fu_267_p2 );

    SC_METHOD(thread_ap_sig_105);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_116);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_132);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_227);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_237);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_247);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_257);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_269);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_278);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_285);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_297);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_311);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_318);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_326);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_333);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_343);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_356);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_363);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_89);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_278 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_285 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_105 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_247 );

    SC_METHOD(thread_ap_sig_cseq_ST_st14_fsm_13);
    sensitive << ( ap_sig_363 );

    SC_METHOD(thread_ap_sig_cseq_ST_st15_fsm_14);
    sensitive << ( ap_sig_318 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_333 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_16);
    sensitive << ( ap_sig_297 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_17);
    sensitive << ( ap_sig_257 );

    SC_METHOD(thread_ap_sig_cseq_ST_st19_fsm_18);
    sensitive << ( ap_sig_116 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_38 );

    SC_METHOD(thread_ap_sig_cseq_ST_st20_fsm_19);
    sensitive << ( ap_sig_132 );

    SC_METHOD(thread_ap_sig_cseq_ST_st21_fsm_20);
    sensitive << ( ap_sig_269 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_72 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_89 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_227 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_237 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_343 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_356 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_311 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_326 );

    SC_METHOD(thread_exitcond1_fu_267_p2);
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( i_1_reg_126 );

    SC_METHOD(thread_exitcond2_fu_250_p2);
    sensitive << ( r_reg_114 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_exitcond3_fu_203_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( j_reg_103 );

    SC_METHOD(thread_exitcond4_fu_175_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_reg_92 );

    SC_METHOD(thread_exitcond_fu_295_p2);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( j_1_reg_137 );

    SC_METHOD(thread_grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start);
    sensitive << ( ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start );

    SC_METHOD(thread_grp_single_block_AES_encrypt_add_round_key_fu_153_r);
    sensitive << ( r_cast3_cast_reg_381 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start);
    sensitive << ( ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start );

    SC_METHOD(thread_grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start);
    sensitive << ( ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start );

    SC_METHOD(thread_grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start);
    sensitive << ( ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start );

    SC_METHOD(thread_i_12_fu_181_p2);
    sensitive << ( i_reg_92 );

    SC_METHOD(thread_i_13_fu_273_p2);
    sensitive << ( i_1_reg_126 );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_42_fu_236_p1 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_j_3_fu_209_p2);
    sensitive << ( j_reg_103 );

    SC_METHOD(thread_j_4_fu_301_p2);
    sensitive << ( j_1_reg_137 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( tmp_50_fu_338_p1 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( state_q0 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_r_1_fu_261_p2);
    sensitive << ( r_reg_114 );

    SC_METHOD(thread_r_cast3_cast_fu_256_p1);
    sensitive << ( r_reg_114 );

    SC_METHOD(thread_state_address0);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( grp_single_block_AES_encrypt_mix_columns_fu_148_state_address0 );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_153_state_address0 );
    sensitive << ( grp_single_block_AES_encrypt_shift_rows_fu_163_state_address0 );
    sensitive << ( grp_single_block_AES_encrypt_sub_bytes_fu_168_state_address0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( tmp_44_fu_246_p1 );
    sensitive << ( tmp_47_fu_316_p1 );

    SC_METHOD(thread_state_ce0);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( grp_single_block_AES_encrypt_mix_columns_fu_148_state_ce0 );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_153_state_ce0 );
    sensitive << ( grp_single_block_AES_encrypt_shift_rows_fu_163_state_ce0 );
    sensitive << ( grp_single_block_AES_encrypt_sub_bytes_fu_168_state_ce0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );

    SC_METHOD(thread_state_ce1);
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_153_state_ce1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_state_d0);
    sensitive << ( in_r_q0 );
    sensitive << ( grp_single_block_AES_encrypt_mix_columns_fu_148_state_d0 );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_153_state_d0 );
    sensitive << ( grp_single_block_AES_encrypt_shift_rows_fu_163_state_d0 );
    sensitive << ( grp_single_block_AES_encrypt_sub_bytes_fu_168_state_d0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );

    SC_METHOD(thread_state_we0);
    sensitive << ( grp_single_block_AES_encrypt_mix_columns_fu_148_state_we0 );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_153_state_we0 );
    sensitive << ( grp_single_block_AES_encrypt_shift_rows_fu_163_state_we0 );
    sensitive << ( grp_single_block_AES_encrypt_sub_bytes_fu_168_state_we0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );

    SC_METHOD(thread_state_we1);
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_153_state_we1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_tmp_40_fu_223_p3);
    sensitive << ( tmp_55_fu_219_p1 );

    SC_METHOD(thread_tmp_41_fu_231_p2);
    sensitive << ( tmp_cast_reg_350 );
    sensitive << ( tmp_40_fu_223_p3 );

    SC_METHOD(thread_tmp_42_fu_236_p1);
    sensitive << ( tmp_41_fu_231_p2 );

    SC_METHOD(thread_tmp_43_fu_241_p2);
    sensitive << ( tmp_s_reg_355 );
    sensitive << ( tmp_63_cast_fu_215_p1 );

    SC_METHOD(thread_tmp_44_fu_246_p1);
    sensitive << ( tmp_43_reg_373 );

    SC_METHOD(thread_tmp_45_fu_287_p3);
    sensitive << ( tmp_56_fu_283_p1 );

    SC_METHOD(thread_tmp_46_fu_311_p2);
    sensitive << ( tmp_45_reg_404 );
    sensitive << ( tmp_71_cast_fu_307_p1 );

    SC_METHOD(thread_tmp_47_fu_316_p1);
    sensitive << ( tmp_46_fu_311_p2 );

    SC_METHOD(thread_tmp_48_fu_325_p3);
    sensitive << ( tmp_57_fu_321_p1 );

    SC_METHOD(thread_tmp_49_fu_333_p2);
    sensitive << ( tmp_69_cast_reg_399 );
    sensitive << ( tmp_48_fu_325_p3 );

    SC_METHOD(thread_tmp_50_fu_338_p1);
    sensitive << ( tmp_49_reg_422 );

    SC_METHOD(thread_tmp_55_fu_219_p1);
    sensitive << ( j_reg_103 );

    SC_METHOD(thread_tmp_56_fu_283_p1);
    sensitive << ( i_1_reg_126 );

    SC_METHOD(thread_tmp_57_fu_321_p1);
    sensitive << ( j_1_reg_137 );

    SC_METHOD(thread_tmp_63_cast_fu_215_p1);
    sensitive << ( j_reg_103 );

    SC_METHOD(thread_tmp_69_cast_fu_279_p1);
    sensitive << ( i_1_reg_126 );

    SC_METHOD(thread_tmp_71_cast_fu_307_p1);
    sensitive << ( j_1_reg_137 );

    SC_METHOD(thread_tmp_cast_fu_187_p1);
    sensitive << ( i_reg_92 );

    SC_METHOD(thread_tmp_fu_191_p1);
    sensitive << ( i_reg_92 );

    SC_METHOD(thread_tmp_s_fu_195_p3);
    sensitive << ( tmp_fu_191_p1 );

    SC_METHOD(thread_w_address0);
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_153_w_address0 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_w_address1);
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_153_w_address1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_w_ce0);
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_153_w_ce0 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_w_ce1);
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_153_w_ce1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond4_fu_175_p2 );
    sensitive << ( exitcond3_fu_203_p2 );
    sensitive << ( exitcond1_fu_267_p2 );
    sensitive << ( exitcond_fu_295_p2 );
    sensitive << ( grp_single_block_AES_encrypt_mix_columns_fu_148_ap_done );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_153_ap_done );
    sensitive << ( grp_single_block_AES_encrypt_shift_rows_fu_163_ap_done );
    sensitive << ( grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_done );
    sensitive << ( exitcond2_fu_250_p2 );

    ap_CS_fsm = "000000000000000000001";
    ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start = SC_LOGIC_0;
    ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start = SC_LOGIC_0;
    ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start = SC_LOGIC_0;
    ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "single_block_AES_encrypt_aes_cipher_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, w_address0, "(port)w_address0");
    sc_trace(mVcdFile, w_ce0, "(port)w_ce0");
    sc_trace(mVcdFile, w_q0, "(port)w_q0");
    sc_trace(mVcdFile, w_address1, "(port)w_address1");
    sc_trace(mVcdFile, w_ce1, "(port)w_ce1");
    sc_trace(mVcdFile, w_q1, "(port)w_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_38, "ap_sig_38");
    sc_trace(mVcdFile, i_12_fu_181_p2, "i_12_fu_181_p2");
    sc_trace(mVcdFile, i_12_reg_345, "i_12_reg_345");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_72, "ap_sig_72");
    sc_trace(mVcdFile, tmp_cast_fu_187_p1, "tmp_cast_fu_187_p1");
    sc_trace(mVcdFile, tmp_cast_reg_350, "tmp_cast_reg_350");
    sc_trace(mVcdFile, exitcond4_fu_175_p2, "exitcond4_fu_175_p2");
    sc_trace(mVcdFile, tmp_s_fu_195_p3, "tmp_s_fu_195_p3");
    sc_trace(mVcdFile, tmp_s_reg_355, "tmp_s_reg_355");
    sc_trace(mVcdFile, j_3_fu_209_p2, "j_3_fu_209_p2");
    sc_trace(mVcdFile, j_3_reg_363, "j_3_reg_363");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_89, "ap_sig_89");
    sc_trace(mVcdFile, exitcond3_fu_203_p2, "exitcond3_fu_203_p2");
    sc_trace(mVcdFile, tmp_43_fu_241_p2, "tmp_43_fu_241_p2");
    sc_trace(mVcdFile, tmp_43_reg_373, "tmp_43_reg_373");
    sc_trace(mVcdFile, r_cast3_cast_fu_256_p1, "r_cast3_cast_fu_256_p1");
    sc_trace(mVcdFile, r_cast3_cast_reg_381, "r_cast3_cast_reg_381");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_105, "ap_sig_105");
    sc_trace(mVcdFile, r_1_fu_261_p2, "r_1_fu_261_p2");
    sc_trace(mVcdFile, r_1_reg_386, "r_1_reg_386");
    sc_trace(mVcdFile, i_13_fu_273_p2, "i_13_fu_273_p2");
    sc_trace(mVcdFile, i_13_reg_394, "i_13_reg_394");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st19_fsm_18, "ap_sig_cseq_ST_st19_fsm_18");
    sc_trace(mVcdFile, ap_sig_116, "ap_sig_116");
    sc_trace(mVcdFile, tmp_69_cast_fu_279_p1, "tmp_69_cast_fu_279_p1");
    sc_trace(mVcdFile, tmp_69_cast_reg_399, "tmp_69_cast_reg_399");
    sc_trace(mVcdFile, exitcond1_fu_267_p2, "exitcond1_fu_267_p2");
    sc_trace(mVcdFile, tmp_45_fu_287_p3, "tmp_45_fu_287_p3");
    sc_trace(mVcdFile, tmp_45_reg_404, "tmp_45_reg_404");
    sc_trace(mVcdFile, j_4_fu_301_p2, "j_4_fu_301_p2");
    sc_trace(mVcdFile, j_4_reg_412, "j_4_reg_412");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st20_fsm_19, "ap_sig_cseq_ST_st20_fsm_19");
    sc_trace(mVcdFile, ap_sig_132, "ap_sig_132");
    sc_trace(mVcdFile, exitcond_fu_295_p2, "exitcond_fu_295_p2");
    sc_trace(mVcdFile, tmp_49_fu_333_p2, "tmp_49_fu_333_p2");
    sc_trace(mVcdFile, tmp_49_reg_422, "tmp_49_reg_422");
    sc_trace(mVcdFile, state_address0, "state_address0");
    sc_trace(mVcdFile, state_ce0, "state_ce0");
    sc_trace(mVcdFile, state_we0, "state_we0");
    sc_trace(mVcdFile, state_d0, "state_d0");
    sc_trace(mVcdFile, state_q0, "state_q0");
    sc_trace(mVcdFile, state_ce1, "state_ce1");
    sc_trace(mVcdFile, state_we1, "state_we1");
    sc_trace(mVcdFile, state_q1, "state_q1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start, "grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_148_ap_done, "grp_single_block_AES_encrypt_mix_columns_fu_148_ap_done");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_148_ap_idle, "grp_single_block_AES_encrypt_mix_columns_fu_148_ap_idle");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_148_ap_ready, "grp_single_block_AES_encrypt_mix_columns_fu_148_ap_ready");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_148_state_address0, "grp_single_block_AES_encrypt_mix_columns_fu_148_state_address0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_148_state_ce0, "grp_single_block_AES_encrypt_mix_columns_fu_148_state_ce0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_148_state_we0, "grp_single_block_AES_encrypt_mix_columns_fu_148_state_we0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_148_state_d0, "grp_single_block_AES_encrypt_mix_columns_fu_148_state_d0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start, "grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_ap_done, "grp_single_block_AES_encrypt_add_round_key_fu_153_ap_done");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_ap_idle, "grp_single_block_AES_encrypt_add_round_key_fu_153_ap_idle");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_ap_ready, "grp_single_block_AES_encrypt_add_round_key_fu_153_ap_ready");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_state_address0, "grp_single_block_AES_encrypt_add_round_key_fu_153_state_address0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_state_ce0, "grp_single_block_AES_encrypt_add_round_key_fu_153_state_ce0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_state_we0, "grp_single_block_AES_encrypt_add_round_key_fu_153_state_we0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_state_d0, "grp_single_block_AES_encrypt_add_round_key_fu_153_state_d0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_state_address1, "grp_single_block_AES_encrypt_add_round_key_fu_153_state_address1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_state_ce1, "grp_single_block_AES_encrypt_add_round_key_fu_153_state_ce1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_state_we1, "grp_single_block_AES_encrypt_add_round_key_fu_153_state_we1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_state_d1, "grp_single_block_AES_encrypt_add_round_key_fu_153_state_d1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_w_address0, "grp_single_block_AES_encrypt_add_round_key_fu_153_w_address0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_w_ce0, "grp_single_block_AES_encrypt_add_round_key_fu_153_w_ce0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_w_address1, "grp_single_block_AES_encrypt_add_round_key_fu_153_w_address1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_w_ce1, "grp_single_block_AES_encrypt_add_round_key_fu_153_w_ce1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_153_r, "grp_single_block_AES_encrypt_add_round_key_fu_153_r");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start, "grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_163_ap_done, "grp_single_block_AES_encrypt_shift_rows_fu_163_ap_done");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_163_ap_idle, "grp_single_block_AES_encrypt_shift_rows_fu_163_ap_idle");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_163_ap_ready, "grp_single_block_AES_encrypt_shift_rows_fu_163_ap_ready");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_163_state_address0, "grp_single_block_AES_encrypt_shift_rows_fu_163_state_address0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_163_state_ce0, "grp_single_block_AES_encrypt_shift_rows_fu_163_state_ce0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_163_state_we0, "grp_single_block_AES_encrypt_shift_rows_fu_163_state_we0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_163_state_d0, "grp_single_block_AES_encrypt_shift_rows_fu_163_state_d0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start, "grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_done, "grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_done");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_idle, "grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_idle");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_ready, "grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_ready");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_168_state_address0, "grp_single_block_AES_encrypt_sub_bytes_fu_168_state_address0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_168_state_ce0, "grp_single_block_AES_encrypt_sub_bytes_fu_168_state_ce0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_168_state_we0, "grp_single_block_AES_encrypt_sub_bytes_fu_168_state_we0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_168_state_d0, "grp_single_block_AES_encrypt_sub_bytes_fu_168_state_d0");
    sc_trace(mVcdFile, i_reg_92, "i_reg_92");
    sc_trace(mVcdFile, j_reg_103, "j_reg_103");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_227, "ap_sig_227");
    sc_trace(mVcdFile, r_reg_114, "r_reg_114");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_237, "ap_sig_237");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_247, "ap_sig_247");
    sc_trace(mVcdFile, i_1_reg_126, "i_1_reg_126");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_17, "ap_sig_cseq_ST_st18_fsm_17");
    sc_trace(mVcdFile, ap_sig_257, "ap_sig_257");
    sc_trace(mVcdFile, j_1_reg_137, "j_1_reg_137");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st21_fsm_20, "ap_sig_cseq_ST_st21_fsm_20");
    sc_trace(mVcdFile, ap_sig_269, "ap_sig_269");
    sc_trace(mVcdFile, ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start, "ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_278, "ap_sig_278");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_285, "ap_sig_285");
    sc_trace(mVcdFile, ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start, "ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_16, "ap_sig_cseq_ST_st17_fsm_16");
    sc_trace(mVcdFile, ap_sig_297, "ap_sig_297");
    sc_trace(mVcdFile, ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start, "ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_311, "ap_sig_311");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st15_fsm_14, "ap_sig_cseq_ST_st15_fsm_14");
    sc_trace(mVcdFile, ap_sig_318, "ap_sig_318");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_326, "ap_sig_326");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_333, "ap_sig_333");
    sc_trace(mVcdFile, ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start, "ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_343, "ap_sig_343");
    sc_trace(mVcdFile, exitcond2_fu_250_p2, "exitcond2_fu_250_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_356, "ap_sig_356");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st14_fsm_13, "ap_sig_cseq_ST_st14_fsm_13");
    sc_trace(mVcdFile, ap_sig_363, "ap_sig_363");
    sc_trace(mVcdFile, tmp_42_fu_236_p1, "tmp_42_fu_236_p1");
    sc_trace(mVcdFile, tmp_44_fu_246_p1, "tmp_44_fu_246_p1");
    sc_trace(mVcdFile, tmp_47_fu_316_p1, "tmp_47_fu_316_p1");
    sc_trace(mVcdFile, tmp_50_fu_338_p1, "tmp_50_fu_338_p1");
    sc_trace(mVcdFile, tmp_fu_191_p1, "tmp_fu_191_p1");
    sc_trace(mVcdFile, tmp_55_fu_219_p1, "tmp_55_fu_219_p1");
    sc_trace(mVcdFile, tmp_40_fu_223_p3, "tmp_40_fu_223_p3");
    sc_trace(mVcdFile, tmp_41_fu_231_p2, "tmp_41_fu_231_p2");
    sc_trace(mVcdFile, tmp_63_cast_fu_215_p1, "tmp_63_cast_fu_215_p1");
    sc_trace(mVcdFile, tmp_56_fu_283_p1, "tmp_56_fu_283_p1");
    sc_trace(mVcdFile, tmp_71_cast_fu_307_p1, "tmp_71_cast_fu_307_p1");
    sc_trace(mVcdFile, tmp_46_fu_311_p2, "tmp_46_fu_311_p2");
    sc_trace(mVcdFile, tmp_57_fu_321_p1, "tmp_57_fu_321_p1");
    sc_trace(mVcdFile, tmp_48_fu_325_p3, "tmp_48_fu_325_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

single_block_AES_encrypt_aes_cipher::~single_block_AES_encrypt_aes_cipher() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete state_U;
    delete grp_single_block_AES_encrypt_mix_columns_fu_148;
    delete grp_single_block_AES_encrypt_add_round_key_fu_153;
    delete grp_single_block_AES_encrypt_shift_rows_fu_163;
    delete grp_single_block_AES_encrypt_sub_bytes_fu_168;
}

void single_block_AES_encrypt_aes_cipher::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
              !esl_seteq<1,1,1>(exitcond4_fu_175_p2.read(), ap_const_lv1_0)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()))) {
            ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_single_block_AES_encrypt_add_round_key_fu_153_ap_ready.read())) {
            ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
            ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_single_block_AES_encrypt_mix_columns_fu_148_ap_ready.read())) {
            ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()))) {
            ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_single_block_AES_encrypt_shift_rows_fu_163_ap_ready.read())) {
            ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_250_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
              !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_250_p2.read())))) {
            ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_ready.read())) {
            ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_295_p2.read()))) {
        i_1_reg_126 = i_13_reg_394.read();
    } else if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_add_round_key_fu_153_ap_done.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        i_1_reg_126 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_203_p2.read()))) {
        i_reg_92 = i_12_reg_345.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_92 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_267_p2.read()))) {
        j_1_reg_137 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        j_1_reg_137 = j_4_reg_412.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_175_p2.read(), ap_const_lv1_0))) {
        j_reg_103 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        j_reg_103 = j_3_reg_363.read();
    }
    if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_add_round_key_fu_153_ap_done.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
            r_reg_114 = r_1_reg_386.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
            r_reg_114 = ap_const_lv4_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        i_12_reg_345 = i_12_fu_181_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        i_13_reg_394 = i_13_fu_273_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        j_3_reg_363 = j_3_fu_209_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        j_4_reg_412 = j_4_fu_301_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        r_1_reg_386 = r_1_fu_261_p2.read();
        r_cast3_cast_reg_381 = r_cast3_cast_fu_256_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_203_p2.read()))) {
        tmp_43_reg_373 = tmp_43_fu_241_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_267_p2.read()))) {
        tmp_45_reg_404 = tmp_45_fu_287_p3.read();
        tmp_69_cast_reg_399 = tmp_69_cast_fu_279_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_295_p2.read()))) {
        tmp_49_reg_422 = tmp_49_fu_333_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(exitcond4_fu_175_p2.read(), ap_const_lv1_0))) {
        tmp_cast_reg_350 = tmp_cast_fu_187_p1.read();
        tmp_s_reg_355 = tmp_s_fu_195_p3.read();
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_267_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_267_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_105() {
    ap_sig_105 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_116() {
    ap_sig_116 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(18, 18));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_132() {
    ap_sig_132 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_227() {
    ap_sig_227 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_237() {
    ap_sig_237 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_247() {
    ap_sig_247 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_257() {
    ap_sig_257 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_269() {
    ap_sig_269 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(20, 20));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_278() {
    ap_sig_278 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_285() {
    ap_sig_285 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_297() {
    ap_sig_297 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_311() {
    ap_sig_311 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_318() {
    ap_sig_318 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_326() {
    ap_sig_326 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_333() {
    ap_sig_333 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_343() {
    ap_sig_343 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_356() {
    ap_sig_356 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_363() {
    ap_sig_363 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_38() {
    ap_sig_38 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_72() {
    ap_sig_72 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_89() {
    ap_sig_89 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_278.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_285.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_105.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_247.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st14_fsm_13() {
    if (ap_sig_363.read()) {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st15_fsm_14() {
    if (ap_sig_318.read()) {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_333.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st17_fsm_16() {
    if (ap_sig_297.read()) {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st18_fsm_17() {
    if (ap_sig_257.read()) {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st19_fsm_18() {
    if (ap_sig_116.read()) {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_38.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st20_fsm_19() {
    if (ap_sig_132.read()) {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st21_fsm_20() {
    if (ap_sig_269.read()) {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_72.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_89.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_227.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_237.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_343.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_356.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_311.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_326.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_exitcond1_fu_267_p2() {
    exitcond1_fu_267_p2 = (!i_1_reg_126.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_126.read() == ap_const_lv3_4);
}

void single_block_AES_encrypt_aes_cipher::thread_exitcond2_fu_250_p2() {
    exitcond2_fu_250_p2 = (!r_reg_114.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(r_reg_114.read() == ap_const_lv4_A);
}

void single_block_AES_encrypt_aes_cipher::thread_exitcond3_fu_203_p2() {
    exitcond3_fu_203_p2 = (!j_reg_103.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_103.read() == ap_const_lv3_4);
}

void single_block_AES_encrypt_aes_cipher::thread_exitcond4_fu_175_p2() {
    exitcond4_fu_175_p2 = (!i_reg_92.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_92.read() == ap_const_lv3_4);
}

void single_block_AES_encrypt_aes_cipher::thread_exitcond_fu_295_p2() {
    exitcond_fu_295_p2 = (!j_1_reg_137.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_137.read() == ap_const_lv3_4);
}

void single_block_AES_encrypt_aes_cipher::thread_grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start() {
    grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start = ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_153_ap_start.read();
}

void single_block_AES_encrypt_aes_cipher::thread_grp_single_block_AES_encrypt_add_round_key_fu_153_r() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        grp_single_block_AES_encrypt_add_round_key_fu_153_r = ap_const_lv6_A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        grp_single_block_AES_encrypt_add_round_key_fu_153_r = r_cast3_cast_reg_381.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        grp_single_block_AES_encrypt_add_round_key_fu_153_r = ap_const_lv6_0;
    } else {
        grp_single_block_AES_encrypt_add_round_key_fu_153_r = "XXXXXX";
    }
}

void single_block_AES_encrypt_aes_cipher::thread_grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start() {
    grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start = ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_148_ap_start.read();
}

void single_block_AES_encrypt_aes_cipher::thread_grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start() {
    grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start = ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_163_ap_start.read();
}

void single_block_AES_encrypt_aes_cipher::thread_grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start() {
    grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start = ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_start.read();
}

void single_block_AES_encrypt_aes_cipher::thread_i_12_fu_181_p2() {
    i_12_fu_181_p2 = (!i_reg_92.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_92.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void single_block_AES_encrypt_aes_cipher::thread_i_13_fu_273_p2() {
    i_13_fu_273_p2 = (!i_1_reg_126.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_1_reg_126.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void single_block_AES_encrypt_aes_cipher::thread_in_r_address0() {
    in_r_address0 =  (sc_lv<4>) (tmp_42_fu_236_p1.read());
}

void single_block_AES_encrypt_aes_cipher::thread_in_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        in_r_ce0 = ap_const_logic_1;
    } else {
        in_r_ce0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_j_3_fu_209_p2() {
    j_3_fu_209_p2 = (!j_reg_103.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_103.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void single_block_AES_encrypt_aes_cipher::thread_j_4_fu_301_p2() {
    j_4_fu_301_p2 = (!j_1_reg_137.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_1_reg_137.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void single_block_AES_encrypt_aes_cipher::thread_out_r_address0() {
    out_r_address0 =  (sc_lv<4>) (tmp_50_fu_338_p1.read());
}

void single_block_AES_encrypt_aes_cipher::thread_out_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_out_r_d0() {
    out_r_d0 = state_q0.read();
}

void single_block_AES_encrypt_aes_cipher::thread_out_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()))) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_r_1_fu_261_p2() {
    r_1_fu_261_p2 = (!r_reg_114.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(r_reg_114.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void single_block_AES_encrypt_aes_cipher::thread_r_cast3_cast_fu_256_p1() {
    r_cast3_cast_fu_256_p1 = esl_zext<6,4>(r_reg_114.read());
}

void single_block_AES_encrypt_aes_cipher::thread_state_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        state_address0 =  (sc_lv<4>) (tmp_44_fu_246_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        state_address0 =  (sc_lv<4>) (tmp_47_fu_316_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()))) {
        state_address0 = grp_single_block_AES_encrypt_sub_bytes_fu_168_state_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        state_address0 = grp_single_block_AES_encrypt_shift_rows_fu_163_state_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_address0 = grp_single_block_AES_encrypt_add_round_key_fu_153_state_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        state_address0 = grp_single_block_AES_encrypt_mix_columns_fu_148_state_address0.read();
    } else {
        state_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void single_block_AES_encrypt_aes_cipher::thread_state_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        state_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()))) {
        state_ce0 = grp_single_block_AES_encrypt_sub_bytes_fu_168_state_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        state_ce0 = grp_single_block_AES_encrypt_shift_rows_fu_163_state_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_ce0 = grp_single_block_AES_encrypt_add_round_key_fu_153_state_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        state_ce0 = grp_single_block_AES_encrypt_mix_columns_fu_148_state_ce0.read();
    } else {
        state_ce0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_state_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_ce1 = grp_single_block_AES_encrypt_add_round_key_fu_153_state_ce1.read();
    } else {
        state_ce1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_state_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        state_d0 = in_r_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()))) {
        state_d0 = grp_single_block_AES_encrypt_sub_bytes_fu_168_state_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        state_d0 = grp_single_block_AES_encrypt_shift_rows_fu_163_state_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_d0 = grp_single_block_AES_encrypt_add_round_key_fu_153_state_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        state_d0 = grp_single_block_AES_encrypt_mix_columns_fu_148_state_d0.read();
    } else {
        state_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void single_block_AES_encrypt_aes_cipher::thread_state_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        state_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()))) {
        state_we0 = grp_single_block_AES_encrypt_sub_bytes_fu_168_state_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        state_we0 = grp_single_block_AES_encrypt_shift_rows_fu_163_state_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_we0 = grp_single_block_AES_encrypt_add_round_key_fu_153_state_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        state_we0 = grp_single_block_AES_encrypt_mix_columns_fu_148_state_we0.read();
    } else {
        state_we0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_state_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_we1 = grp_single_block_AES_encrypt_add_round_key_fu_153_state_we1.read();
    } else {
        state_we1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_40_fu_223_p3() {
    tmp_40_fu_223_p3 = esl_concat<2,2>(tmp_55_fu_219_p1.read(), ap_const_lv2_0);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_41_fu_231_p2() {
    tmp_41_fu_231_p2 = (!tmp_cast_reg_350.read().is_01() || !tmp_40_fu_223_p3.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_cast_reg_350.read()) + sc_biguint<4>(tmp_40_fu_223_p3.read()));
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_42_fu_236_p1() {
    tmp_42_fu_236_p1 = esl_zext<64,4>(tmp_41_fu_231_p2.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_43_fu_241_p2() {
    tmp_43_fu_241_p2 = (!tmp_63_cast_fu_215_p1.read().is_01() || !tmp_s_reg_355.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_63_cast_fu_215_p1.read()) + sc_biguint<4>(tmp_s_reg_355.read()));
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_44_fu_246_p1() {
    tmp_44_fu_246_p1 = esl_zext<64,4>(tmp_43_reg_373.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_45_fu_287_p3() {
    tmp_45_fu_287_p3 = esl_concat<2,2>(tmp_56_fu_283_p1.read(), ap_const_lv2_0);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_46_fu_311_p2() {
    tmp_46_fu_311_p2 = (!tmp_71_cast_fu_307_p1.read().is_01() || !tmp_45_reg_404.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_71_cast_fu_307_p1.read()) + sc_biguint<4>(tmp_45_reg_404.read()));
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_47_fu_316_p1() {
    tmp_47_fu_316_p1 = esl_zext<64,4>(tmp_46_fu_311_p2.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_48_fu_325_p3() {
    tmp_48_fu_325_p3 = esl_concat<2,2>(tmp_57_fu_321_p1.read(), ap_const_lv2_0);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_49_fu_333_p2() {
    tmp_49_fu_333_p2 = (!tmp_69_cast_reg_399.read().is_01() || !tmp_48_fu_325_p3.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_69_cast_reg_399.read()) + sc_biguint<4>(tmp_48_fu_325_p3.read()));
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_50_fu_338_p1() {
    tmp_50_fu_338_p1 = esl_zext<64,4>(tmp_49_reg_422.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_55_fu_219_p1() {
    tmp_55_fu_219_p1 = j_reg_103.read().range(2-1, 0);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_56_fu_283_p1() {
    tmp_56_fu_283_p1 = i_1_reg_126.read().range(2-1, 0);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_57_fu_321_p1() {
    tmp_57_fu_321_p1 = j_1_reg_137.read().range(2-1, 0);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_63_cast_fu_215_p1() {
    tmp_63_cast_fu_215_p1 = esl_zext<4,3>(j_reg_103.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_69_cast_fu_279_p1() {
    tmp_69_cast_fu_279_p1 = esl_zext<4,3>(i_1_reg_126.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_71_cast_fu_307_p1() {
    tmp_71_cast_fu_307_p1 = esl_zext<4,3>(j_1_reg_137.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_cast_fu_187_p1() {
    tmp_cast_fu_187_p1 = esl_zext<4,3>(i_reg_92.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_fu_191_p1() {
    tmp_fu_191_p1 = i_reg_92.read().range(2-1, 0);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_s_fu_195_p3() {
    tmp_s_fu_195_p3 = esl_concat<2,2>(tmp_fu_191_p1.read(), ap_const_lv2_0);
}

void single_block_AES_encrypt_aes_cipher::thread_w_address0() {
    w_address0 = grp_single_block_AES_encrypt_add_round_key_fu_153_w_address0.read();
}

void single_block_AES_encrypt_aes_cipher::thread_w_address1() {
    w_address1 = grp_single_block_AES_encrypt_add_round_key_fu_153_w_address1.read();
}

void single_block_AES_encrypt_aes_cipher::thread_w_ce0() {
    w_ce0 = grp_single_block_AES_encrypt_add_round_key_fu_153_w_ce0.read();
}

void single_block_AES_encrypt_aes_cipher::thread_w_ce1() {
    w_ce1 = grp_single_block_AES_encrypt_add_round_key_fu_153_w_ce1.read();
}

void single_block_AES_encrypt_aes_cipher::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(exitcond4_fu_175_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_203_p2.read())) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_add_round_key_fu_153_ap_done.read())) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 32 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_250_p2.read())) {
                ap_NS_fsm = ap_ST_st14_fsm_13;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 64 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_done.read())) {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_shift_rows_fu_163_ap_done.read())) {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            } else {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_mix_columns_fu_148_ap_done.read())) {
                ap_NS_fsm = ap_ST_st12_fsm_11;
            } else {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_add_round_key_fu_153_ap_done.read())) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st13_fsm_12;
            }
            break;
        case 8192 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_sub_bytes_fu_168_ap_done.read())) {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            } else {
                ap_NS_fsm = ap_ST_st14_fsm_13;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_shift_rows_fu_163_ap_done.read())) {
                ap_NS_fsm = ap_ST_st17_fsm_16;
            } else {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_add_round_key_fu_153_ap_done.read())) {
                ap_NS_fsm = ap_ST_st19_fsm_18;
            } else {
                ap_NS_fsm = ap_ST_st18_fsm_17;
            }
            break;
        case 262144 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_267_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st20_fsm_19;
            }
            break;
        case 524288 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_295_p2.read())) {
                ap_NS_fsm = ap_ST_st21_fsm_20;
            } else {
                ap_NS_fsm = ap_ST_st19_fsm_18;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<21>) ("XXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}


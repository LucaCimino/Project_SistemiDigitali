// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "single_block_AES_encrypt_aes_cipher.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic single_block_AES_encrypt_aes_cipher::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic single_block_AES_encrypt_aes_cipher::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st1_fsm_0 = "1";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st2_fsm_1 = "10";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st3_fsm_2 = "100";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st4_fsm_3 = "1000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st5_fsm_4 = "10000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st6_fsm_5 = "100000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_cipher::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> single_block_AES_encrypt_aes_cipher::ap_const_lv1_1 = "1";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_1 = "1";
const sc_lv<1> single_block_AES_encrypt_aes_cipher::ap_const_lv1_0 = "0";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_2 = "10";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_B = "1011";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_12 = "10010";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_13 = "10011";
const sc_lv<3> single_block_AES_encrypt_aes_cipher::ap_const_lv3_0 = "000";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_3 = "11";
const sc_lv<4> single_block_AES_encrypt_aes_cipher::ap_const_lv4_1 = "1";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_4 = "100";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_C = "1100";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_11 = "10001";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_14 = "10100";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_9 = "1001";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_A = "1010";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_10 = "10000";
const sc_lv<6> single_block_AES_encrypt_aes_cipher::ap_const_lv6_0 = "000000";
const sc_lv<6> single_block_AES_encrypt_aes_cipher::ap_const_lv6_A = "1010";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_7 = "111";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_E = "1110";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_8 = "1000";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_F = "1111";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_5 = "101";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_6 = "110";
const sc_lv<32> single_block_AES_encrypt_aes_cipher::ap_const_lv32_D = "1101";
const sc_lv<3> single_block_AES_encrypt_aes_cipher::ap_const_lv3_4 = "100";
const sc_lv<3> single_block_AES_encrypt_aes_cipher::ap_const_lv3_1 = "1";
const sc_lv<2> single_block_AES_encrypt_aes_cipher::ap_const_lv2_0 = "00";
const sc_lv<4> single_block_AES_encrypt_aes_cipher::ap_const_lv4_2 = "10";
const sc_lv<4> single_block_AES_encrypt_aes_cipher::ap_const_lv4_3 = "11";
const sc_lv<4> single_block_AES_encrypt_aes_cipher::ap_const_lv4_A = "1010";

single_block_AES_encrypt_aes_cipher::single_block_AES_encrypt_aes_cipher(sc_module_name name) : sc_module(name), mVcdFile(0) {
    state_U = new single_block_AES_encrypt_aes_cipher_state("state_U");
    state_U->clk(ap_clk);
    state_U->reset(ap_rst);
    state_U->address0(state_address0);
    state_U->ce0(state_ce0);
    state_U->we0(state_we0);
    state_U->d0(state_d0);
    state_U->q0(state_q0);
    state_U->address1(state_address1);
    state_U->ce1(state_ce1);
    state_U->we1(state_we1);
    state_U->d1(state_d1);
    state_U->q1(state_q1);
    grp_single_block_AES_encrypt_mix_columns_fu_237 = new single_block_AES_encrypt_mix_columns("grp_single_block_AES_encrypt_mix_columns_fu_237");
    grp_single_block_AES_encrypt_mix_columns_fu_237->ap_clk(ap_clk);
    grp_single_block_AES_encrypt_mix_columns_fu_237->ap_rst(ap_rst);
    grp_single_block_AES_encrypt_mix_columns_fu_237->ap_start(grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start);
    grp_single_block_AES_encrypt_mix_columns_fu_237->ap_done(grp_single_block_AES_encrypt_mix_columns_fu_237_ap_done);
    grp_single_block_AES_encrypt_mix_columns_fu_237->ap_idle(grp_single_block_AES_encrypt_mix_columns_fu_237_ap_idle);
    grp_single_block_AES_encrypt_mix_columns_fu_237->ap_ready(grp_single_block_AES_encrypt_mix_columns_fu_237_ap_ready);
    grp_single_block_AES_encrypt_mix_columns_fu_237->state_address0(grp_single_block_AES_encrypt_mix_columns_fu_237_state_address0);
    grp_single_block_AES_encrypt_mix_columns_fu_237->state_ce0(grp_single_block_AES_encrypt_mix_columns_fu_237_state_ce0);
    grp_single_block_AES_encrypt_mix_columns_fu_237->state_we0(grp_single_block_AES_encrypt_mix_columns_fu_237_state_we0);
    grp_single_block_AES_encrypt_mix_columns_fu_237->state_d0(grp_single_block_AES_encrypt_mix_columns_fu_237_state_d0);
    grp_single_block_AES_encrypt_mix_columns_fu_237->state_q0(state_q0);
    grp_single_block_AES_encrypt_add_round_key_fu_242 = new single_block_AES_encrypt_add_round_key("grp_single_block_AES_encrypt_add_round_key_fu_242");
    grp_single_block_AES_encrypt_add_round_key_fu_242->ap_clk(ap_clk);
    grp_single_block_AES_encrypt_add_round_key_fu_242->ap_rst(ap_rst);
    grp_single_block_AES_encrypt_add_round_key_fu_242->ap_start(grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start);
    grp_single_block_AES_encrypt_add_round_key_fu_242->ap_done(grp_single_block_AES_encrypt_add_round_key_fu_242_ap_done);
    grp_single_block_AES_encrypt_add_round_key_fu_242->ap_idle(grp_single_block_AES_encrypt_add_round_key_fu_242_ap_idle);
    grp_single_block_AES_encrypt_add_round_key_fu_242->ap_ready(grp_single_block_AES_encrypt_add_round_key_fu_242_ap_ready);
    grp_single_block_AES_encrypt_add_round_key_fu_242->state_address0(grp_single_block_AES_encrypt_add_round_key_fu_242_state_address0);
    grp_single_block_AES_encrypt_add_round_key_fu_242->state_ce0(grp_single_block_AES_encrypt_add_round_key_fu_242_state_ce0);
    grp_single_block_AES_encrypt_add_round_key_fu_242->state_we0(grp_single_block_AES_encrypt_add_round_key_fu_242_state_we0);
    grp_single_block_AES_encrypt_add_round_key_fu_242->state_d0(grp_single_block_AES_encrypt_add_round_key_fu_242_state_d0);
    grp_single_block_AES_encrypt_add_round_key_fu_242->state_q0(state_q0);
    grp_single_block_AES_encrypt_add_round_key_fu_242->state_address1(grp_single_block_AES_encrypt_add_round_key_fu_242_state_address1);
    grp_single_block_AES_encrypt_add_round_key_fu_242->state_ce1(grp_single_block_AES_encrypt_add_round_key_fu_242_state_ce1);
    grp_single_block_AES_encrypt_add_round_key_fu_242->state_we1(grp_single_block_AES_encrypt_add_round_key_fu_242_state_we1);
    grp_single_block_AES_encrypt_add_round_key_fu_242->state_d1(grp_single_block_AES_encrypt_add_round_key_fu_242_state_d1);
    grp_single_block_AES_encrypt_add_round_key_fu_242->state_q1(state_q1);
    grp_single_block_AES_encrypt_add_round_key_fu_242->w_address0(grp_single_block_AES_encrypt_add_round_key_fu_242_w_address0);
    grp_single_block_AES_encrypt_add_round_key_fu_242->w_ce0(grp_single_block_AES_encrypt_add_round_key_fu_242_w_ce0);
    grp_single_block_AES_encrypt_add_round_key_fu_242->w_q0(w_q0);
    grp_single_block_AES_encrypt_add_round_key_fu_242->w_address1(grp_single_block_AES_encrypt_add_round_key_fu_242_w_address1);
    grp_single_block_AES_encrypt_add_round_key_fu_242->w_ce1(grp_single_block_AES_encrypt_add_round_key_fu_242_w_ce1);
    grp_single_block_AES_encrypt_add_round_key_fu_242->w_q1(w_q1);
    grp_single_block_AES_encrypt_add_round_key_fu_242->r(grp_single_block_AES_encrypt_add_round_key_fu_242_r);
    grp_single_block_AES_encrypt_shift_rows_fu_252 = new single_block_AES_encrypt_shift_rows("grp_single_block_AES_encrypt_shift_rows_fu_252");
    grp_single_block_AES_encrypt_shift_rows_fu_252->ap_clk(ap_clk);
    grp_single_block_AES_encrypt_shift_rows_fu_252->ap_rst(ap_rst);
    grp_single_block_AES_encrypt_shift_rows_fu_252->ap_start(grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start);
    grp_single_block_AES_encrypt_shift_rows_fu_252->ap_done(grp_single_block_AES_encrypt_shift_rows_fu_252_ap_done);
    grp_single_block_AES_encrypt_shift_rows_fu_252->ap_idle(grp_single_block_AES_encrypt_shift_rows_fu_252_ap_idle);
    grp_single_block_AES_encrypt_shift_rows_fu_252->ap_ready(grp_single_block_AES_encrypt_shift_rows_fu_252_ap_ready);
    grp_single_block_AES_encrypt_shift_rows_fu_252->state_address0(grp_single_block_AES_encrypt_shift_rows_fu_252_state_address0);
    grp_single_block_AES_encrypt_shift_rows_fu_252->state_ce0(grp_single_block_AES_encrypt_shift_rows_fu_252_state_ce0);
    grp_single_block_AES_encrypt_shift_rows_fu_252->state_we0(grp_single_block_AES_encrypt_shift_rows_fu_252_state_we0);
    grp_single_block_AES_encrypt_shift_rows_fu_252->state_d0(grp_single_block_AES_encrypt_shift_rows_fu_252_state_d0);
    grp_single_block_AES_encrypt_shift_rows_fu_252->state_q0(state_q0);
    grp_single_block_AES_encrypt_sub_bytes_fu_257 = new single_block_AES_encrypt_sub_bytes("grp_single_block_AES_encrypt_sub_bytes_fu_257");
    grp_single_block_AES_encrypt_sub_bytes_fu_257->ap_clk(ap_clk);
    grp_single_block_AES_encrypt_sub_bytes_fu_257->ap_rst(ap_rst);
    grp_single_block_AES_encrypt_sub_bytes_fu_257->ap_start(grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start);
    grp_single_block_AES_encrypt_sub_bytes_fu_257->ap_done(grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_done);
    grp_single_block_AES_encrypt_sub_bytes_fu_257->ap_idle(grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_idle);
    grp_single_block_AES_encrypt_sub_bytes_fu_257->ap_ready(grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_ready);
    grp_single_block_AES_encrypt_sub_bytes_fu_257->state_address0(grp_single_block_AES_encrypt_sub_bytes_fu_257_state_address0);
    grp_single_block_AES_encrypt_sub_bytes_fu_257->state_ce0(grp_single_block_AES_encrypt_sub_bytes_fu_257_state_ce0);
    grp_single_block_AES_encrypt_sub_bytes_fu_257->state_we0(grp_single_block_AES_encrypt_sub_bytes_fu_257_state_we0);
    grp_single_block_AES_encrypt_sub_bytes_fu_257->state_d0(grp_single_block_AES_encrypt_sub_bytes_fu_257_state_d0);
    grp_single_block_AES_encrypt_sub_bytes_fu_257->state_q0(state_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( exitcond1_fu_378_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( exitcond1_fu_378_p2 );

    SC_METHOD(thread_ap_sig_111);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_122);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_140);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_228);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_238);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_248);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_258);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_266);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_275);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_282);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_294);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_308);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_315);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_323);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_330);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_340);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_353);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_360);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_98);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_275 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_282 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_111 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_248 );

    SC_METHOD(thread_ap_sig_cseq_ST_st14_fsm_13);
    sensitive << ( ap_sig_360 );

    SC_METHOD(thread_ap_sig_cseq_ST_st15_fsm_14);
    sensitive << ( ap_sig_315 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_330 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_16);
    sensitive << ( ap_sig_294 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_17);
    sensitive << ( ap_sig_258 );

    SC_METHOD(thread_ap_sig_cseq_ST_st19_fsm_18);
    sensitive << ( ap_sig_122 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_38 );

    SC_METHOD(thread_ap_sig_cseq_ST_st20_fsm_19);
    sensitive << ( ap_sig_140 );

    SC_METHOD(thread_ap_sig_cseq_ST_st21_fsm_20);
    sensitive << ( ap_sig_266 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_79 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_98 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_228 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_238 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_340 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_353 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_308 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_323 );

    SC_METHOD(thread_exitcond1_fu_378_p2);
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( i_1_reg_225 );

    SC_METHOD(thread_exitcond2_fu_361_p2);
    sensitive << ( r_reg_213 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_exitcond4_fu_264_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_reg_201 );

    SC_METHOD(thread_grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start);
    sensitive << ( ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start );

    SC_METHOD(thread_grp_single_block_AES_encrypt_add_round_key_fu_242_r);
    sensitive << ( r_cast3_cast_reg_517 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start);
    sensitive << ( ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start );

    SC_METHOD(thread_grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start);
    sensitive << ( ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start );

    SC_METHOD(thread_grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start);
    sensitive << ( ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start );

    SC_METHOD(thread_i_7_fu_270_p2);
    sensitive << ( i_reg_201 );

    SC_METHOD(thread_i_8_fu_384_p2);
    sensitive << ( i_1_reg_225 );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_100_fu_276_p1 );
    sensitive << ( tmp_100_2_fu_328_p1 );

    SC_METHOD(thread_in_r_address1);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_100_1_fu_287_p1 );
    sensitive << ( tmp_100_3_fu_336_p1 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_in_r_ce1);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( tmp_110_fu_418_p1 );
    sensitive << ( tmp_110_2_fu_462_p1 );

    SC_METHOD(thread_out_r_address1);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( tmp_110_1_fu_429_p1 );
    sensitive << ( tmp_110_3_fu_470_p1 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_out_r_ce1);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( state_q0 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_out_r_d1);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( state_q1 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_out_r_we1);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_r_1_fu_372_p2);
    sensitive << ( r_reg_213 );

    SC_METHOD(thread_r_cast3_cast_fu_367_p1);
    sensitive << ( r_reg_213 );

    SC_METHOD(thread_state_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( grp_single_block_AES_encrypt_mix_columns_fu_237_state_address0 );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_state_address0 );
    sensitive << ( grp_single_block_AES_encrypt_shift_rows_fu_252_state_address0 );
    sensitive << ( grp_single_block_AES_encrypt_sub_bytes_fu_257_state_address0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( tmp_102_fu_304_p1 );
    sensitive << ( tmp_102_2_fu_346_p1 );
    sensitive << ( tmp_107_fu_402_p1 );
    sensitive << ( tmp_107_2_fu_439_p1 );

    SC_METHOD(thread_state_address1);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_state_address1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( tmp_102_1_fu_315_p1 );
    sensitive << ( tmp_102_3_fu_356_p1 );
    sensitive << ( tmp_107_1_fu_413_p1 );
    sensitive << ( tmp_107_3_fu_449_p1 );

    SC_METHOD(thread_state_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( grp_single_block_AES_encrypt_mix_columns_fu_237_state_ce0 );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_state_ce0 );
    sensitive << ( grp_single_block_AES_encrypt_shift_rows_fu_252_state_ce0 );
    sensitive << ( grp_single_block_AES_encrypt_sub_bytes_fu_257_state_ce0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );

    SC_METHOD(thread_state_ce1);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_state_ce1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_state_d0);
    sensitive << ( in_r_q0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( grp_single_block_AES_encrypt_mix_columns_fu_237_state_d0 );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_state_d0 );
    sensitive << ( grp_single_block_AES_encrypt_shift_rows_fu_252_state_d0 );
    sensitive << ( grp_single_block_AES_encrypt_sub_bytes_fu_257_state_d0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );

    SC_METHOD(thread_state_d1);
    sensitive << ( in_r_q1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_state_d1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_state_we0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( grp_single_block_AES_encrypt_mix_columns_fu_237_state_we0 );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_state_we0 );
    sensitive << ( grp_single_block_AES_encrypt_shift_rows_fu_252_state_we0 );
    sensitive << ( grp_single_block_AES_encrypt_sub_bytes_fu_257_state_we0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );

    SC_METHOD(thread_state_we1);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_state_we1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_tmp_100_1_fu_287_p1);
    sensitive << ( tmp_99_1_fu_281_p2 );

    SC_METHOD(thread_tmp_100_2_fu_328_p1);
    sensitive << ( tmp_99_s_fu_320_p3 );

    SC_METHOD(thread_tmp_100_3_fu_336_p1);
    sensitive << ( tmp_99_3_cast7_fu_333_p1 );

    SC_METHOD(thread_tmp_100_fu_276_p1);
    sensitive << ( i_reg_201 );

    SC_METHOD(thread_tmp_101_1_fu_341_p2);
    sensitive << ( tmp_s_reg_498 );

    SC_METHOD(thread_tmp_101_2_fu_351_p2);
    sensitive << ( tmp_s_reg_498 );

    SC_METHOD(thread_tmp_101_s_fu_309_p2);
    sensitive << ( tmp_s_fu_296_p3 );

    SC_METHOD(thread_tmp_102_1_fu_315_p1);
    sensitive << ( tmp_101_s_fu_309_p2 );

    SC_METHOD(thread_tmp_102_2_fu_346_p1);
    sensitive << ( tmp_101_1_fu_341_p2 );

    SC_METHOD(thread_tmp_102_3_fu_356_p1);
    sensitive << ( tmp_101_2_fu_351_p2 );

    SC_METHOD(thread_tmp_102_fu_304_p1);
    sensitive << ( tmp_s_fu_296_p3 );

    SC_METHOD(thread_tmp_106_1_fu_434_p2);
    sensitive << ( tmp_66_reg_535 );

    SC_METHOD(thread_tmp_106_2_fu_444_p2);
    sensitive << ( tmp_66_reg_535 );

    SC_METHOD(thread_tmp_106_s_fu_407_p2);
    sensitive << ( tmp_66_fu_394_p3 );

    SC_METHOD(thread_tmp_107_1_fu_413_p1);
    sensitive << ( tmp_106_s_fu_407_p2 );

    SC_METHOD(thread_tmp_107_2_fu_439_p1);
    sensitive << ( tmp_106_1_fu_434_p2 );

    SC_METHOD(thread_tmp_107_3_fu_449_p1);
    sensitive << ( tmp_106_2_fu_444_p2 );

    SC_METHOD(thread_tmp_107_fu_402_p1);
    sensitive << ( tmp_66_fu_394_p3 );

    SC_METHOD(thread_tmp_109_1_fu_423_p2);
    sensitive << ( i_1_reg_225 );

    SC_METHOD(thread_tmp_109_3_cast6_fu_467_p1);
    sensitive << ( tmp_109_1_reg_551 );

    SC_METHOD(thread_tmp_109_s_fu_454_p3);
    sensitive << ( i_1_reg_225 );

    SC_METHOD(thread_tmp_110_1_fu_429_p1);
    sensitive << ( tmp_109_1_fu_423_p2 );

    SC_METHOD(thread_tmp_110_2_fu_462_p1);
    sensitive << ( tmp_109_s_fu_454_p3 );

    SC_METHOD(thread_tmp_110_3_fu_470_p1);
    sensitive << ( tmp_109_3_cast6_fu_467_p1 );

    SC_METHOD(thread_tmp_110_fu_418_p1);
    sensitive << ( i_1_reg_225 );

    SC_METHOD(thread_tmp_30_fu_390_p1);
    sensitive << ( i_1_reg_225 );

    SC_METHOD(thread_tmp_66_fu_394_p3);
    sensitive << ( tmp_30_fu_390_p1 );

    SC_METHOD(thread_tmp_99_1_fu_281_p2);
    sensitive << ( i_reg_201 );

    SC_METHOD(thread_tmp_99_3_cast7_fu_333_p1);
    sensitive << ( tmp_99_1_reg_488 );

    SC_METHOD(thread_tmp_99_s_fu_320_p3);
    sensitive << ( i_reg_201 );

    SC_METHOD(thread_tmp_fu_292_p1);
    sensitive << ( i_reg_201 );

    SC_METHOD(thread_tmp_s_fu_296_p3);
    sensitive << ( tmp_fu_292_p1 );

    SC_METHOD(thread_w_address0);
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_w_address0 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_w_address1);
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_w_address1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_w_ce0);
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_w_ce0 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_w_ce1);
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_w_ce1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond4_fu_264_p2 );
    sensitive << ( exitcond1_fu_378_p2 );
    sensitive << ( grp_single_block_AES_encrypt_mix_columns_fu_237_ap_done );
    sensitive << ( grp_single_block_AES_encrypt_add_round_key_fu_242_ap_done );
    sensitive << ( grp_single_block_AES_encrypt_shift_rows_fu_252_ap_done );
    sensitive << ( grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_done );
    sensitive << ( exitcond2_fu_361_p2 );

    ap_CS_fsm = "000000000000000000001";
    ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start = SC_LOGIC_0;
    ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start = SC_LOGIC_0;
    ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start = SC_LOGIC_0;
    ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "single_block_AES_encrypt_aes_cipher_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
    sc_trace(mVcdFile, in_r_address1, "(port)in_r_address1");
    sc_trace(mVcdFile, in_r_ce1, "(port)in_r_ce1");
    sc_trace(mVcdFile, in_r_q1, "(port)in_r_q1");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, out_r_address1, "(port)out_r_address1");
    sc_trace(mVcdFile, out_r_ce1, "(port)out_r_ce1");
    sc_trace(mVcdFile, out_r_we1, "(port)out_r_we1");
    sc_trace(mVcdFile, out_r_d1, "(port)out_r_d1");
    sc_trace(mVcdFile, w_address0, "(port)w_address0");
    sc_trace(mVcdFile, w_ce0, "(port)w_ce0");
    sc_trace(mVcdFile, w_q0, "(port)w_q0");
    sc_trace(mVcdFile, w_address1, "(port)w_address1");
    sc_trace(mVcdFile, w_ce1, "(port)w_ce1");
    sc_trace(mVcdFile, w_q1, "(port)w_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_38, "ap_sig_38");
    sc_trace(mVcdFile, i_7_fu_270_p2, "i_7_fu_270_p2");
    sc_trace(mVcdFile, i_7_reg_478, "i_7_reg_478");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_79, "ap_sig_79");
    sc_trace(mVcdFile, exitcond4_fu_264_p2, "exitcond4_fu_264_p2");
    sc_trace(mVcdFile, tmp_99_1_fu_281_p2, "tmp_99_1_fu_281_p2");
    sc_trace(mVcdFile, tmp_99_1_reg_488, "tmp_99_1_reg_488");
    sc_trace(mVcdFile, tmp_s_fu_296_p3, "tmp_s_fu_296_p3");
    sc_trace(mVcdFile, tmp_s_reg_498, "tmp_s_reg_498");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_98, "ap_sig_98");
    sc_trace(mVcdFile, r_cast3_cast_fu_367_p1, "r_cast3_cast_fu_367_p1");
    sc_trace(mVcdFile, r_cast3_cast_reg_517, "r_cast3_cast_reg_517");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_111, "ap_sig_111");
    sc_trace(mVcdFile, r_1_fu_372_p2, "r_1_fu_372_p2");
    sc_trace(mVcdFile, r_1_reg_522, "r_1_reg_522");
    sc_trace(mVcdFile, i_8_fu_384_p2, "i_8_fu_384_p2");
    sc_trace(mVcdFile, i_8_reg_530, "i_8_reg_530");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st19_fsm_18, "ap_sig_cseq_ST_st19_fsm_18");
    sc_trace(mVcdFile, ap_sig_122, "ap_sig_122");
    sc_trace(mVcdFile, tmp_66_fu_394_p3, "tmp_66_fu_394_p3");
    sc_trace(mVcdFile, tmp_66_reg_535, "tmp_66_reg_535");
    sc_trace(mVcdFile, exitcond1_fu_378_p2, "exitcond1_fu_378_p2");
    sc_trace(mVcdFile, tmp_109_1_fu_423_p2, "tmp_109_1_fu_423_p2");
    sc_trace(mVcdFile, tmp_109_1_reg_551, "tmp_109_1_reg_551");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st20_fsm_19, "ap_sig_cseq_ST_st20_fsm_19");
    sc_trace(mVcdFile, ap_sig_140, "ap_sig_140");
    sc_trace(mVcdFile, state_address0, "state_address0");
    sc_trace(mVcdFile, state_ce0, "state_ce0");
    sc_trace(mVcdFile, state_we0, "state_we0");
    sc_trace(mVcdFile, state_d0, "state_d0");
    sc_trace(mVcdFile, state_q0, "state_q0");
    sc_trace(mVcdFile, state_address1, "state_address1");
    sc_trace(mVcdFile, state_ce1, "state_ce1");
    sc_trace(mVcdFile, state_we1, "state_we1");
    sc_trace(mVcdFile, state_d1, "state_d1");
    sc_trace(mVcdFile, state_q1, "state_q1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start, "grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_237_ap_done, "grp_single_block_AES_encrypt_mix_columns_fu_237_ap_done");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_237_ap_idle, "grp_single_block_AES_encrypt_mix_columns_fu_237_ap_idle");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_237_ap_ready, "grp_single_block_AES_encrypt_mix_columns_fu_237_ap_ready");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_237_state_address0, "grp_single_block_AES_encrypt_mix_columns_fu_237_state_address0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_237_state_ce0, "grp_single_block_AES_encrypt_mix_columns_fu_237_state_ce0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_237_state_we0, "grp_single_block_AES_encrypt_mix_columns_fu_237_state_we0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_mix_columns_fu_237_state_d0, "grp_single_block_AES_encrypt_mix_columns_fu_237_state_d0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start, "grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_ap_done, "grp_single_block_AES_encrypt_add_round_key_fu_242_ap_done");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_ap_idle, "grp_single_block_AES_encrypt_add_round_key_fu_242_ap_idle");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_ap_ready, "grp_single_block_AES_encrypt_add_round_key_fu_242_ap_ready");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_state_address0, "grp_single_block_AES_encrypt_add_round_key_fu_242_state_address0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_state_ce0, "grp_single_block_AES_encrypt_add_round_key_fu_242_state_ce0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_state_we0, "grp_single_block_AES_encrypt_add_round_key_fu_242_state_we0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_state_d0, "grp_single_block_AES_encrypt_add_round_key_fu_242_state_d0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_state_address1, "grp_single_block_AES_encrypt_add_round_key_fu_242_state_address1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_state_ce1, "grp_single_block_AES_encrypt_add_round_key_fu_242_state_ce1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_state_we1, "grp_single_block_AES_encrypt_add_round_key_fu_242_state_we1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_state_d1, "grp_single_block_AES_encrypt_add_round_key_fu_242_state_d1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_w_address0, "grp_single_block_AES_encrypt_add_round_key_fu_242_w_address0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_w_ce0, "grp_single_block_AES_encrypt_add_round_key_fu_242_w_ce0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_w_address1, "grp_single_block_AES_encrypt_add_round_key_fu_242_w_address1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_w_ce1, "grp_single_block_AES_encrypt_add_round_key_fu_242_w_ce1");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_add_round_key_fu_242_r, "grp_single_block_AES_encrypt_add_round_key_fu_242_r");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start, "grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_252_ap_done, "grp_single_block_AES_encrypt_shift_rows_fu_252_ap_done");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_252_ap_idle, "grp_single_block_AES_encrypt_shift_rows_fu_252_ap_idle");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_252_ap_ready, "grp_single_block_AES_encrypt_shift_rows_fu_252_ap_ready");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_252_state_address0, "grp_single_block_AES_encrypt_shift_rows_fu_252_state_address0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_252_state_ce0, "grp_single_block_AES_encrypt_shift_rows_fu_252_state_ce0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_252_state_we0, "grp_single_block_AES_encrypt_shift_rows_fu_252_state_we0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_shift_rows_fu_252_state_d0, "grp_single_block_AES_encrypt_shift_rows_fu_252_state_d0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start, "grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_done, "grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_done");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_idle, "grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_idle");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_ready, "grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_ready");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_257_state_address0, "grp_single_block_AES_encrypt_sub_bytes_fu_257_state_address0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_257_state_ce0, "grp_single_block_AES_encrypt_sub_bytes_fu_257_state_ce0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_257_state_we0, "grp_single_block_AES_encrypt_sub_bytes_fu_257_state_we0");
    sc_trace(mVcdFile, grp_single_block_AES_encrypt_sub_bytes_fu_257_state_d0, "grp_single_block_AES_encrypt_sub_bytes_fu_257_state_d0");
    sc_trace(mVcdFile, i_reg_201, "i_reg_201");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_228, "ap_sig_228");
    sc_trace(mVcdFile, r_reg_213, "r_reg_213");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_238, "ap_sig_238");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_248, "ap_sig_248");
    sc_trace(mVcdFile, i_1_reg_225, "i_1_reg_225");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_17, "ap_sig_cseq_ST_st18_fsm_17");
    sc_trace(mVcdFile, ap_sig_258, "ap_sig_258");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st21_fsm_20, "ap_sig_cseq_ST_st21_fsm_20");
    sc_trace(mVcdFile, ap_sig_266, "ap_sig_266");
    sc_trace(mVcdFile, ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start, "ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_275, "ap_sig_275");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_282, "ap_sig_282");
    sc_trace(mVcdFile, ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start, "ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_16, "ap_sig_cseq_ST_st17_fsm_16");
    sc_trace(mVcdFile, ap_sig_294, "ap_sig_294");
    sc_trace(mVcdFile, ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start, "ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_308, "ap_sig_308");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st15_fsm_14, "ap_sig_cseq_ST_st15_fsm_14");
    sc_trace(mVcdFile, ap_sig_315, "ap_sig_315");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_323, "ap_sig_323");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_330, "ap_sig_330");
    sc_trace(mVcdFile, ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start, "ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_340, "ap_sig_340");
    sc_trace(mVcdFile, exitcond2_fu_361_p2, "exitcond2_fu_361_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_353, "ap_sig_353");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st14_fsm_13, "ap_sig_cseq_ST_st14_fsm_13");
    sc_trace(mVcdFile, ap_sig_360, "ap_sig_360");
    sc_trace(mVcdFile, tmp_100_fu_276_p1, "tmp_100_fu_276_p1");
    sc_trace(mVcdFile, tmp_100_1_fu_287_p1, "tmp_100_1_fu_287_p1");
    sc_trace(mVcdFile, tmp_102_fu_304_p1, "tmp_102_fu_304_p1");
    sc_trace(mVcdFile, tmp_102_1_fu_315_p1, "tmp_102_1_fu_315_p1");
    sc_trace(mVcdFile, tmp_100_2_fu_328_p1, "tmp_100_2_fu_328_p1");
    sc_trace(mVcdFile, tmp_100_3_fu_336_p1, "tmp_100_3_fu_336_p1");
    sc_trace(mVcdFile, tmp_102_2_fu_346_p1, "tmp_102_2_fu_346_p1");
    sc_trace(mVcdFile, tmp_102_3_fu_356_p1, "tmp_102_3_fu_356_p1");
    sc_trace(mVcdFile, tmp_107_fu_402_p1, "tmp_107_fu_402_p1");
    sc_trace(mVcdFile, tmp_107_1_fu_413_p1, "tmp_107_1_fu_413_p1");
    sc_trace(mVcdFile, tmp_110_fu_418_p1, "tmp_110_fu_418_p1");
    sc_trace(mVcdFile, tmp_110_1_fu_429_p1, "tmp_110_1_fu_429_p1");
    sc_trace(mVcdFile, tmp_107_2_fu_439_p1, "tmp_107_2_fu_439_p1");
    sc_trace(mVcdFile, tmp_107_3_fu_449_p1, "tmp_107_3_fu_449_p1");
    sc_trace(mVcdFile, tmp_110_2_fu_462_p1, "tmp_110_2_fu_462_p1");
    sc_trace(mVcdFile, tmp_110_3_fu_470_p1, "tmp_110_3_fu_470_p1");
    sc_trace(mVcdFile, tmp_fu_292_p1, "tmp_fu_292_p1");
    sc_trace(mVcdFile, tmp_101_s_fu_309_p2, "tmp_101_s_fu_309_p2");
    sc_trace(mVcdFile, tmp_99_s_fu_320_p3, "tmp_99_s_fu_320_p3");
    sc_trace(mVcdFile, tmp_99_3_cast7_fu_333_p1, "tmp_99_3_cast7_fu_333_p1");
    sc_trace(mVcdFile, tmp_101_1_fu_341_p2, "tmp_101_1_fu_341_p2");
    sc_trace(mVcdFile, tmp_101_2_fu_351_p2, "tmp_101_2_fu_351_p2");
    sc_trace(mVcdFile, tmp_30_fu_390_p1, "tmp_30_fu_390_p1");
    sc_trace(mVcdFile, tmp_106_s_fu_407_p2, "tmp_106_s_fu_407_p2");
    sc_trace(mVcdFile, tmp_106_1_fu_434_p2, "tmp_106_1_fu_434_p2");
    sc_trace(mVcdFile, tmp_106_2_fu_444_p2, "tmp_106_2_fu_444_p2");
    sc_trace(mVcdFile, tmp_109_s_fu_454_p3, "tmp_109_s_fu_454_p3");
    sc_trace(mVcdFile, tmp_109_3_cast6_fu_467_p1, "tmp_109_3_cast6_fu_467_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

single_block_AES_encrypt_aes_cipher::~single_block_AES_encrypt_aes_cipher() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete state_U;
    delete grp_single_block_AES_encrypt_mix_columns_fu_237;
    delete grp_single_block_AES_encrypt_add_round_key_fu_242;
    delete grp_single_block_AES_encrypt_shift_rows_fu_252;
    delete grp_single_block_AES_encrypt_sub_bytes_fu_257;
}

void single_block_AES_encrypt_aes_cipher::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
              !esl_seteq<1,1,1>(exitcond4_fu_264_p2.read(), ap_const_lv1_0)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()))) {
            ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_single_block_AES_encrypt_add_round_key_fu_242_ap_ready.read())) {
            ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
            ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_single_block_AES_encrypt_mix_columns_fu_237_ap_ready.read())) {
            ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()))) {
            ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_single_block_AES_encrypt_shift_rows_fu_252_ap_ready.read())) {
            ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_361_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
              !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_361_p2.read())))) {
            ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_ready.read())) {
            ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        i_1_reg_225 = i_8_reg_530.read();
    } else if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_add_round_key_fu_242_ap_done.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        i_1_reg_225 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        i_reg_201 = i_7_reg_478.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_201 = ap_const_lv3_0;
    }
    if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_add_round_key_fu_242_ap_done.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
            r_reg_213 = r_1_reg_522.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
            r_reg_213 = ap_const_lv4_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        i_7_reg_478 = i_7_fu_270_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        i_8_reg_530 = i_8_fu_384_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        r_1_reg_522 = r_1_fu_372_p2.read();
        r_cast3_cast_reg_517 = r_cast3_cast_fu_367_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        tmp_109_1_reg_551 = tmp_109_1_fu_423_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_378_p2.read()))) {
        tmp_66_reg_535 = tmp_66_fu_394_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(exitcond4_fu_264_p2.read(), ap_const_lv1_0))) {
        tmp_99_1_reg_488 = tmp_99_1_fu_281_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        tmp_s_reg_498 = tmp_s_fu_296_p3.read();
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_378_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_378_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_111() {
    ap_sig_111 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_122() {
    ap_sig_122 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(18, 18));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_140() {
    ap_sig_140 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_228() {
    ap_sig_228 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_238() {
    ap_sig_238 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_248() {
    ap_sig_248 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_258() {
    ap_sig_258 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_266() {
    ap_sig_266 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(20, 20));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_275() {
    ap_sig_275 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_282() {
    ap_sig_282 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_294() {
    ap_sig_294 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_308() {
    ap_sig_308 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_315() {
    ap_sig_315 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_323() {
    ap_sig_323 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_330() {
    ap_sig_330 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_340() {
    ap_sig_340 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_353() {
    ap_sig_353 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_360() {
    ap_sig_360 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_38() {
    ap_sig_38 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_79() {
    ap_sig_79 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_98() {
    ap_sig_98 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_275.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_282.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_111.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_248.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st14_fsm_13() {
    if (ap_sig_360.read()) {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st15_fsm_14() {
    if (ap_sig_315.read()) {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_330.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st17_fsm_16() {
    if (ap_sig_294.read()) {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st18_fsm_17() {
    if (ap_sig_258.read()) {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st19_fsm_18() {
    if (ap_sig_122.read()) {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_38.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st20_fsm_19() {
    if (ap_sig_140.read()) {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st21_fsm_20() {
    if (ap_sig_266.read()) {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_79.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_98.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_228.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_238.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_340.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_353.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_308.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_323.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_exitcond1_fu_378_p2() {
    exitcond1_fu_378_p2 = (!i_1_reg_225.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_225.read() == ap_const_lv3_4);
}

void single_block_AES_encrypt_aes_cipher::thread_exitcond2_fu_361_p2() {
    exitcond2_fu_361_p2 = (!r_reg_213.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(r_reg_213.read() == ap_const_lv4_A);
}

void single_block_AES_encrypt_aes_cipher::thread_exitcond4_fu_264_p2() {
    exitcond4_fu_264_p2 = (!i_reg_201.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_201.read() == ap_const_lv3_4);
}

void single_block_AES_encrypt_aes_cipher::thread_grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start() {
    grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start = ap_reg_grp_single_block_AES_encrypt_add_round_key_fu_242_ap_start.read();
}

void single_block_AES_encrypt_aes_cipher::thread_grp_single_block_AES_encrypt_add_round_key_fu_242_r() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        grp_single_block_AES_encrypt_add_round_key_fu_242_r = ap_const_lv6_A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        grp_single_block_AES_encrypt_add_round_key_fu_242_r = r_cast3_cast_reg_517.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        grp_single_block_AES_encrypt_add_round_key_fu_242_r = ap_const_lv6_0;
    } else {
        grp_single_block_AES_encrypt_add_round_key_fu_242_r = "XXXXXX";
    }
}

void single_block_AES_encrypt_aes_cipher::thread_grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start() {
    grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start = ap_reg_grp_single_block_AES_encrypt_mix_columns_fu_237_ap_start.read();
}

void single_block_AES_encrypt_aes_cipher::thread_grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start() {
    grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start = ap_reg_grp_single_block_AES_encrypt_shift_rows_fu_252_ap_start.read();
}

void single_block_AES_encrypt_aes_cipher::thread_grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start() {
    grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start = ap_reg_grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_start.read();
}

void single_block_AES_encrypt_aes_cipher::thread_i_7_fu_270_p2() {
    i_7_fu_270_p2 = (!i_reg_201.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_201.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void single_block_AES_encrypt_aes_cipher::thread_i_8_fu_384_p2() {
    i_8_fu_384_p2 = (!i_1_reg_225.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_1_reg_225.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void single_block_AES_encrypt_aes_cipher::thread_in_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        in_r_address0 =  (sc_lv<4>) (tmp_100_2_fu_328_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        in_r_address0 =  (sc_lv<4>) (tmp_100_fu_276_p1.read());
    } else {
        in_r_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void single_block_AES_encrypt_aes_cipher::thread_in_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        in_r_address1 =  (sc_lv<4>) (tmp_100_3_fu_336_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        in_r_address1 =  (sc_lv<4>) (tmp_100_1_fu_287_p1.read());
    } else {
        in_r_address1 =  (sc_lv<4>) ("XXXX");
    }
}

void single_block_AES_encrypt_aes_cipher::thread_in_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()))) {
        in_r_ce0 = ap_const_logic_1;
    } else {
        in_r_ce0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_in_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()))) {
        in_r_ce1 = ap_const_logic_1;
    } else {
        in_r_ce1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_out_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        out_r_address0 =  (sc_lv<4>) (tmp_110_2_fu_462_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        out_r_address0 =  (sc_lv<4>) (tmp_110_fu_418_p1.read());
    } else {
        out_r_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void single_block_AES_encrypt_aes_cipher::thread_out_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        out_r_address1 =  (sc_lv<4>) (tmp_110_3_fu_470_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        out_r_address1 =  (sc_lv<4>) (tmp_110_1_fu_429_p1.read());
    } else {
        out_r_address1 =  (sc_lv<4>) ("XXXX");
    }
}

void single_block_AES_encrypt_aes_cipher::thread_out_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()))) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_out_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()))) {
        out_r_ce1 = ap_const_logic_1;
    } else {
        out_r_ce1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_out_r_d0() {
    out_r_d0 = state_q0.read();
}

void single_block_AES_encrypt_aes_cipher::thread_out_r_d1() {
    out_r_d1 = state_q1.read();
}

void single_block_AES_encrypt_aes_cipher::thread_out_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()))) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_out_r_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()))) {
        out_r_we1 = ap_const_logic_1;
    } else {
        out_r_we1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_r_1_fu_372_p2() {
    r_1_fu_372_p2 = (!r_reg_213.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(r_reg_213.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void single_block_AES_encrypt_aes_cipher::thread_r_cast3_cast_fu_367_p1() {
    r_cast3_cast_fu_367_p1 = esl_zext<6,4>(r_reg_213.read());
}

void single_block_AES_encrypt_aes_cipher::thread_state_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        state_address0 =  (sc_lv<4>) (tmp_102_2_fu_346_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        state_address0 =  (sc_lv<4>) (tmp_102_fu_304_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        state_address0 =  (sc_lv<4>) (tmp_107_2_fu_439_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        state_address0 =  (sc_lv<4>) (tmp_107_fu_402_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()))) {
        state_address0 = grp_single_block_AES_encrypt_sub_bytes_fu_257_state_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        state_address0 = grp_single_block_AES_encrypt_shift_rows_fu_252_state_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_address0 = grp_single_block_AES_encrypt_add_round_key_fu_242_state_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        state_address0 = grp_single_block_AES_encrypt_mix_columns_fu_237_state_address0.read();
    } else {
        state_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void single_block_AES_encrypt_aes_cipher::thread_state_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        state_address1 =  (sc_lv<4>) (tmp_102_3_fu_356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        state_address1 =  (sc_lv<4>) (tmp_102_1_fu_315_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        state_address1 =  (sc_lv<4>) (tmp_107_3_fu_449_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        state_address1 =  (sc_lv<4>) (tmp_107_1_fu_413_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_address1 = grp_single_block_AES_encrypt_add_round_key_fu_242_state_address1.read();
    } else {
        state_address1 =  (sc_lv<4>) ("XXXX");
    }
}

void single_block_AES_encrypt_aes_cipher::thread_state_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        state_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()))) {
        state_ce0 = grp_single_block_AES_encrypt_sub_bytes_fu_257_state_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        state_ce0 = grp_single_block_AES_encrypt_shift_rows_fu_252_state_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_ce0 = grp_single_block_AES_encrypt_add_round_key_fu_242_state_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        state_ce0 = grp_single_block_AES_encrypt_mix_columns_fu_237_state_ce0.read();
    } else {
        state_ce0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_state_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        state_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_ce1 = grp_single_block_AES_encrypt_add_round_key_fu_242_state_ce1.read();
    } else {
        state_ce1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_state_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        state_d0 = in_r_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()))) {
        state_d0 = grp_single_block_AES_encrypt_sub_bytes_fu_257_state_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        state_d0 = grp_single_block_AES_encrypt_shift_rows_fu_252_state_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_d0 = grp_single_block_AES_encrypt_add_round_key_fu_242_state_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        state_d0 = grp_single_block_AES_encrypt_mix_columns_fu_237_state_d0.read();
    } else {
        state_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void single_block_AES_encrypt_aes_cipher::thread_state_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        state_d1 = in_r_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_d1 = grp_single_block_AES_encrypt_add_round_key_fu_242_state_d1.read();
    } else {
        state_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void single_block_AES_encrypt_aes_cipher::thread_state_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        state_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()))) {
        state_we0 = grp_single_block_AES_encrypt_sub_bytes_fu_257_state_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        state_we0 = grp_single_block_AES_encrypt_shift_rows_fu_252_state_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_we0 = grp_single_block_AES_encrypt_add_round_key_fu_242_state_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        state_we0 = grp_single_block_AES_encrypt_mix_columns_fu_237_state_we0.read();
    } else {
        state_we0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_state_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        state_we1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        state_we1 = grp_single_block_AES_encrypt_add_round_key_fu_242_state_we1.read();
    } else {
        state_we1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_100_1_fu_287_p1() {
    tmp_100_1_fu_287_p1 = esl_zext<64,3>(tmp_99_1_fu_281_p2.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_100_2_fu_328_p1() {
    tmp_100_2_fu_328_p1 = esl_zext<64,4>(tmp_99_s_fu_320_p3.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_100_3_fu_336_p1() {
    tmp_100_3_fu_336_p1 = esl_zext<64,4>(tmp_99_3_cast7_fu_333_p1.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_100_fu_276_p1() {
    tmp_100_fu_276_p1 = esl_zext<64,3>(i_reg_201.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_101_1_fu_341_p2() {
    tmp_101_1_fu_341_p2 = (tmp_s_reg_498.read() | ap_const_lv4_2);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_101_2_fu_351_p2() {
    tmp_101_2_fu_351_p2 = (tmp_s_reg_498.read() | ap_const_lv4_3);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_101_s_fu_309_p2() {
    tmp_101_s_fu_309_p2 = (tmp_s_fu_296_p3.read() | ap_const_lv4_1);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_102_1_fu_315_p1() {
    tmp_102_1_fu_315_p1 = esl_zext<64,4>(tmp_101_s_fu_309_p2.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_102_2_fu_346_p1() {
    tmp_102_2_fu_346_p1 = esl_zext<64,4>(tmp_101_1_fu_341_p2.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_102_3_fu_356_p1() {
    tmp_102_3_fu_356_p1 = esl_zext<64,4>(tmp_101_2_fu_351_p2.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_102_fu_304_p1() {
    tmp_102_fu_304_p1 = esl_zext<64,4>(tmp_s_fu_296_p3.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_106_1_fu_434_p2() {
    tmp_106_1_fu_434_p2 = (tmp_66_reg_535.read() | ap_const_lv4_2);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_106_2_fu_444_p2() {
    tmp_106_2_fu_444_p2 = (tmp_66_reg_535.read() | ap_const_lv4_3);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_106_s_fu_407_p2() {
    tmp_106_s_fu_407_p2 = (tmp_66_fu_394_p3.read() | ap_const_lv4_1);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_107_1_fu_413_p1() {
    tmp_107_1_fu_413_p1 = esl_zext<64,4>(tmp_106_s_fu_407_p2.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_107_2_fu_439_p1() {
    tmp_107_2_fu_439_p1 = esl_zext<64,4>(tmp_106_1_fu_434_p2.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_107_3_fu_449_p1() {
    tmp_107_3_fu_449_p1 = esl_zext<64,4>(tmp_106_2_fu_444_p2.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_107_fu_402_p1() {
    tmp_107_fu_402_p1 = esl_zext<64,4>(tmp_66_fu_394_p3.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_109_1_fu_423_p2() {
    tmp_109_1_fu_423_p2 = (i_1_reg_225.read() ^ ap_const_lv3_4);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_109_3_cast6_fu_467_p1() {
    tmp_109_3_cast6_fu_467_p1 = esl_sext<4,3>(tmp_109_1_reg_551.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_109_s_fu_454_p3() {
    tmp_109_s_fu_454_p3 = esl_concat<1,3>(ap_const_lv1_1, i_1_reg_225.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_110_1_fu_429_p1() {
    tmp_110_1_fu_429_p1 = esl_zext<64,3>(tmp_109_1_fu_423_p2.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_110_2_fu_462_p1() {
    tmp_110_2_fu_462_p1 = esl_zext<64,4>(tmp_109_s_fu_454_p3.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_110_3_fu_470_p1() {
    tmp_110_3_fu_470_p1 = esl_zext<64,4>(tmp_109_3_cast6_fu_467_p1.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_110_fu_418_p1() {
    tmp_110_fu_418_p1 = esl_zext<64,3>(i_1_reg_225.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_30_fu_390_p1() {
    tmp_30_fu_390_p1 = i_1_reg_225.read().range(2-1, 0);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_66_fu_394_p3() {
    tmp_66_fu_394_p3 = esl_concat<2,2>(tmp_30_fu_390_p1.read(), ap_const_lv2_0);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_99_1_fu_281_p2() {
    tmp_99_1_fu_281_p2 = (i_reg_201.read() ^ ap_const_lv3_4);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_99_3_cast7_fu_333_p1() {
    tmp_99_3_cast7_fu_333_p1 = esl_sext<4,3>(tmp_99_1_reg_488.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_99_s_fu_320_p3() {
    tmp_99_s_fu_320_p3 = esl_concat<1,3>(ap_const_lv1_1, i_reg_201.read());
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_fu_292_p1() {
    tmp_fu_292_p1 = i_reg_201.read().range(2-1, 0);
}

void single_block_AES_encrypt_aes_cipher::thread_tmp_s_fu_296_p3() {
    tmp_s_fu_296_p3 = esl_concat<2,2>(tmp_fu_292_p1.read(), ap_const_lv2_0);
}

void single_block_AES_encrypt_aes_cipher::thread_w_address0() {
    w_address0 = grp_single_block_AES_encrypt_add_round_key_fu_242_w_address0.read();
}

void single_block_AES_encrypt_aes_cipher::thread_w_address1() {
    w_address1 = grp_single_block_AES_encrypt_add_round_key_fu_242_w_address1.read();
}

void single_block_AES_encrypt_aes_cipher::thread_w_ce0() {
    w_ce0 = grp_single_block_AES_encrypt_add_round_key_fu_242_w_ce0.read();
}

void single_block_AES_encrypt_aes_cipher::thread_w_ce1() {
    w_ce1 = grp_single_block_AES_encrypt_add_round_key_fu_242_w_ce1.read();
}

void single_block_AES_encrypt_aes_cipher::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond4_fu_264_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_add_round_key_fu_242_ap_done.read())) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 32 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_361_p2.read())) {
                ap_NS_fsm = ap_ST_st14_fsm_13;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 64 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_done.read())) {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_shift_rows_fu_252_ap_done.read())) {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            } else {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_mix_columns_fu_237_ap_done.read())) {
                ap_NS_fsm = ap_ST_st12_fsm_11;
            } else {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_add_round_key_fu_242_ap_done.read())) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st13_fsm_12;
            }
            break;
        case 8192 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_sub_bytes_fu_257_ap_done.read())) {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            } else {
                ap_NS_fsm = ap_ST_st14_fsm_13;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_shift_rows_fu_252_ap_done.read())) {
                ap_NS_fsm = ap_ST_st17_fsm_16;
            } else {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_single_block_AES_encrypt_add_round_key_fu_242_ap_done.read())) {
                ap_NS_fsm = ap_ST_st19_fsm_18;
            } else {
                ap_NS_fsm = ap_ST_st18_fsm_17;
            }
            break;
        case 262144 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_378_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st20_fsm_19;
            }
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<21>) ("XXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}


// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "single_block_AES_encrypt_coef_mult.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<4> single_block_AES_encrypt_coef_mult::ap_const_lv4_2 = "10";
const bool single_block_AES_encrypt_coef_mult::ap_true = true;
const sc_lv<4> single_block_AES_encrypt_coef_mult::ap_const_lv4_3 = "11";
const sc_lv<4> single_block_AES_encrypt_coef_mult::ap_const_lv4_1 = "1";
const sc_logic single_block_AES_encrypt_coef_mult::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic single_block_AES_encrypt_coef_mult::ap_const_logic_0 = sc_dt::Log_0;

single_block_AES_encrypt_coef_mult::single_block_AES_encrypt_coef_mult(sc_module_name name) : sc_module(name), mVcdFile(0) {
    tmp_single_block_AES_encrypt_gmult_fu_44 = new single_block_AES_encrypt_gmult("tmp_single_block_AES_encrypt_gmult_fu_44");
    tmp_single_block_AES_encrypt_gmult_fu_44->a(ap_var_for_const0);
    tmp_single_block_AES_encrypt_gmult_fu_44->b(b_0_read);
    tmp_single_block_AES_encrypt_gmult_fu_44->ap_return(tmp_single_block_AES_encrypt_gmult_fu_44_ap_return);
    tmp_s_single_block_AES_encrypt_gmult_fu_52 = new single_block_AES_encrypt_gmult("tmp_s_single_block_AES_encrypt_gmult_fu_52");
    tmp_s_single_block_AES_encrypt_gmult_fu_52->a(ap_var_for_const1);
    tmp_s_single_block_AES_encrypt_gmult_fu_52->b(b_1_read);
    tmp_s_single_block_AES_encrypt_gmult_fu_52->ap_return(tmp_s_single_block_AES_encrypt_gmult_fu_52_ap_return);
    tmp_1_single_block_AES_encrypt_gmult_fu_60 = new single_block_AES_encrypt_gmult("tmp_1_single_block_AES_encrypt_gmult_fu_60");
    tmp_1_single_block_AES_encrypt_gmult_fu_60->a(ap_var_for_const2);
    tmp_1_single_block_AES_encrypt_gmult_fu_60->b(b_2_read);
    tmp_1_single_block_AES_encrypt_gmult_fu_60->ap_return(tmp_1_single_block_AES_encrypt_gmult_fu_60_ap_return);
    tmp_2_single_block_AES_encrypt_gmult_fu_68 = new single_block_AES_encrypt_gmult("tmp_2_single_block_AES_encrypt_gmult_fu_68");
    tmp_2_single_block_AES_encrypt_gmult_fu_68->a(ap_var_for_const2);
    tmp_2_single_block_AES_encrypt_gmult_fu_68->b(b_3_read);
    tmp_2_single_block_AES_encrypt_gmult_fu_68->ap_return(tmp_2_single_block_AES_encrypt_gmult_fu_68_ap_return);
    tmp_5_single_block_AES_encrypt_gmult_fu_76 = new single_block_AES_encrypt_gmult("tmp_5_single_block_AES_encrypt_gmult_fu_76");
    tmp_5_single_block_AES_encrypt_gmult_fu_76->a(ap_var_for_const2);
    tmp_5_single_block_AES_encrypt_gmult_fu_76->b(b_0_read);
    tmp_5_single_block_AES_encrypt_gmult_fu_76->ap_return(tmp_5_single_block_AES_encrypt_gmult_fu_76_ap_return);
    tmp_6_single_block_AES_encrypt_gmult_fu_84 = new single_block_AES_encrypt_gmult("tmp_6_single_block_AES_encrypt_gmult_fu_84");
    tmp_6_single_block_AES_encrypt_gmult_fu_84->a(ap_var_for_const0);
    tmp_6_single_block_AES_encrypt_gmult_fu_84->b(b_1_read);
    tmp_6_single_block_AES_encrypt_gmult_fu_84->ap_return(tmp_6_single_block_AES_encrypt_gmult_fu_84_ap_return);
    tmp_7_single_block_AES_encrypt_gmult_fu_92 = new single_block_AES_encrypt_gmult("tmp_7_single_block_AES_encrypt_gmult_fu_92");
    tmp_7_single_block_AES_encrypt_gmult_fu_92->a(ap_var_for_const1);
    tmp_7_single_block_AES_encrypt_gmult_fu_92->b(b_2_read);
    tmp_7_single_block_AES_encrypt_gmult_fu_92->ap_return(tmp_7_single_block_AES_encrypt_gmult_fu_92_ap_return);
    tmp_3_single_block_AES_encrypt_gmult_fu_100 = new single_block_AES_encrypt_gmult("tmp_3_single_block_AES_encrypt_gmult_fu_100");
    tmp_3_single_block_AES_encrypt_gmult_fu_100->a(ap_var_for_const2);
    tmp_3_single_block_AES_encrypt_gmult_fu_100->b(b_1_read);
    tmp_3_single_block_AES_encrypt_gmult_fu_100->ap_return(tmp_3_single_block_AES_encrypt_gmult_fu_100_ap_return);
    tmp_4_single_block_AES_encrypt_gmult_fu_108 = new single_block_AES_encrypt_gmult("tmp_4_single_block_AES_encrypt_gmult_fu_108");
    tmp_4_single_block_AES_encrypt_gmult_fu_108->a(ap_var_for_const0);
    tmp_4_single_block_AES_encrypt_gmult_fu_108->b(b_2_read);
    tmp_4_single_block_AES_encrypt_gmult_fu_108->ap_return(tmp_4_single_block_AES_encrypt_gmult_fu_108_ap_return);
    tmp_8_single_block_AES_encrypt_gmult_fu_116 = new single_block_AES_encrypt_gmult("tmp_8_single_block_AES_encrypt_gmult_fu_116");
    tmp_8_single_block_AES_encrypt_gmult_fu_116->a(ap_var_for_const1);
    tmp_8_single_block_AES_encrypt_gmult_fu_116->b(b_3_read);
    tmp_8_single_block_AES_encrypt_gmult_fu_116->ap_return(tmp_8_single_block_AES_encrypt_gmult_fu_116_ap_return);
    tmp_9_single_block_AES_encrypt_gmult_fu_124 = new single_block_AES_encrypt_gmult("tmp_9_single_block_AES_encrypt_gmult_fu_124");
    tmp_9_single_block_AES_encrypt_gmult_fu_124->a(ap_var_for_const1);
    tmp_9_single_block_AES_encrypt_gmult_fu_124->b(b_0_read);
    tmp_9_single_block_AES_encrypt_gmult_fu_124->ap_return(tmp_9_single_block_AES_encrypt_gmult_fu_124_ap_return);
    tmp_10_single_block_AES_encrypt_gmult_fu_132 = new single_block_AES_encrypt_gmult("tmp_10_single_block_AES_encrypt_gmult_fu_132");
    tmp_10_single_block_AES_encrypt_gmult_fu_132->a(ap_var_for_const0);
    tmp_10_single_block_AES_encrypt_gmult_fu_132->b(b_3_read);
    tmp_10_single_block_AES_encrypt_gmult_fu_132->ap_return(tmp_10_single_block_AES_encrypt_gmult_fu_132_ap_return);

    SC_METHOD(thread_ap_return_0);
    sensitive << ( d_0_write_assign_fu_152_p2 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( d_1_write_assign_fu_170_p2 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( d_2_write_assign_fu_188_p2 );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( d_3_write_assign_fu_206_p2 );

    SC_METHOD(thread_d_0_write_assign_fu_152_p2);
    sensitive << ( tmp2_fu_146_p2 );
    sensitive << ( tmp1_fu_140_p2 );

    SC_METHOD(thread_d_1_write_assign_fu_170_p2);
    sensitive << ( tmp4_fu_164_p2 );
    sensitive << ( tmp3_fu_158_p2 );

    SC_METHOD(thread_d_2_write_assign_fu_188_p2);
    sensitive << ( tmp6_fu_182_p2 );
    sensitive << ( tmp5_fu_176_p2 );

    SC_METHOD(thread_d_3_write_assign_fu_206_p2);
    sensitive << ( tmp8_fu_200_p2 );
    sensitive << ( tmp7_fu_194_p2 );

    SC_METHOD(thread_tmp1_fu_140_p2);
    sensitive << ( tmp_single_block_AES_encrypt_gmult_fu_44_ap_return );
    sensitive << ( tmp_s_single_block_AES_encrypt_gmult_fu_52_ap_return );

    SC_METHOD(thread_tmp2_fu_146_p2);
    sensitive << ( tmp_1_single_block_AES_encrypt_gmult_fu_60_ap_return );
    sensitive << ( tmp_2_single_block_AES_encrypt_gmult_fu_68_ap_return );

    SC_METHOD(thread_tmp3_fu_158_p2);
    sensitive << ( tmp_5_single_block_AES_encrypt_gmult_fu_76_ap_return );
    sensitive << ( tmp_6_single_block_AES_encrypt_gmult_fu_84_ap_return );

    SC_METHOD(thread_tmp4_fu_164_p2);
    sensitive << ( tmp_2_single_block_AES_encrypt_gmult_fu_68_ap_return );
    sensitive << ( tmp_7_single_block_AES_encrypt_gmult_fu_92_ap_return );

    SC_METHOD(thread_tmp5_fu_176_p2);
    sensitive << ( tmp_5_single_block_AES_encrypt_gmult_fu_76_ap_return );
    sensitive << ( tmp_3_single_block_AES_encrypt_gmult_fu_100_ap_return );

    SC_METHOD(thread_tmp6_fu_182_p2);
    sensitive << ( tmp_4_single_block_AES_encrypt_gmult_fu_108_ap_return );
    sensitive << ( tmp_8_single_block_AES_encrypt_gmult_fu_116_ap_return );

    SC_METHOD(thread_tmp7_fu_194_p2);
    sensitive << ( tmp_3_single_block_AES_encrypt_gmult_fu_100_ap_return );
    sensitive << ( tmp_9_single_block_AES_encrypt_gmult_fu_124_ap_return );

    SC_METHOD(thread_tmp8_fu_200_p2);
    sensitive << ( tmp_1_single_block_AES_encrypt_gmult_fu_60_ap_return );
    sensitive << ( tmp_10_single_block_AES_encrypt_gmult_fu_132_ap_return );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "single_block_AES_encrypt_coef_mult_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, b_0_read, "(port)b_0_read");
    sc_trace(mVcdFile, b_1_read, "(port)b_1_read");
    sc_trace(mVcdFile, b_2_read, "(port)b_2_read");
    sc_trace(mVcdFile, b_3_read, "(port)b_3_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, tmp_single_block_AES_encrypt_gmult_fu_44_ap_return, "tmp_single_block_AES_encrypt_gmult_fu_44_ap_return");
    sc_trace(mVcdFile, tmp_s_single_block_AES_encrypt_gmult_fu_52_ap_return, "tmp_s_single_block_AES_encrypt_gmult_fu_52_ap_return");
    sc_trace(mVcdFile, tmp_1_single_block_AES_encrypt_gmult_fu_60_ap_return, "tmp_1_single_block_AES_encrypt_gmult_fu_60_ap_return");
    sc_trace(mVcdFile, tmp_2_single_block_AES_encrypt_gmult_fu_68_ap_return, "tmp_2_single_block_AES_encrypt_gmult_fu_68_ap_return");
    sc_trace(mVcdFile, tmp_5_single_block_AES_encrypt_gmult_fu_76_ap_return, "tmp_5_single_block_AES_encrypt_gmult_fu_76_ap_return");
    sc_trace(mVcdFile, tmp_6_single_block_AES_encrypt_gmult_fu_84_ap_return, "tmp_6_single_block_AES_encrypt_gmult_fu_84_ap_return");
    sc_trace(mVcdFile, tmp_7_single_block_AES_encrypt_gmult_fu_92_ap_return, "tmp_7_single_block_AES_encrypt_gmult_fu_92_ap_return");
    sc_trace(mVcdFile, tmp_3_single_block_AES_encrypt_gmult_fu_100_ap_return, "tmp_3_single_block_AES_encrypt_gmult_fu_100_ap_return");
    sc_trace(mVcdFile, tmp_4_single_block_AES_encrypt_gmult_fu_108_ap_return, "tmp_4_single_block_AES_encrypt_gmult_fu_108_ap_return");
    sc_trace(mVcdFile, tmp_8_single_block_AES_encrypt_gmult_fu_116_ap_return, "tmp_8_single_block_AES_encrypt_gmult_fu_116_ap_return");
    sc_trace(mVcdFile, tmp_9_single_block_AES_encrypt_gmult_fu_124_ap_return, "tmp_9_single_block_AES_encrypt_gmult_fu_124_ap_return");
    sc_trace(mVcdFile, tmp_10_single_block_AES_encrypt_gmult_fu_132_ap_return, "tmp_10_single_block_AES_encrypt_gmult_fu_132_ap_return");
    sc_trace(mVcdFile, tmp2_fu_146_p2, "tmp2_fu_146_p2");
    sc_trace(mVcdFile, tmp1_fu_140_p2, "tmp1_fu_140_p2");
    sc_trace(mVcdFile, tmp4_fu_164_p2, "tmp4_fu_164_p2");
    sc_trace(mVcdFile, tmp3_fu_158_p2, "tmp3_fu_158_p2");
    sc_trace(mVcdFile, tmp6_fu_182_p2, "tmp6_fu_182_p2");
    sc_trace(mVcdFile, tmp5_fu_176_p2, "tmp5_fu_176_p2");
    sc_trace(mVcdFile, tmp8_fu_200_p2, "tmp8_fu_200_p2");
    sc_trace(mVcdFile, tmp7_fu_194_p2, "tmp7_fu_194_p2");
    sc_trace(mVcdFile, d_0_write_assign_fu_152_p2, "d_0_write_assign_fu_152_p2");
    sc_trace(mVcdFile, d_1_write_assign_fu_170_p2, "d_1_write_assign_fu_170_p2");
    sc_trace(mVcdFile, d_2_write_assign_fu_188_p2, "d_2_write_assign_fu_188_p2");
    sc_trace(mVcdFile, d_3_write_assign_fu_206_p2, "d_3_write_assign_fu_206_p2");
#endif

    }
}

single_block_AES_encrypt_coef_mult::~single_block_AES_encrypt_coef_mult() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete tmp_single_block_AES_encrypt_gmult_fu_44;
    delete tmp_s_single_block_AES_encrypt_gmult_fu_52;
    delete tmp_1_single_block_AES_encrypt_gmult_fu_60;
    delete tmp_2_single_block_AES_encrypt_gmult_fu_68;
    delete tmp_5_single_block_AES_encrypt_gmult_fu_76;
    delete tmp_6_single_block_AES_encrypt_gmult_fu_84;
    delete tmp_7_single_block_AES_encrypt_gmult_fu_92;
    delete tmp_3_single_block_AES_encrypt_gmult_fu_100;
    delete tmp_4_single_block_AES_encrypt_gmult_fu_108;
    delete tmp_8_single_block_AES_encrypt_gmult_fu_116;
    delete tmp_9_single_block_AES_encrypt_gmult_fu_124;
    delete tmp_10_single_block_AES_encrypt_gmult_fu_132;
}

void single_block_AES_encrypt_coef_mult::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv4_2;
}

void single_block_AES_encrypt_coef_mult::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv4_3;
}

void single_block_AES_encrypt_coef_mult::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv4_1;
}

void single_block_AES_encrypt_coef_mult::thread_ap_return_0() {
    ap_return_0 = d_0_write_assign_fu_152_p2.read();
}

void single_block_AES_encrypt_coef_mult::thread_ap_return_1() {
    ap_return_1 = d_1_write_assign_fu_170_p2.read();
}

void single_block_AES_encrypt_coef_mult::thread_ap_return_2() {
    ap_return_2 = d_2_write_assign_fu_188_p2.read();
}

void single_block_AES_encrypt_coef_mult::thread_ap_return_3() {
    ap_return_3 = d_3_write_assign_fu_206_p2.read();
}

void single_block_AES_encrypt_coef_mult::thread_d_0_write_assign_fu_152_p2() {
    d_0_write_assign_fu_152_p2 = (tmp2_fu_146_p2.read() ^ tmp1_fu_140_p2.read());
}

void single_block_AES_encrypt_coef_mult::thread_d_1_write_assign_fu_170_p2() {
    d_1_write_assign_fu_170_p2 = (tmp4_fu_164_p2.read() ^ tmp3_fu_158_p2.read());
}

void single_block_AES_encrypt_coef_mult::thread_d_2_write_assign_fu_188_p2() {
    d_2_write_assign_fu_188_p2 = (tmp6_fu_182_p2.read() ^ tmp5_fu_176_p2.read());
}

void single_block_AES_encrypt_coef_mult::thread_d_3_write_assign_fu_206_p2() {
    d_3_write_assign_fu_206_p2 = (tmp8_fu_200_p2.read() ^ tmp7_fu_194_p2.read());
}

void single_block_AES_encrypt_coef_mult::thread_tmp1_fu_140_p2() {
    tmp1_fu_140_p2 = (tmp_s_single_block_AES_encrypt_gmult_fu_52_ap_return.read() ^ tmp_single_block_AES_encrypt_gmult_fu_44_ap_return.read());
}

void single_block_AES_encrypt_coef_mult::thread_tmp2_fu_146_p2() {
    tmp2_fu_146_p2 = (tmp_1_single_block_AES_encrypt_gmult_fu_60_ap_return.read() ^ tmp_2_single_block_AES_encrypt_gmult_fu_68_ap_return.read());
}

void single_block_AES_encrypt_coef_mult::thread_tmp3_fu_158_p2() {
    tmp3_fu_158_p2 = (tmp_6_single_block_AES_encrypt_gmult_fu_84_ap_return.read() ^ tmp_5_single_block_AES_encrypt_gmult_fu_76_ap_return.read());
}

void single_block_AES_encrypt_coef_mult::thread_tmp4_fu_164_p2() {
    tmp4_fu_164_p2 = (tmp_7_single_block_AES_encrypt_gmult_fu_92_ap_return.read() ^ tmp_2_single_block_AES_encrypt_gmult_fu_68_ap_return.read());
}

void single_block_AES_encrypt_coef_mult::thread_tmp5_fu_176_p2() {
    tmp5_fu_176_p2 = (tmp_3_single_block_AES_encrypt_gmult_fu_100_ap_return.read() ^ tmp_5_single_block_AES_encrypt_gmult_fu_76_ap_return.read());
}

void single_block_AES_encrypt_coef_mult::thread_tmp6_fu_182_p2() {
    tmp6_fu_182_p2 = (tmp_4_single_block_AES_encrypt_gmult_fu_108_ap_return.read() ^ tmp_8_single_block_AES_encrypt_gmult_fu_116_ap_return.read());
}

void single_block_AES_encrypt_coef_mult::thread_tmp7_fu_194_p2() {
    tmp7_fu_194_p2 = (tmp_3_single_block_AES_encrypt_gmult_fu_100_ap_return.read() ^ tmp_9_single_block_AES_encrypt_gmult_fu_124_ap_return.read());
}

void single_block_AES_encrypt_coef_mult::thread_tmp8_fu_200_p2() {
    tmp8_fu_200_p2 = (tmp_1_single_block_AES_encrypt_gmult_fu_60_ap_return.read() ^ tmp_10_single_block_AES_encrypt_gmult_fu_132_ap_return.read());
}

}


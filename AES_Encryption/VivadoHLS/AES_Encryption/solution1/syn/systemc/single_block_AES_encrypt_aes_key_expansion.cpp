// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "single_block_AES_encrypt_aes_key_expansion.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic single_block_AES_encrypt_aes_key_expansion::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic single_block_AES_encrypt_aes_key_expansion::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st1_fsm_0 = "1";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st2_fsm_1 = "10";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st3_fsm_2 = "100";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st4_fsm_3 = "1000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st5_fsm_4 = "10000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st6_fsm_5 = "100000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<21> single_block_AES_encrypt_aes_key_expansion::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> single_block_AES_encrypt_aes_key_expansion::ap_const_lv1_1 = "1";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_8 = "1000";
const sc_lv<1> single_block_AES_encrypt_aes_key_expansion::ap_const_lv1_0 = "0";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_9 = "1001";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_A = "1010";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_B = "1011";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_C = "1100";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_D = "1101";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_E = "1110";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_10 = "10000";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_11 = "10001";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_12 = "10010";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_13 = "10011";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_14 = "10100";
const sc_lv<6> single_block_AES_encrypt_aes_key_expansion::ap_const_lv6_4 = "100";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_7 = "111";
const sc_lv<2> single_block_AES_encrypt_aes_key_expansion::ap_const_lv2_0 = "00";
const sc_lv<3> single_block_AES_encrypt_aes_key_expansion::ap_const_lv3_0 = "000";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_2 = "10";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_1 = "1";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_2 = "10";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_1 = "1";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_3 = "11";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_4 = "100";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_2 = "10";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_5 = "101";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_6 = "110";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_3 = "11";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_7 = "111";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_8 = "1000";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_4 = "100";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_9 = "1001";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_A = "1010";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_5 = "101";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_B = "1011";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_C = "1100";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_6 = "110";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_D = "1101";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_E = "1110";
const sc_lv<64> single_block_AES_encrypt_aes_key_expansion::ap_const_lv64_F = "1111";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_63 = "1100011";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_71 = "1110001";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_6B = "1101011";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_12 = "10010";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_E7 = "11100111";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_D2 = "11010010";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_11 = "10001";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_E3 = "11100011";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_D3 = "11010011";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_B2 = "10110010";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_85 = "10000101";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_67 = "1100111";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_FF = "11111111";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_15 = "10101";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_AB = "10101011";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_1 = "1";
const sc_lv<32> single_block_AES_encrypt_aes_key_expansion::ap_const_lv32_F = "1111";
const sc_lv<2> single_block_AES_encrypt_aes_key_expansion::ap_const_lv2_1 = "1";
const sc_lv<2> single_block_AES_encrypt_aes_key_expansion::ap_const_lv2_3 = "11";
const sc_lv<2> single_block_AES_encrypt_aes_key_expansion::ap_const_lv2_2 = "10";
const sc_lv<6> single_block_AES_encrypt_aes_key_expansion::ap_const_lv6_2C = "101100";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_FC = "11111100";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_FD = "11111101";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_FE = "11111110";
const sc_lv<3> single_block_AES_encrypt_aes_key_expansion::ap_const_lv3_4 = "100";
const sc_lv<3> single_block_AES_encrypt_aes_key_expansion::ap_const_lv3_1 = "1";
const sc_lv<4> single_block_AES_encrypt_aes_key_expansion::ap_const_lv4_1 = "1";
const sc_lv<7> single_block_AES_encrypt_aes_key_expansion::ap_const_lv7_0 = "0000000";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_1B = "11011";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_F0 = "11110000";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_F1 = "11110001";
const sc_lv<6> single_block_AES_encrypt_aes_key_expansion::ap_const_lv6_1 = "1";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_F2 = "11110010";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_F3 = "11110011";
const sc_lv<8> single_block_AES_encrypt_aes_key_expansion::ap_const_lv8_3 = "11";

single_block_AES_encrypt_aes_key_expansion::single_block_AES_encrypt_aes_key_expansion(sc_module_name name) : sc_module(name), mVcdFile(0) {
    s_box_U = new single_block_AES_encrypt_aes_key_expansion_s_box("s_box_U");
    s_box_U->clk(ap_clk);
    s_box_U->reset(ap_rst);
    s_box_U->address0(s_box_address0);
    s_box_U->ce0(s_box_ce0);
    s_box_U->q0(s_box_q0);
    R_U = new single_block_AES_encrypt_aes_key_expansion_R("R_U");
    R_U->clk(ap_clk);
    R_U->reset(ap_rst);
    R_U->address0(R_address0);
    R_U->ce0(R_ce0);
    R_U->we0(R_we0);
    R_U->d0(R_d0);
    R_U->q0(R_q0);
    R_U->address1(R_address1);
    R_U->ce1(R_ce1);
    R_U->q1(R_q1);
    single_block_AES_encrypt_mux_4to1_sel2_8_1_U0 = new single_block_AES_encrypt_mux_4to1_sel2_8_1<1,1,8,8,8,8,2,8>("single_block_AES_encrypt_mux_4to1_sel2_8_1_U0");
    single_block_AES_encrypt_mux_4to1_sel2_8_1_U0->din1(tmp_3_6_reg_537);
    single_block_AES_encrypt_mux_4to1_sel2_8_1_U0->din2(tmp_3_3_reg_526);
    single_block_AES_encrypt_mux_4to1_sel2_8_1_U0->din3(a_2_read_assign_reg_515);
    single_block_AES_encrypt_mux_4to1_sel2_8_1_U0->din4(a_3_read_assign_reg_505);
    single_block_AES_encrypt_mux_4to1_sel2_8_1_U0->din5(tmp_fu_789_p5);
    single_block_AES_encrypt_mux_4to1_sel2_8_1_U0->dout(tmp_fu_789_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_R_address0);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_R_address1);
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_R_ce0);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_R_ce1);
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_R_d0);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( a_assign_reg_558 );

    SC_METHOD(thread_R_we0);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( exitcond_i_fu_773_p2 );
    sensitive << ( icmp_reg_1226 );
    sensitive << ( tmp_20_fu_822_p2 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( icmp9_fu_937_p2 );

    SC_METHOD(thread_a_assign_1_i_fu_957_p2);
    sensitive << ( tmp_45_fu_943_p2 );

    SC_METHOD(thread_a_assign_2_i_fu_963_p3);
    sensitive << ( tmp_45_fu_943_p2 );
    sensitive << ( tmp_46_fu_949_p3 );
    sensitive << ( a_assign_1_i_fu_957_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( exitcond_fu_615_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( exitcond_fu_615_p2 );

    SC_METHOD(thread_ap_sig_112);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_124);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_148);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_174);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_189);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_206);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_217);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_237);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_252);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_263);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_271);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_327);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_338);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_349);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_360);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_371);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_382);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_460);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_83);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_99);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_99 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_112 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_124 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_148 );

    SC_METHOD(thread_ap_sig_cseq_ST_st14_fsm_13);
    sensitive << ( ap_sig_174 );

    SC_METHOD(thread_ap_sig_cseq_ST_st15_fsm_14);
    sensitive << ( ap_sig_189 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_460 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_16);
    sensitive << ( ap_sig_206 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_17);
    sensitive << ( ap_sig_217 );

    SC_METHOD(thread_ap_sig_cseq_ST_st19_fsm_18);
    sensitive << ( ap_sig_237 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_38 );

    SC_METHOD(thread_ap_sig_cseq_ST_st20_fsm_19);
    sensitive << ( ap_sig_252 );

    SC_METHOD(thread_ap_sig_cseq_ST_st21_fsm_20);
    sensitive << ( ap_sig_263 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_327 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_338 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_349 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_360 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_371 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_382 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_271 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_83 );

    SC_METHOD(thread_exitcond_fu_615_p2);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( i_1_reg_440 );

    SC_METHOD(thread_exitcond_i1_fu_681_p2);
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( i_i1_reg_494 );

    SC_METHOD(thread_exitcond_i_fu_773_p2);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( i_i_reg_547 );

    SC_METHOD(thread_i_2_fu_779_p2);
    sensitive << ( i_i_reg_547 );

    SC_METHOD(thread_i_3_fu_687_p2);
    sensitive << ( i_i1_reg_494 );

    SC_METHOD(thread_i_assign_1_fu_921_p2);
    sensitive << ( p_0_in_i_reg_570 );

    SC_METHOD(thread_i_assign_cast1_fu_818_p1);
    sensitive << ( i_assign_fu_808_p4 );

    SC_METHOD(thread_i_assign_fu_808_p4);
    sensitive << ( i_1_reg_440 );

    SC_METHOD(thread_i_fu_1015_p2);
    sensitive << ( i_1_reg_440 );

    SC_METHOD(thread_icmp9_fu_937_p2);
    sensitive << ( icmp_reg_1226 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( tmp_44_fu_927_p4 );

    SC_METHOD(thread_icmp_fu_838_p2);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( exitcond_i_fu_773_p2 );
    sensitive << ( tmp_20_fu_822_p2 );
    sensitive << ( tmp_43_fu_828_p4 );

    SC_METHOD(thread_newSel2_fu_881_p3);
    sensitive << ( s_box_q0 );
    sensitive << ( a_2_read_assign_reg_515 );
    sensitive << ( sel_tmp_fu_844_p2 );

    SC_METHOD(thread_newSel_fu_865_p3);
    sensitive << ( s_box_q0 );
    sensitive << ( a_3_read_assign_reg_505 );
    sensitive << ( sel_tmp_fu_844_p2 );

    SC_METHOD(thread_or_cond_fu_859_p2);
    sensitive << ( sel_tmp1_fu_854_p2 );
    sensitive << ( sel_tmp8_fu_849_p2 );

    SC_METHOD(thread_s_box_address0);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( tmp_1_i_fu_803_p1 );

    SC_METHOD(thread_s_box_ce0);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_sel_tmp1_fu_854_p2);
    sensitive << ( tmp_42_reg_1206 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );

    SC_METHOD(thread_sel_tmp2_i_fu_706_p2);
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( exitcond_i1_fu_681_p2 );
    sensitive << ( i_i1_reg_494 );

    SC_METHOD(thread_sel_tmp8_fu_849_p2);
    sensitive << ( tmp_42_reg_1206 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );

    SC_METHOD(thread_sel_tmp_fu_844_p2);
    sensitive << ( tmp_42_reg_1206 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );

    SC_METHOD(thread_sel_tmp_i_fu_693_p2);
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( exitcond_i1_fu_681_p2 );
    sensitive << ( i_i1_reg_494 );

    SC_METHOD(thread_tmp_0_1_fu_766_p3);
    sensitive << ( tmp_47_reg_1126 );
    sensitive << ( write_flag_i_reg_452 );
    sensitive << ( w_3_read_assign_2_reg_463 );

    SC_METHOD(thread_tmp_0_fu_983_p2);
    sensitive << ( R_q1 );
    sensitive << ( tmp_3_6_reg_537 );

    SC_METHOD(thread_tmp_11_fu_629_p2);
    sensitive << ( tmp_s_fu_621_p3 );

    SC_METHOD(thread_tmp_12_fu_635_p1);
    sensitive << ( tmp_11_fu_629_p2 );

    SC_METHOD(thread_tmp_13_fu_640_p2);
    sensitive << ( tmp_s_fu_621_p3 );

    SC_METHOD(thread_tmp_14_fu_646_p1);
    sensitive << ( tmp_13_fu_640_p2 );

    SC_METHOD(thread_tmp_15_fu_651_p2);
    sensitive << ( tmp_s_reg_1102 );

    SC_METHOD(thread_tmp_16_fu_656_p1);
    sensitive << ( tmp_15_fu_651_p2 );

    SC_METHOD(thread_tmp_17_fu_661_p2);
    sensitive << ( tmp_s_reg_1102 );

    SC_METHOD(thread_tmp_18_fu_666_p1);
    sensitive << ( tmp_17_fu_661_p2 );

    SC_METHOD(thread_tmp_19_fu_675_p2);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( tmp_22_fu_671_p1 );

    SC_METHOD(thread_tmp_1_3_fu_971_p2);
    sensitive << ( R_q0 );
    sensitive << ( tmp_3_3_reg_526 );

    SC_METHOD(thread_tmp_1_i_fu_803_p1);
    sensitive << ( tmp_fu_789_p6 );

    SC_METHOD(thread_tmp_20_fu_822_p2);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( exitcond_i_fu_773_p2 );
    sensitive << ( i_assign_fu_808_p4 );

    SC_METHOD(thread_tmp_21_fu_995_p2);
    sensitive << ( tmp_s_reg_1102 );

    SC_METHOD(thread_tmp_22_fu_671_p1);
    sensitive << ( i_1_reg_440 );

    SC_METHOD(thread_tmp_23_fu_1000_p1);
    sensitive << ( tmp_21_fu_995_p2 );

    SC_METHOD(thread_tmp_24_fu_1021_p2);
    sensitive << ( w_q0 );
    sensitive << ( tmp_0_s_reg_588 );

    SC_METHOD(thread_tmp_25_fu_1053_p1);
    sensitive << ( tmp_s_reg_1102 );

    SC_METHOD(thread_tmp_26_fu_1005_p2);
    sensitive << ( tmp_s_reg_1102 );

    SC_METHOD(thread_tmp_27_fu_1010_p1);
    sensitive << ( tmp_26_fu_1005_p2 );

    SC_METHOD(thread_tmp_28_fu_1027_p2);
    sensitive << ( w_q1 );
    sensitive << ( tmp_1_s_reg_579 );

    SC_METHOD(thread_tmp_29_fu_1057_p2);
    sensitive << ( tmp_s_reg_1102 );

    SC_METHOD(thread_tmp_2_3_fu_977_p2);
    sensitive << ( R_q1 );
    sensitive << ( a_2_read_assign_reg_515 );

    SC_METHOD(thread_tmp_30_fu_1062_p1);
    sensitive << ( tmp_29_fu_1057_p2 );

    SC_METHOD(thread_tmp_31_fu_1033_p2);
    sensitive << ( tmp_s_reg_1102 );

    SC_METHOD(thread_tmp_32_fu_1038_p1);
    sensitive << ( tmp_31_fu_1033_p2 );

    SC_METHOD(thread_tmp_33_fu_1067_p2);
    sensitive << ( w_q0 );
    sensitive << ( tmp_2_3_2_reg_606 );

    SC_METHOD(thread_tmp_34_fu_1079_p2);
    sensitive << ( tmp_s_reg_1102 );

    SC_METHOD(thread_tmp_35_fu_1084_p1);
    sensitive << ( tmp_34_fu_1079_p2 );

    SC_METHOD(thread_tmp_36_fu_1043_p2);
    sensitive << ( tmp_s_reg_1102 );

    SC_METHOD(thread_tmp_37_fu_1048_p1);
    sensitive << ( tmp_36_fu_1043_p2 );

    SC_METHOD(thread_tmp_38_fu_1073_p2);
    sensitive << ( w_q1 );
    sensitive << ( tmp_3_s_reg_597 );

    SC_METHOD(thread_tmp_39_fu_1089_p2);
    sensitive << ( tmp_s_reg_1102 );

    SC_METHOD(thread_tmp_3_4_fu_889_p3);
    sensitive << ( a_2_read_assign_reg_515 );
    sensitive << ( or_cond_fu_859_p2 );
    sensitive << ( newSel2_fu_881_p3 );

    SC_METHOD(thread_tmp_3_5_fu_897_p3);
    sensitive << ( s_box_q0 );
    sensitive << ( tmp_3_3_reg_526 );
    sensitive << ( sel_tmp8_fu_849_p2 );

    SC_METHOD(thread_tmp_3_7_fu_905_p3);
    sensitive << ( tmp_3_3_reg_526 );
    sensitive << ( sel_tmp1_fu_854_p2 );
    sensitive << ( tmp_3_5_fu_897_p3 );

    SC_METHOD(thread_tmp_3_8_fu_913_p3);
    sensitive << ( s_box_q0 );
    sensitive << ( tmp_3_6_reg_537 );
    sensitive << ( sel_tmp1_fu_854_p2 );

    SC_METHOD(thread_tmp_3_9_fu_989_p2);
    sensitive << ( R_q0 );
    sensitive << ( a_3_read_assign_reg_505 );

    SC_METHOD(thread_tmp_3_fu_873_p3);
    sensitive << ( a_3_read_assign_reg_505 );
    sensitive << ( or_cond_fu_859_p2 );
    sensitive << ( newSel_fu_865_p3 );

    SC_METHOD(thread_tmp_40_fu_1094_p1);
    sensitive << ( tmp_39_fu_1089_p2 );

    SC_METHOD(thread_tmp_42_fu_785_p1);
    sensitive << ( i_i_reg_547 );

    SC_METHOD(thread_tmp_43_fu_828_p4);
    sensitive << ( i_1_reg_440 );

    SC_METHOD(thread_tmp_44_fu_927_p4);
    sensitive << ( i_assign_1_fu_921_p2 );

    SC_METHOD(thread_tmp_45_fu_943_p2);
    sensitive << ( a_assign_reg_558 );

    SC_METHOD(thread_tmp_46_fu_949_p3);
    sensitive << ( a_assign_reg_558 );

    SC_METHOD(thread_tmp_fu_789_p5);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( i_i_reg_547 );

    SC_METHOD(thread_tmp_s_fu_621_p3);
    sensitive << ( i_1_reg_440 );

    SC_METHOD(thread_w_3_read_assign_1_fu_712_p3);
    sensitive << ( tmp_1_1_reg_484 );
    sensitive << ( sel_tmp2_i_fu_706_p2 );
    sensitive << ( w_3_read_assign_fu_699_p3 );

    SC_METHOD(thread_w_3_read_assign_3_fu_726_p3);
    sensitive << ( w_3_read_assign_2_reg_463 );
    sensitive << ( tmp_1_1_reg_484 );
    sensitive << ( sel_tmp2_i_fu_706_p2 );

    SC_METHOD(thread_w_3_read_assign_4_fu_734_p3);
    sensitive << ( tmp_2_1_reg_474 );
    sensitive << ( sel_tmp_i_fu_693_p2 );
    sensitive << ( w_3_read_assign_1_fu_712_p3 );

    SC_METHOD(thread_w_3_read_assign_5_fu_742_p3);
    sensitive << ( tmp_2_1_reg_474 );
    sensitive << ( sel_tmp2_i_fu_706_p2 );
    sensitive << ( w_3_read_assign_4_fu_734_p3 );

    SC_METHOD(thread_w_3_read_assign_6_fu_750_p3);
    sensitive << ( tmp_1_1_reg_484 );
    sensitive << ( sel_tmp_i_fu_693_p2 );
    sensitive << ( w_3_read_assign_1_fu_712_p3 );

    SC_METHOD(thread_w_3_read_assign_7_fu_758_p3);
    sensitive << ( tmp_1_1_reg_484 );
    sensitive << ( sel_tmp2_i_fu_706_p2 );
    sensitive << ( w_3_read_assign_6_fu_750_p3 );

    SC_METHOD(thread_w_3_read_assign_fu_699_p3);
    sensitive << ( tmp_3_1_reg_1155 );
    sensitive << ( tmp_2_1_reg_474 );
    sensitive << ( sel_tmp_i_fu_693_p2 );

    SC_METHOD(thread_w_address0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( tmp_12_fu_635_p1 );
    sensitive << ( tmp_16_fu_656_p1 );
    sensitive << ( tmp_23_fu_1000_p1 );
    sensitive << ( tmp_32_fu_1038_p1 );
    sensitive << ( tmp_25_fu_1053_p1 );
    sensitive << ( tmp_35_fu_1084_p1 );

    SC_METHOD(thread_w_address1);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( tmp_14_fu_646_p1 );
    sensitive << ( tmp_18_fu_666_p1 );
    sensitive << ( tmp_27_fu_1010_p1 );
    sensitive << ( tmp_37_fu_1048_p1 );
    sensitive << ( tmp_30_fu_1062_p1 );
    sensitive << ( tmp_40_fu_1094_p1 );

    SC_METHOD(thread_w_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_w_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_w_d0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( tmp_24_reg_1298 );
    sensitive << ( tmp_33_reg_1318 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_w_d1);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( tmp_28_reg_1303 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( tmp_38_reg_1323 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_w_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_w_we1);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_write_flag_1_i_fu_720_p2);
    sensitive << ( write_flag_i_reg_452 );
    sensitive << ( sel_tmp2_i_fu_706_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_615_p2 );
    sensitive << ( tmp_19_fu_675_p2 );
    sensitive << ( exitcond_i1_fu_681_p2 );
    sensitive << ( exitcond_i_fu_773_p2 );
    sensitive << ( icmp_reg_1226 );
    sensitive << ( tmp_20_fu_822_p2 );
    sensitive << ( icmp9_fu_937_p2 );

    ap_CS_fsm = "000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "single_block_AES_encrypt_aes_key_expansion_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, w_address0, "(port)w_address0");
    sc_trace(mVcdFile, w_ce0, "(port)w_ce0");
    sc_trace(mVcdFile, w_we0, "(port)w_we0");
    sc_trace(mVcdFile, w_d0, "(port)w_d0");
    sc_trace(mVcdFile, w_q0, "(port)w_q0");
    sc_trace(mVcdFile, w_address1, "(port)w_address1");
    sc_trace(mVcdFile, w_ce1, "(port)w_ce1");
    sc_trace(mVcdFile, w_we1, "(port)w_we1");
    sc_trace(mVcdFile, w_d1, "(port)w_d1");
    sc_trace(mVcdFile, w_q1, "(port)w_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_38, "ap_sig_38");
    sc_trace(mVcdFile, s_box_address0, "s_box_address0");
    sc_trace(mVcdFile, s_box_ce0, "s_box_ce0");
    sc_trace(mVcdFile, s_box_q0, "s_box_q0");
    sc_trace(mVcdFile, R_address0, "R_address0");
    sc_trace(mVcdFile, R_ce0, "R_ce0");
    sc_trace(mVcdFile, R_we0, "R_we0");
    sc_trace(mVcdFile, R_d0, "R_d0");
    sc_trace(mVcdFile, R_q0, "R_q0");
    sc_trace(mVcdFile, R_address1, "R_address1");
    sc_trace(mVcdFile, R_ce1, "R_ce1");
    sc_trace(mVcdFile, R_q1, "R_q1");
    sc_trace(mVcdFile, tmp_s_fu_621_p3, "tmp_s_fu_621_p3");
    sc_trace(mVcdFile, tmp_s_reg_1102, "tmp_s_reg_1102");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_83, "ap_sig_83");
    sc_trace(mVcdFile, exitcond_fu_615_p2, "exitcond_fu_615_p2");
    sc_trace(mVcdFile, tmp_47_reg_1126, "tmp_47_reg_1126");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_99, "ap_sig_99");
    sc_trace(mVcdFile, tmp_1_reg_1133, "tmp_1_reg_1133");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_112, "ap_sig_112");
    sc_trace(mVcdFile, tmp_3_1_reg_1155, "tmp_3_1_reg_1155");
    sc_trace(mVcdFile, tmp_19_fu_675_p2, "tmp_19_fu_675_p2");
    sc_trace(mVcdFile, tmp_19_reg_1161, "tmp_19_reg_1161");
    sc_trace(mVcdFile, i_3_fu_687_p2, "i_3_fu_687_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_124, "ap_sig_124");
    sc_trace(mVcdFile, write_flag_1_i_fu_720_p2, "write_flag_1_i_fu_720_p2");
    sc_trace(mVcdFile, exitcond_i1_fu_681_p2, "exitcond_i1_fu_681_p2");
    sc_trace(mVcdFile, w_3_read_assign_3_fu_726_p3, "w_3_read_assign_3_fu_726_p3");
    sc_trace(mVcdFile, w_3_read_assign_5_fu_742_p3, "w_3_read_assign_5_fu_742_p3");
    sc_trace(mVcdFile, w_3_read_assign_7_fu_758_p3, "w_3_read_assign_7_fu_758_p3");
    sc_trace(mVcdFile, tmp_0_1_fu_766_p3, "tmp_0_1_fu_766_p3");
    sc_trace(mVcdFile, i_2_fu_779_p2, "i_2_fu_779_p2");
    sc_trace(mVcdFile, i_2_reg_1201, "i_2_reg_1201");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_148, "ap_sig_148");
    sc_trace(mVcdFile, tmp_42_fu_785_p1, "tmp_42_fu_785_p1");
    sc_trace(mVcdFile, tmp_42_reg_1206, "tmp_42_reg_1206");
    sc_trace(mVcdFile, exitcond_i_fu_773_p2, "exitcond_i_fu_773_p2");
    sc_trace(mVcdFile, i_assign_cast1_fu_818_p1, "i_assign_cast1_fu_818_p1");
    sc_trace(mVcdFile, icmp_fu_838_p2, "icmp_fu_838_p2");
    sc_trace(mVcdFile, icmp_reg_1226, "icmp_reg_1226");
    sc_trace(mVcdFile, tmp_20_fu_822_p2, "tmp_20_fu_822_p2");
    sc_trace(mVcdFile, tmp_3_fu_873_p3, "tmp_3_fu_873_p3");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st14_fsm_13, "ap_sig_cseq_ST_st14_fsm_13");
    sc_trace(mVcdFile, ap_sig_174, "ap_sig_174");
    sc_trace(mVcdFile, tmp_3_4_fu_889_p3, "tmp_3_4_fu_889_p3");
    sc_trace(mVcdFile, tmp_3_7_fu_905_p3, "tmp_3_7_fu_905_p3");
    sc_trace(mVcdFile, tmp_3_8_fu_913_p3, "tmp_3_8_fu_913_p3");
    sc_trace(mVcdFile, i_assign_1_fu_921_p2, "i_assign_1_fu_921_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st15_fsm_14, "ap_sig_cseq_ST_st15_fsm_14");
    sc_trace(mVcdFile, ap_sig_189, "ap_sig_189");
    sc_trace(mVcdFile, a_assign_2_i_fu_963_p3, "a_assign_2_i_fu_963_p3");
    sc_trace(mVcdFile, icmp9_fu_937_p2, "icmp9_fu_937_p2");
    sc_trace(mVcdFile, tmp_1_3_fu_971_p2, "tmp_1_3_fu_971_p2");
    sc_trace(mVcdFile, tmp_1_3_reg_1263, "tmp_1_3_reg_1263");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_16, "ap_sig_cseq_ST_st17_fsm_16");
    sc_trace(mVcdFile, ap_sig_206, "ap_sig_206");
    sc_trace(mVcdFile, tmp_2_3_fu_977_p2, "tmp_2_3_fu_977_p2");
    sc_trace(mVcdFile, tmp_2_3_reg_1268, "tmp_2_3_reg_1268");
    sc_trace(mVcdFile, tmp_0_fu_983_p2, "tmp_0_fu_983_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_17, "ap_sig_cseq_ST_st18_fsm_17");
    sc_trace(mVcdFile, ap_sig_217, "ap_sig_217");
    sc_trace(mVcdFile, tmp_3_9_fu_989_p2, "tmp_3_9_fu_989_p2");
    sc_trace(mVcdFile, i_fu_1015_p2, "i_fu_1015_p2");
    sc_trace(mVcdFile, i_reg_1293, "i_reg_1293");
    sc_trace(mVcdFile, tmp_24_fu_1021_p2, "tmp_24_fu_1021_p2");
    sc_trace(mVcdFile, tmp_24_reg_1298, "tmp_24_reg_1298");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st19_fsm_18, "ap_sig_cseq_ST_st19_fsm_18");
    sc_trace(mVcdFile, ap_sig_237, "ap_sig_237");
    sc_trace(mVcdFile, tmp_28_fu_1027_p2, "tmp_28_fu_1027_p2");
    sc_trace(mVcdFile, tmp_28_reg_1303, "tmp_28_reg_1303");
    sc_trace(mVcdFile, tmp_33_fu_1067_p2, "tmp_33_fu_1067_p2");
    sc_trace(mVcdFile, tmp_33_reg_1318, "tmp_33_reg_1318");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st20_fsm_19, "ap_sig_cseq_ST_st20_fsm_19");
    sc_trace(mVcdFile, ap_sig_252, "ap_sig_252");
    sc_trace(mVcdFile, tmp_38_fu_1073_p2, "tmp_38_fu_1073_p2");
    sc_trace(mVcdFile, tmp_38_reg_1323, "tmp_38_reg_1323");
    sc_trace(mVcdFile, i_1_reg_440, "i_1_reg_440");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st21_fsm_20, "ap_sig_cseq_ST_st21_fsm_20");
    sc_trace(mVcdFile, ap_sig_263, "ap_sig_263");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_271, "ap_sig_271");
    sc_trace(mVcdFile, write_flag_i_reg_452, "write_flag_i_reg_452");
    sc_trace(mVcdFile, w_3_read_assign_2_reg_463, "w_3_read_assign_2_reg_463");
    sc_trace(mVcdFile, tmp_2_1_reg_474, "tmp_2_1_reg_474");
    sc_trace(mVcdFile, tmp_1_1_reg_484, "tmp_1_1_reg_484");
    sc_trace(mVcdFile, i_i1_reg_494, "i_i1_reg_494");
    sc_trace(mVcdFile, a_3_read_assign_reg_505, "a_3_read_assign_reg_505");
    sc_trace(mVcdFile, a_2_read_assign_reg_515, "a_2_read_assign_reg_515");
    sc_trace(mVcdFile, tmp_3_3_reg_526, "tmp_3_3_reg_526");
    sc_trace(mVcdFile, tmp_3_6_reg_537, "tmp_3_6_reg_537");
    sc_trace(mVcdFile, i_i_reg_547, "i_i_reg_547");
    sc_trace(mVcdFile, a_assign_reg_558, "a_assign_reg_558");
    sc_trace(mVcdFile, p_0_in_i_reg_570, "p_0_in_i_reg_570");
    sc_trace(mVcdFile, tmp_1_s_reg_579, "tmp_1_s_reg_579");
    sc_trace(mVcdFile, tmp_0_s_reg_588, "tmp_0_s_reg_588");
    sc_trace(mVcdFile, tmp_3_s_reg_597, "tmp_3_s_reg_597");
    sc_trace(mVcdFile, tmp_2_3_2_reg_606, "tmp_2_3_2_reg_606");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_327, "ap_sig_327");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_338, "ap_sig_338");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_349, "ap_sig_349");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_360, "ap_sig_360");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_371, "ap_sig_371");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_382, "ap_sig_382");
    sc_trace(mVcdFile, tmp_12_fu_635_p1, "tmp_12_fu_635_p1");
    sc_trace(mVcdFile, tmp_14_fu_646_p1, "tmp_14_fu_646_p1");
    sc_trace(mVcdFile, tmp_16_fu_656_p1, "tmp_16_fu_656_p1");
    sc_trace(mVcdFile, tmp_18_fu_666_p1, "tmp_18_fu_666_p1");
    sc_trace(mVcdFile, tmp_1_i_fu_803_p1, "tmp_1_i_fu_803_p1");
    sc_trace(mVcdFile, tmp_23_fu_1000_p1, "tmp_23_fu_1000_p1");
    sc_trace(mVcdFile, tmp_27_fu_1010_p1, "tmp_27_fu_1010_p1");
    sc_trace(mVcdFile, tmp_32_fu_1038_p1, "tmp_32_fu_1038_p1");
    sc_trace(mVcdFile, tmp_37_fu_1048_p1, "tmp_37_fu_1048_p1");
    sc_trace(mVcdFile, tmp_25_fu_1053_p1, "tmp_25_fu_1053_p1");
    sc_trace(mVcdFile, tmp_30_fu_1062_p1, "tmp_30_fu_1062_p1");
    sc_trace(mVcdFile, tmp_35_fu_1084_p1, "tmp_35_fu_1084_p1");
    sc_trace(mVcdFile, tmp_40_fu_1094_p1, "tmp_40_fu_1094_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_460, "ap_sig_460");
    sc_trace(mVcdFile, tmp_11_fu_629_p2, "tmp_11_fu_629_p2");
    sc_trace(mVcdFile, tmp_13_fu_640_p2, "tmp_13_fu_640_p2");
    sc_trace(mVcdFile, tmp_15_fu_651_p2, "tmp_15_fu_651_p2");
    sc_trace(mVcdFile, tmp_17_fu_661_p2, "tmp_17_fu_661_p2");
    sc_trace(mVcdFile, tmp_22_fu_671_p1, "tmp_22_fu_671_p1");
    sc_trace(mVcdFile, sel_tmp_i_fu_693_p2, "sel_tmp_i_fu_693_p2");
    sc_trace(mVcdFile, sel_tmp2_i_fu_706_p2, "sel_tmp2_i_fu_706_p2");
    sc_trace(mVcdFile, w_3_read_assign_fu_699_p3, "w_3_read_assign_fu_699_p3");
    sc_trace(mVcdFile, w_3_read_assign_1_fu_712_p3, "w_3_read_assign_1_fu_712_p3");
    sc_trace(mVcdFile, w_3_read_assign_4_fu_734_p3, "w_3_read_assign_4_fu_734_p3");
    sc_trace(mVcdFile, w_3_read_assign_6_fu_750_p3, "w_3_read_assign_6_fu_750_p3");
    sc_trace(mVcdFile, tmp_fu_789_p5, "tmp_fu_789_p5");
    sc_trace(mVcdFile, tmp_fu_789_p6, "tmp_fu_789_p6");
    sc_trace(mVcdFile, i_assign_fu_808_p4, "i_assign_fu_808_p4");
    sc_trace(mVcdFile, tmp_43_fu_828_p4, "tmp_43_fu_828_p4");
    sc_trace(mVcdFile, sel_tmp1_fu_854_p2, "sel_tmp1_fu_854_p2");
    sc_trace(mVcdFile, sel_tmp8_fu_849_p2, "sel_tmp8_fu_849_p2");
    sc_trace(mVcdFile, sel_tmp_fu_844_p2, "sel_tmp_fu_844_p2");
    sc_trace(mVcdFile, or_cond_fu_859_p2, "or_cond_fu_859_p2");
    sc_trace(mVcdFile, newSel_fu_865_p3, "newSel_fu_865_p3");
    sc_trace(mVcdFile, newSel2_fu_881_p3, "newSel2_fu_881_p3");
    sc_trace(mVcdFile, tmp_3_5_fu_897_p3, "tmp_3_5_fu_897_p3");
    sc_trace(mVcdFile, tmp_44_fu_927_p4, "tmp_44_fu_927_p4");
    sc_trace(mVcdFile, tmp_45_fu_943_p2, "tmp_45_fu_943_p2");
    sc_trace(mVcdFile, tmp_46_fu_949_p3, "tmp_46_fu_949_p3");
    sc_trace(mVcdFile, a_assign_1_i_fu_957_p2, "a_assign_1_i_fu_957_p2");
    sc_trace(mVcdFile, tmp_21_fu_995_p2, "tmp_21_fu_995_p2");
    sc_trace(mVcdFile, tmp_26_fu_1005_p2, "tmp_26_fu_1005_p2");
    sc_trace(mVcdFile, tmp_31_fu_1033_p2, "tmp_31_fu_1033_p2");
    sc_trace(mVcdFile, tmp_36_fu_1043_p2, "tmp_36_fu_1043_p2");
    sc_trace(mVcdFile, tmp_29_fu_1057_p2, "tmp_29_fu_1057_p2");
    sc_trace(mVcdFile, tmp_34_fu_1079_p2, "tmp_34_fu_1079_p2");
    sc_trace(mVcdFile, tmp_39_fu_1089_p2, "tmp_39_fu_1089_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

single_block_AES_encrypt_aes_key_expansion::~single_block_AES_encrypt_aes_key_expansion() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete s_box_U;
    delete R_U;
    delete single_block_AES_encrypt_mux_4to1_sel2_8_1_U0;
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        a_2_read_assign_reg_515 = tmp_3_4_fu_889_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_681_p2.read()))) {
        a_2_read_assign_reg_515 = tmp_2_1_reg_474.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        a_3_read_assign_reg_505 = tmp_3_fu_873_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_681_p2.read()))) {
        a_3_read_assign_reg_505 = tmp_47_reg_1126.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_773_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_fu_822_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_838_p2.read()))) {
        a_assign_reg_558 = ap_const_lv8_2;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1226.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp9_fu_937_p2.read()))) {
        a_assign_reg_558 = a_assign_2_i_fu_963_p3.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        i_1_reg_440 = ap_const_lv6_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        i_1_reg_440 = i_reg_1293.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_675_p2.read()))) {
        i_i1_reg_494 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_681_p2.read()))) {
        i_i1_reg_494 = i_3_fu_687_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        i_i_reg_547 = i_2_reg_1201.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_681_p2.read()))) {
        i_i_reg_547 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_773_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_fu_822_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_838_p2.read()))) {
        p_0_in_i_reg_570 = i_assign_cast1_fu_818_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1226.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp9_fu_937_p2.read()))) {
        p_0_in_i_reg_570 = i_assign_1_fu_921_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_675_p2.read()))) {
        tmp_0_s_reg_588 = tmp_47_reg_1126.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_1161.read()))) {
        tmp_0_s_reg_588 = tmp_0_fu_983_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_675_p2.read()))) {
        tmp_1_1_reg_484 = tmp_1_reg_1133.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_681_p2.read()))) {
        tmp_1_1_reg_484 = w_3_read_assign_7_fu_758_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_675_p2.read()))) {
        tmp_1_s_reg_579 = tmp_1_reg_1133.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_1161.read()))) {
        tmp_1_s_reg_579 = tmp_1_3_reg_1263.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_675_p2.read()))) {
        tmp_2_1_reg_474 = w_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_681_p2.read()))) {
        tmp_2_1_reg_474 = w_3_read_assign_5_fu_742_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_675_p2.read()))) {
        tmp_2_3_2_reg_606 = w_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_1161.read()))) {
        tmp_2_3_2_reg_606 = tmp_2_3_reg_1268.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        tmp_3_3_reg_526 = tmp_3_7_fu_905_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_681_p2.read()))) {
        tmp_3_3_reg_526 = tmp_1_1_reg_484.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        tmp_3_6_reg_537 = tmp_3_8_fu_913_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_681_p2.read()))) {
        tmp_3_6_reg_537 = tmp_0_1_fu_766_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_675_p2.read()))) {
        tmp_3_s_reg_597 = w_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_1161.read()))) {
        tmp_3_s_reg_597 = tmp_3_9_fu_989_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_675_p2.read()))) {
        write_flag_i_reg_452 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_681_p2.read()))) {
        write_flag_i_reg_452 = write_flag_1_i_fu_720_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        i_2_reg_1201 = i_2_fu_779_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        i_reg_1293 = i_fu_1015_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_773_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_fu_822_p2.read()))) {
        icmp_reg_1226 = icmp_fu_838_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        tmp_19_reg_1161 = tmp_19_fu_675_p2.read();
        tmp_3_1_reg_1155 = w_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        tmp_1_3_reg_1263 = tmp_1_3_fu_971_p2.read();
        tmp_2_3_reg_1268 = tmp_2_3_fu_977_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        tmp_1_reg_1133 = w_q1.read();
        tmp_47_reg_1126 = w_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        tmp_24_reg_1298 = tmp_24_fu_1021_p2.read();
        tmp_28_reg_1303 = tmp_28_fu_1027_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        tmp_33_reg_1318 = tmp_33_fu_1067_p2.read();
        tmp_38_reg_1323 = tmp_38_fu_1073_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_773_p2.read()))) {
        tmp_42_reg_1206 = tmp_42_fu_785_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) && esl_seteq<1,1,1>(exitcond_fu_615_p2.read(), ap_const_lv1_0))) {
        tmp_s_reg_1102 = tmp_s_fu_621_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_681_p2.read()))) {
        w_3_read_assign_2_reg_463 = w_3_read_assign_3_fu_726_p3.read();
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_R_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()))) {
        R_address0 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        R_address0 = ap_const_lv2_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        R_address0 = ap_const_lv2_1;
    } else {
        R_address0 = "XX";
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_R_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        R_address1 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        R_address1 = ap_const_lv2_2;
    } else {
        R_address1 = "XX";
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_R_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        R_ce0 = ap_const_logic_1;
    } else {
        R_ce0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_R_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        R_ce1 = ap_const_logic_1;
    } else {
        R_ce1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_R_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read())) {
        R_d0 = a_assign_reg_558.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        R_d0 = ap_const_lv8_1;
    } else {
        R_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_R_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_773_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_fu_822_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1226.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp9_fu_937_p2.read())))) {
        R_we0 = ap_const_logic_1;
    } else {
        R_we0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_a_assign_1_i_fu_957_p2() {
    a_assign_1_i_fu_957_p2 = (tmp_45_fu_943_p2.read() ^ ap_const_lv8_1B);
}

void single_block_AES_encrypt_aes_key_expansion::thread_a_assign_2_i_fu_963_p3() {
    a_assign_2_i_fu_963_p3 = (!tmp_46_fu_949_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_46_fu_949_p3.read()[0].to_bool())? a_assign_1_i_fu_957_p2.read(): tmp_45_fu_943_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) && 
          !esl_seteq<1,1,1>(exitcond_fu_615_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) && 
         !esl_seteq<1,1,1>(exitcond_fu_615_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_112() {
    ap_sig_112 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_124() {
    ap_sig_124 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_148() {
    ap_sig_148 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_174() {
    ap_sig_174 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_189() {
    ap_sig_189 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_206() {
    ap_sig_206 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_217() {
    ap_sig_217 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_237() {
    ap_sig_237 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(18, 18));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_252() {
    ap_sig_252 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_263() {
    ap_sig_263 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(20, 20));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_271() {
    ap_sig_271 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_327() {
    ap_sig_327 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_338() {
    ap_sig_338 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_349() {
    ap_sig_349 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_360() {
    ap_sig_360 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_371() {
    ap_sig_371 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_38() {
    ap_sig_38 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_382() {
    ap_sig_382 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_460() {
    ap_sig_460 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_83() {
    ap_sig_83 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_99() {
    ap_sig_99 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_99.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_112.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_124.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_148.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st14_fsm_13() {
    if (ap_sig_174.read()) {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st15_fsm_14() {
    if (ap_sig_189.read()) {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_460.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st17_fsm_16() {
    if (ap_sig_206.read()) {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st18_fsm_17() {
    if (ap_sig_217.read()) {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st19_fsm_18() {
    if (ap_sig_237.read()) {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_38.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st20_fsm_19() {
    if (ap_sig_252.read()) {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st21_fsm_20() {
    if (ap_sig_263.read()) {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_327.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_338.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_349.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_360.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_371.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_382.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_271.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_83.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_exitcond_fu_615_p2() {
    exitcond_fu_615_p2 = (!i_1_reg_440.read().is_01() || !ap_const_lv6_2C.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_440.read() == ap_const_lv6_2C);
}

void single_block_AES_encrypt_aes_key_expansion::thread_exitcond_i1_fu_681_p2() {
    exitcond_i1_fu_681_p2 = (!i_i1_reg_494.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_i1_reg_494.read() == ap_const_lv2_3);
}

void single_block_AES_encrypt_aes_key_expansion::thread_exitcond_i_fu_773_p2() {
    exitcond_i_fu_773_p2 = (!i_i_reg_547.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_547.read() == ap_const_lv3_4);
}

void single_block_AES_encrypt_aes_key_expansion::thread_i_2_fu_779_p2() {
    i_2_fu_779_p2 = (!i_i_reg_547.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_i_reg_547.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void single_block_AES_encrypt_aes_key_expansion::thread_i_3_fu_687_p2() {
    i_3_fu_687_p2 = (!i_i1_reg_494.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_i1_reg_494.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void single_block_AES_encrypt_aes_key_expansion::thread_i_assign_1_fu_921_p2() {
    i_assign_1_fu_921_p2 = (!p_0_in_i_reg_570.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<8>(): (sc_biguint<8>(p_0_in_i_reg_570.read()) + sc_bigint<8>(ap_const_lv8_FF));
}

void single_block_AES_encrypt_aes_key_expansion::thread_i_assign_cast1_fu_818_p1() {
    i_assign_cast1_fu_818_p1 = esl_zext<8,4>(i_assign_fu_808_p4.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_i_assign_fu_808_p4() {
    i_assign_fu_808_p4 = i_1_reg_440.read().range(5, 2);
}

void single_block_AES_encrypt_aes_key_expansion::thread_i_fu_1015_p2() {
    i_fu_1015_p2 = (!i_1_reg_440.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_reg_440.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void single_block_AES_encrypt_aes_key_expansion::thread_icmp9_fu_937_p2() {
    icmp9_fu_937_p2 = (!tmp_44_fu_927_p4.read().is_01() || !ap_const_lv7_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_44_fu_927_p4.read() == ap_const_lv7_0);
}

void single_block_AES_encrypt_aes_key_expansion::thread_icmp_fu_838_p2() {
    icmp_fu_838_p2 = (!tmp_43_fu_828_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_43_fu_828_p4.read() == ap_const_lv3_0);
}

void single_block_AES_encrypt_aes_key_expansion::thread_newSel2_fu_881_p3() {
    newSel2_fu_881_p3 = (!sel_tmp_fu_844_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp_fu_844_p2.read()[0].to_bool())? s_box_q0.read(): a_2_read_assign_reg_515.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_newSel_fu_865_p3() {
    newSel_fu_865_p3 = (!sel_tmp_fu_844_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp_fu_844_p2.read()[0].to_bool())? a_3_read_assign_reg_505.read(): s_box_q0.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_or_cond_fu_859_p2() {
    or_cond_fu_859_p2 = (sel_tmp1_fu_854_p2.read() | sel_tmp8_fu_849_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_s_box_address0() {
    s_box_address0 =  (sc_lv<8>) (tmp_1_i_fu_803_p1.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_s_box_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        s_box_ce0 = ap_const_logic_1;
    } else {
        s_box_ce0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_sel_tmp1_fu_854_p2() {
    sel_tmp1_fu_854_p2 = (!tmp_42_reg_1206.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_42_reg_1206.read() == ap_const_lv2_0);
}

void single_block_AES_encrypt_aes_key_expansion::thread_sel_tmp2_i_fu_706_p2() {
    sel_tmp2_i_fu_706_p2 = (!i_i1_reg_494.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(i_i1_reg_494.read() == ap_const_lv2_0);
}

void single_block_AES_encrypt_aes_key_expansion::thread_sel_tmp8_fu_849_p2() {
    sel_tmp8_fu_849_p2 = (!tmp_42_reg_1206.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_42_reg_1206.read() == ap_const_lv2_1);
}

void single_block_AES_encrypt_aes_key_expansion::thread_sel_tmp_fu_844_p2() {
    sel_tmp_fu_844_p2 = (!tmp_42_reg_1206.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_42_reg_1206.read() == ap_const_lv2_2);
}

void single_block_AES_encrypt_aes_key_expansion::thread_sel_tmp_i_fu_693_p2() {
    sel_tmp_i_fu_693_p2 = (!i_i1_reg_494.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(i_i1_reg_494.read() == ap_const_lv2_1);
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_0_1_fu_766_p3() {
    tmp_0_1_fu_766_p3 = (!write_flag_i_reg_452.read()[0].is_01())? sc_lv<8>(): ((write_flag_i_reg_452.read()[0].to_bool())? w_3_read_assign_2_reg_463.read(): tmp_47_reg_1126.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_0_fu_983_p2() {
    tmp_0_fu_983_p2 = (R_q1.read() ^ tmp_3_6_reg_537.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_11_fu_629_p2() {
    tmp_11_fu_629_p2 = (!ap_const_lv8_FC.is_01() || !tmp_s_fu_621_p3.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FC) + sc_biguint<8>(tmp_s_fu_621_p3.read()));
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_12_fu_635_p1() {
    tmp_12_fu_635_p1 = esl_zext<64,8>(tmp_11_fu_629_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_13_fu_640_p2() {
    tmp_13_fu_640_p2 = (!ap_const_lv8_FD.is_01() || !tmp_s_fu_621_p3.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FD) + sc_biguint<8>(tmp_s_fu_621_p3.read()));
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_14_fu_646_p1() {
    tmp_14_fu_646_p1 = esl_zext<64,8>(tmp_13_fu_640_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_15_fu_651_p2() {
    tmp_15_fu_651_p2 = (!ap_const_lv8_FE.is_01() || !tmp_s_reg_1102.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FE) + sc_biguint<8>(tmp_s_reg_1102.read()));
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_16_fu_656_p1() {
    tmp_16_fu_656_p1 = esl_zext<64,8>(tmp_15_fu_651_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_17_fu_661_p2() {
    tmp_17_fu_661_p2 = (!ap_const_lv8_FF.is_01() || !tmp_s_reg_1102.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FF) + sc_biguint<8>(tmp_s_reg_1102.read()));
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_18_fu_666_p1() {
    tmp_18_fu_666_p1 = esl_zext<64,8>(tmp_17_fu_661_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_19_fu_675_p2() {
    tmp_19_fu_675_p2 = (!tmp_22_fu_671_p1.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_22_fu_671_p1.read() == ap_const_lv2_0);
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_1_3_fu_971_p2() {
    tmp_1_3_fu_971_p2 = (R_q0.read() ^ tmp_3_3_reg_526.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_1_i_fu_803_p1() {
    tmp_1_i_fu_803_p1 = esl_zext<64,8>(tmp_fu_789_p6.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_20_fu_822_p2() {
    tmp_20_fu_822_p2 = (!i_assign_fu_808_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<1>(): sc_lv<1>(i_assign_fu_808_p4.read() == ap_const_lv4_1);
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_21_fu_995_p2() {
    tmp_21_fu_995_p2 = (!tmp_s_reg_1102.read().is_01() || !ap_const_lv8_F0.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_s_reg_1102.read()) + sc_bigint<8>(ap_const_lv8_F0));
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_22_fu_671_p1() {
    tmp_22_fu_671_p1 = i_1_reg_440.read().range(2-1, 0);
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_23_fu_1000_p1() {
    tmp_23_fu_1000_p1 = esl_zext<64,8>(tmp_21_fu_995_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_24_fu_1021_p2() {
    tmp_24_fu_1021_p2 = (w_q0.read() ^ tmp_0_s_reg_588.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_25_fu_1053_p1() {
    tmp_25_fu_1053_p1 = esl_zext<64,8>(tmp_s_reg_1102.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_26_fu_1005_p2() {
    tmp_26_fu_1005_p2 = (!tmp_s_reg_1102.read().is_01() || !ap_const_lv8_F1.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_s_reg_1102.read()) + sc_bigint<8>(ap_const_lv8_F1));
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_27_fu_1010_p1() {
    tmp_27_fu_1010_p1 = esl_zext<64,8>(tmp_26_fu_1005_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_28_fu_1027_p2() {
    tmp_28_fu_1027_p2 = (w_q1.read() ^ tmp_1_s_reg_579.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_29_fu_1057_p2() {
    tmp_29_fu_1057_p2 = (tmp_s_reg_1102.read() | ap_const_lv8_1);
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_2_3_fu_977_p2() {
    tmp_2_3_fu_977_p2 = (R_q1.read() ^ a_2_read_assign_reg_515.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_30_fu_1062_p1() {
    tmp_30_fu_1062_p1 = esl_zext<64,8>(tmp_29_fu_1057_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_31_fu_1033_p2() {
    tmp_31_fu_1033_p2 = (!tmp_s_reg_1102.read().is_01() || !ap_const_lv8_F2.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_s_reg_1102.read()) + sc_bigint<8>(ap_const_lv8_F2));
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_32_fu_1038_p1() {
    tmp_32_fu_1038_p1 = esl_zext<64,8>(tmp_31_fu_1033_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_33_fu_1067_p2() {
    tmp_33_fu_1067_p2 = (w_q0.read() ^ tmp_2_3_2_reg_606.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_34_fu_1079_p2() {
    tmp_34_fu_1079_p2 = (tmp_s_reg_1102.read() | ap_const_lv8_2);
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_35_fu_1084_p1() {
    tmp_35_fu_1084_p1 = esl_zext<64,8>(tmp_34_fu_1079_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_36_fu_1043_p2() {
    tmp_36_fu_1043_p2 = (!tmp_s_reg_1102.read().is_01() || !ap_const_lv8_F3.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_s_reg_1102.read()) + sc_bigint<8>(ap_const_lv8_F3));
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_37_fu_1048_p1() {
    tmp_37_fu_1048_p1 = esl_zext<64,8>(tmp_36_fu_1043_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_38_fu_1073_p2() {
    tmp_38_fu_1073_p2 = (w_q1.read() ^ tmp_3_s_reg_597.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_39_fu_1089_p2() {
    tmp_39_fu_1089_p2 = (tmp_s_reg_1102.read() | ap_const_lv8_3);
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_3_4_fu_889_p3() {
    tmp_3_4_fu_889_p3 = (!or_cond_fu_859_p2.read()[0].is_01())? sc_lv<8>(): ((or_cond_fu_859_p2.read()[0].to_bool())? a_2_read_assign_reg_515.read(): newSel2_fu_881_p3.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_3_5_fu_897_p3() {
    tmp_3_5_fu_897_p3 = (!sel_tmp8_fu_849_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp8_fu_849_p2.read()[0].to_bool())? s_box_q0.read(): tmp_3_3_reg_526.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_3_7_fu_905_p3() {
    tmp_3_7_fu_905_p3 = (!sel_tmp1_fu_854_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp1_fu_854_p2.read()[0].to_bool())? tmp_3_3_reg_526.read(): tmp_3_5_fu_897_p3.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_3_8_fu_913_p3() {
    tmp_3_8_fu_913_p3 = (!sel_tmp1_fu_854_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp1_fu_854_p2.read()[0].to_bool())? s_box_q0.read(): tmp_3_6_reg_537.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_3_9_fu_989_p2() {
    tmp_3_9_fu_989_p2 = (R_q0.read() ^ a_3_read_assign_reg_505.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_3_fu_873_p3() {
    tmp_3_fu_873_p3 = (!or_cond_fu_859_p2.read()[0].is_01())? sc_lv<8>(): ((or_cond_fu_859_p2.read()[0].to_bool())? a_3_read_assign_reg_505.read(): newSel_fu_865_p3.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_40_fu_1094_p1() {
    tmp_40_fu_1094_p1 = esl_zext<64,8>(tmp_39_fu_1089_p2.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_42_fu_785_p1() {
    tmp_42_fu_785_p1 = i_i_reg_547.read().range(2-1, 0);
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_43_fu_828_p4() {
    tmp_43_fu_828_p4 = i_1_reg_440.read().range(5, 3);
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_44_fu_927_p4() {
    tmp_44_fu_927_p4 = i_assign_1_fu_921_p2.read().range(7, 1);
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_45_fu_943_p2() {
    tmp_45_fu_943_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): a_assign_reg_558.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_46_fu_949_p3() {
    tmp_46_fu_949_p3 = a_assign_reg_558.read().range(7, 7);
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_fu_789_p5() {
    tmp_fu_789_p5 = i_i_reg_547.read().range(2-1, 0);
}

void single_block_AES_encrypt_aes_key_expansion::thread_tmp_s_fu_621_p3() {
    tmp_s_fu_621_p3 = esl_concat<6,2>(i_1_reg_440.read(), ap_const_lv2_0);
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_3_read_assign_1_fu_712_p3() {
    w_3_read_assign_1_fu_712_p3 = (!sel_tmp2_i_fu_706_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp2_i_fu_706_p2.read()[0].to_bool())? tmp_1_1_reg_484.read(): w_3_read_assign_fu_699_p3.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_3_read_assign_3_fu_726_p3() {
    w_3_read_assign_3_fu_726_p3 = (!sel_tmp2_i_fu_706_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp2_i_fu_706_p2.read()[0].to_bool())? tmp_1_1_reg_484.read(): w_3_read_assign_2_reg_463.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_3_read_assign_4_fu_734_p3() {
    w_3_read_assign_4_fu_734_p3 = (!sel_tmp_i_fu_693_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp_i_fu_693_p2.read()[0].to_bool())? tmp_2_1_reg_474.read(): w_3_read_assign_1_fu_712_p3.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_3_read_assign_5_fu_742_p3() {
    w_3_read_assign_5_fu_742_p3 = (!sel_tmp2_i_fu_706_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp2_i_fu_706_p2.read()[0].to_bool())? tmp_2_1_reg_474.read(): w_3_read_assign_4_fu_734_p3.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_3_read_assign_6_fu_750_p3() {
    w_3_read_assign_6_fu_750_p3 = (!sel_tmp_i_fu_693_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp_i_fu_693_p2.read()[0].to_bool())? w_3_read_assign_1_fu_712_p3.read(): tmp_1_1_reg_484.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_3_read_assign_7_fu_758_p3() {
    w_3_read_assign_7_fu_758_p3 = (!sel_tmp2_i_fu_706_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp2_i_fu_706_p2.read()[0].to_bool())? tmp_1_1_reg_484.read(): w_3_read_assign_6_fu_750_p3.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_3_read_assign_fu_699_p3() {
    w_3_read_assign_fu_699_p3 = (!sel_tmp_i_fu_693_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp_i_fu_693_p2.read()[0].to_bool())? tmp_2_1_reg_474.read(): tmp_3_1_reg_1155.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        w_address0 =  (sc_lv<8>) (tmp_35_fu_1084_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        w_address0 =  (sc_lv<8>) (tmp_25_fu_1053_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        w_address0 =  (sc_lv<8>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        w_address0 =  (sc_lv<8>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        w_address0 =  (sc_lv<8>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        w_address0 =  (sc_lv<8>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        w_address0 =  (sc_lv<8>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        w_address0 =  (sc_lv<8>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        w_address0 =  (sc_lv<8>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        w_address0 =  (sc_lv<8>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        w_address0 =  (sc_lv<8>) (tmp_32_fu_1038_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        w_address0 =  (sc_lv<8>) (tmp_23_fu_1000_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        w_address0 =  (sc_lv<8>) (tmp_16_fu_656_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        w_address0 =  (sc_lv<8>) (tmp_12_fu_635_p1.read());
    } else {
        w_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        w_address1 =  (sc_lv<8>) (tmp_40_fu_1094_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        w_address1 =  (sc_lv<8>) (tmp_30_fu_1062_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        w_address1 =  (sc_lv<8>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        w_address1 =  (sc_lv<8>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        w_address1 =  (sc_lv<8>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        w_address1 =  (sc_lv<8>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        w_address1 =  (sc_lv<8>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        w_address1 =  (sc_lv<8>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        w_address1 =  (sc_lv<8>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        w_address1 =  (sc_lv<8>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        w_address1 =  (sc_lv<8>) (tmp_37_fu_1048_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        w_address1 =  (sc_lv<8>) (tmp_27_fu_1010_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        w_address1 =  (sc_lv<8>) (tmp_18_fu_666_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        w_address1 =  (sc_lv<8>) (tmp_14_fu_646_p1.read());
    } else {
        w_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        w_ce0 = ap_const_logic_1;
    } else {
        w_ce0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        w_ce1 = ap_const_logic_1;
    } else {
        w_ce1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        w_d0 = tmp_33_reg_1318.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        w_d0 = tmp_24_reg_1298.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        w_d0 = ap_const_lv8_E3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        w_d0 = ap_const_lv8_11;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        w_d0 = ap_const_lv8_D2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        w_d0 = ap_const_lv8_E7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        w_d0 = ap_const_lv8_12;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        w_d0 = ap_const_lv8_6B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        w_d0 = ap_const_lv8_71;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        w_d0 = ap_const_lv8_63;
    } else {
        w_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        w_d1 = tmp_38_reg_1323.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        w_d1 = tmp_28_reg_1303.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        w_d1 = ap_const_lv8_AB;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        w_d1 = ap_const_lv8_15;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        w_d1 = ap_const_lv8_FF;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        w_d1 = ap_const_lv8_67;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        w_d1 = ap_const_lv8_85;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        w_d1 = ap_const_lv8_B2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        w_d1 = ap_const_lv8_E3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        w_d1 = ap_const_lv8_D3;
    } else {
        w_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        w_we0 = ap_const_logic_1;
    } else {
        w_we0 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_w_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        w_we1 = ap_const_logic_1;
    } else {
        w_we1 = ap_const_logic_0;
    }
}

void single_block_AES_encrypt_aes_key_expansion::thread_write_flag_1_i_fu_720_p2() {
    write_flag_1_i_fu_720_p2 = (sel_tmp2_i_fu_706_p2.read() | write_flag_i_reg_452.read());
}

void single_block_AES_encrypt_aes_key_expansion::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            if (!esl_seteq<1,1,1>(exitcond_fu_615_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_675_p2.read())) {
                ap_NS_fsm = ap_ST_st18_fsm_17;
            } else {
                ap_NS_fsm = ap_ST_st12_fsm_11;
            }
            break;
        case 2048 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_681_p2.read())) {
                ap_NS_fsm = ap_ST_st13_fsm_12;
            } else {
                ap_NS_fsm = ap_ST_st12_fsm_11;
            }
            break;
        case 4096 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_773_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_fu_822_p2.read()))) {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_773_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_fu_822_p2.read()))) {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            } else {
                ap_NS_fsm = ap_ST_st14_fsm_13;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 16384 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, icmp9_fu_937_p2.read()) || !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1226.read()))) {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            } else {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<21>) ("XXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}


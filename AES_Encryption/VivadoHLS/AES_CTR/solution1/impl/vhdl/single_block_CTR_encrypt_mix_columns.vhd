-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity single_block_CTR_encrypt_mix_columns is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    state_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    state_ce0 : OUT STD_LOGIC;
    state_we0 : OUT STD_LOGIC;
    state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    state_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of single_block_CTR_encrypt_mix_columns is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_23 : BOOLEAN;
    signal j_2_fu_217_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_2_reg_502 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_43 : BOOLEAN;
    signal tmp_cast_fu_223_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_cast_reg_507 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond2_fu_211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_8_fu_233_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_8_reg_516 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_58 : BOOLEAN;
    signal tmp_11_fu_239_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_reg_521 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond1_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_0_fu_370_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_0_reg_561 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_84 : BOOLEAN;
    signal grp_single_block_CTR_encrypt_gmult_fu_103_ap_done : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_110_ap_done : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_117_ap_done : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_124_ap_done : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_131_ap_done : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_138_ap_done : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_145_ap_done : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_152_ap_done : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_159_ap_done : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_166_ap_done : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_173_ap_done : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_180_ap_done : STD_LOGIC;
    signal res_1_fu_388_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_1_reg_566 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_2_fu_406_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_2_reg_571 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_3_fu_424_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_3_reg_576 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_9_fu_436_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_136 : BOOLEAN;
    signal grp_single_block_CTR_encrypt_gmult_fu_103_ap_start : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_103_ap_idle : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_103_ap_ready : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_103_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_single_block_CTR_encrypt_gmult_fu_110_ap_start : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_110_ap_idle : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_110_ap_ready : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_110_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_single_block_CTR_encrypt_gmult_fu_117_ap_start : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_117_ap_idle : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_117_ap_ready : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_117_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_single_block_CTR_encrypt_gmult_fu_124_ap_start : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_124_ap_idle : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_124_ap_ready : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_124_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_single_block_CTR_encrypt_gmult_fu_131_ap_start : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_131_ap_idle : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_131_ap_ready : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_131_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_single_block_CTR_encrypt_gmult_fu_138_ap_start : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_138_ap_idle : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_138_ap_ready : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_138_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_single_block_CTR_encrypt_gmult_fu_145_ap_start : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_145_ap_idle : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_145_ap_ready : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_145_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_single_block_CTR_encrypt_gmult_fu_152_ap_start : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_152_ap_idle : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_152_ap_ready : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_152_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_single_block_CTR_encrypt_gmult_fu_159_ap_start : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_159_ap_idle : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_159_ap_ready : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_159_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_single_block_CTR_encrypt_gmult_fu_166_ap_start : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_166_ap_idle : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_166_ap_ready : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_166_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_single_block_CTR_encrypt_gmult_fu_173_ap_start : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_173_ap_idle : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_173_ap_ready : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_173_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_single_block_CTR_encrypt_gmult_fu_180_ap_start : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_180_ap_idle : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_180_ap_ready : STD_LOGIC;
    signal grp_single_block_CTR_encrypt_gmult_fu_180_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal j_reg_70 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_81 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_240 : BOOLEAN;
    signal i_1_reg_92 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_grp_single_block_CTR_encrypt_gmult_fu_103_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_single_block_CTR_encrypt_gmult_fu_110_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_single_block_CTR_encrypt_gmult_fu_117_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_single_block_CTR_encrypt_gmult_fu_124_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_single_block_CTR_encrypt_gmult_fu_131_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_single_block_CTR_encrypt_gmult_fu_138_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_single_block_CTR_encrypt_gmult_fu_145_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_single_block_CTR_encrypt_gmult_fu_152_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_single_block_CTR_encrypt_gmult_fu_159_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_single_block_CTR_encrypt_gmult_fu_166_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_single_block_CTR_encrypt_gmult_fu_173_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_single_block_CTR_encrypt_gmult_fu_180_ap_start : STD_LOGIC := '0';
    signal tmp_5_fu_256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal col_0_s_fu_34 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_3_5_fu_330_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_1_s_fu_38 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_3_4_fu_322_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_2_s_fu_42 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_3_1_fu_306_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_3_s_fu_46 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_3_fu_290_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_446_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_243_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_251_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp4_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_282_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel2_fu_298_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_3_3_fu_314_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_fu_364_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_358_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_382_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_376_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_fu_400_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp5_fu_394_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_fu_418_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp7_fu_412_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_442_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_457_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_fu_465_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component single_block_CTR_encrypt_gmult IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (3 downto 0);
        b : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component single_block_CTR_encrypt_mux_4to1_sel2_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_single_block_CTR_encrypt_gmult_fu_103 : component single_block_CTR_encrypt_gmult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_block_CTR_encrypt_gmult_fu_103_ap_start,
        ap_done => grp_single_block_CTR_encrypt_gmult_fu_103_ap_done,
        ap_idle => grp_single_block_CTR_encrypt_gmult_fu_103_ap_idle,
        ap_ready => grp_single_block_CTR_encrypt_gmult_fu_103_ap_ready,
        a => ap_const_lv4_2,
        b => col_0_s_fu_34,
        ap_return => grp_single_block_CTR_encrypt_gmult_fu_103_ap_return);

    grp_single_block_CTR_encrypt_gmult_fu_110 : component single_block_CTR_encrypt_gmult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_block_CTR_encrypt_gmult_fu_110_ap_start,
        ap_done => grp_single_block_CTR_encrypt_gmult_fu_110_ap_done,
        ap_idle => grp_single_block_CTR_encrypt_gmult_fu_110_ap_idle,
        ap_ready => grp_single_block_CTR_encrypt_gmult_fu_110_ap_ready,
        a => ap_const_lv4_3,
        b => col_1_s_fu_38,
        ap_return => grp_single_block_CTR_encrypt_gmult_fu_110_ap_return);

    grp_single_block_CTR_encrypt_gmult_fu_117 : component single_block_CTR_encrypt_gmult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_block_CTR_encrypt_gmult_fu_117_ap_start,
        ap_done => grp_single_block_CTR_encrypt_gmult_fu_117_ap_done,
        ap_idle => grp_single_block_CTR_encrypt_gmult_fu_117_ap_idle,
        ap_ready => grp_single_block_CTR_encrypt_gmult_fu_117_ap_ready,
        a => ap_const_lv4_1,
        b => col_2_s_fu_42,
        ap_return => grp_single_block_CTR_encrypt_gmult_fu_117_ap_return);

    grp_single_block_CTR_encrypt_gmult_fu_124 : component single_block_CTR_encrypt_gmult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_block_CTR_encrypt_gmult_fu_124_ap_start,
        ap_done => grp_single_block_CTR_encrypt_gmult_fu_124_ap_done,
        ap_idle => grp_single_block_CTR_encrypt_gmult_fu_124_ap_idle,
        ap_ready => grp_single_block_CTR_encrypt_gmult_fu_124_ap_ready,
        a => ap_const_lv4_1,
        b => col_3_s_fu_46,
        ap_return => grp_single_block_CTR_encrypt_gmult_fu_124_ap_return);

    grp_single_block_CTR_encrypt_gmult_fu_131 : component single_block_CTR_encrypt_gmult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_block_CTR_encrypt_gmult_fu_131_ap_start,
        ap_done => grp_single_block_CTR_encrypt_gmult_fu_131_ap_done,
        ap_idle => grp_single_block_CTR_encrypt_gmult_fu_131_ap_idle,
        ap_ready => grp_single_block_CTR_encrypt_gmult_fu_131_ap_ready,
        a => ap_const_lv4_1,
        b => col_0_s_fu_34,
        ap_return => grp_single_block_CTR_encrypt_gmult_fu_131_ap_return);

    grp_single_block_CTR_encrypt_gmult_fu_138 : component single_block_CTR_encrypt_gmult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_block_CTR_encrypt_gmult_fu_138_ap_start,
        ap_done => grp_single_block_CTR_encrypt_gmult_fu_138_ap_done,
        ap_idle => grp_single_block_CTR_encrypt_gmult_fu_138_ap_idle,
        ap_ready => grp_single_block_CTR_encrypt_gmult_fu_138_ap_ready,
        a => ap_const_lv4_2,
        b => col_1_s_fu_38,
        ap_return => grp_single_block_CTR_encrypt_gmult_fu_138_ap_return);

    grp_single_block_CTR_encrypt_gmult_fu_145 : component single_block_CTR_encrypt_gmult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_block_CTR_encrypt_gmult_fu_145_ap_start,
        ap_done => grp_single_block_CTR_encrypt_gmult_fu_145_ap_done,
        ap_idle => grp_single_block_CTR_encrypt_gmult_fu_145_ap_idle,
        ap_ready => grp_single_block_CTR_encrypt_gmult_fu_145_ap_ready,
        a => ap_const_lv4_3,
        b => col_2_s_fu_42,
        ap_return => grp_single_block_CTR_encrypt_gmult_fu_145_ap_return);

    grp_single_block_CTR_encrypt_gmult_fu_152 : component single_block_CTR_encrypt_gmult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_block_CTR_encrypt_gmult_fu_152_ap_start,
        ap_done => grp_single_block_CTR_encrypt_gmult_fu_152_ap_done,
        ap_idle => grp_single_block_CTR_encrypt_gmult_fu_152_ap_idle,
        ap_ready => grp_single_block_CTR_encrypt_gmult_fu_152_ap_ready,
        a => ap_const_lv4_1,
        b => col_1_s_fu_38,
        ap_return => grp_single_block_CTR_encrypt_gmult_fu_152_ap_return);

    grp_single_block_CTR_encrypt_gmult_fu_159 : component single_block_CTR_encrypt_gmult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_block_CTR_encrypt_gmult_fu_159_ap_start,
        ap_done => grp_single_block_CTR_encrypt_gmult_fu_159_ap_done,
        ap_idle => grp_single_block_CTR_encrypt_gmult_fu_159_ap_idle,
        ap_ready => grp_single_block_CTR_encrypt_gmult_fu_159_ap_ready,
        a => ap_const_lv4_2,
        b => col_2_s_fu_42,
        ap_return => grp_single_block_CTR_encrypt_gmult_fu_159_ap_return);

    grp_single_block_CTR_encrypt_gmult_fu_166 : component single_block_CTR_encrypt_gmult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_block_CTR_encrypt_gmult_fu_166_ap_start,
        ap_done => grp_single_block_CTR_encrypt_gmult_fu_166_ap_done,
        ap_idle => grp_single_block_CTR_encrypt_gmult_fu_166_ap_idle,
        ap_ready => grp_single_block_CTR_encrypt_gmult_fu_166_ap_ready,
        a => ap_const_lv4_3,
        b => col_3_s_fu_46,
        ap_return => grp_single_block_CTR_encrypt_gmult_fu_166_ap_return);

    grp_single_block_CTR_encrypt_gmult_fu_173 : component single_block_CTR_encrypt_gmult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_block_CTR_encrypt_gmult_fu_173_ap_start,
        ap_done => grp_single_block_CTR_encrypt_gmult_fu_173_ap_done,
        ap_idle => grp_single_block_CTR_encrypt_gmult_fu_173_ap_idle,
        ap_ready => grp_single_block_CTR_encrypt_gmult_fu_173_ap_ready,
        a => ap_const_lv4_3,
        b => col_0_s_fu_34,
        ap_return => grp_single_block_CTR_encrypt_gmult_fu_173_ap_return);

    grp_single_block_CTR_encrypt_gmult_fu_180 : component single_block_CTR_encrypt_gmult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_block_CTR_encrypt_gmult_fu_180_ap_start,
        ap_done => grp_single_block_CTR_encrypt_gmult_fu_180_ap_done,
        ap_idle => grp_single_block_CTR_encrypt_gmult_fu_180_ap_idle,
        ap_ready => grp_single_block_CTR_encrypt_gmult_fu_180_ap_ready,
        a => ap_const_lv4_2,
        b => col_3_s_fu_46,
        ap_return => grp_single_block_CTR_encrypt_gmult_fu_180_ap_return);

    single_block_CTR_encrypt_mux_4to1_sel2_8_1_U12 : component single_block_CTR_encrypt_mux_4to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => res_0_reg_561,
        din2 => res_1_reg_566,
        din3 => res_2_reg_571,
        din4 => res_3_reg_576,
        din5 => tmp_12_fu_442_p1,
        dout => tmp_9_fu_446_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_103_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_single_block_CTR_encrypt_gmult_fu_103_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_227_p2)))) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_103_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_single_block_CTR_encrypt_gmult_fu_103_ap_ready)) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_103_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_110_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_single_block_CTR_encrypt_gmult_fu_110_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_227_p2)))) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_110_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_single_block_CTR_encrypt_gmult_fu_110_ap_ready)) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_110_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_117_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_single_block_CTR_encrypt_gmult_fu_117_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_227_p2)))) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_117_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_single_block_CTR_encrypt_gmult_fu_117_ap_ready)) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_117_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_124_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_single_block_CTR_encrypt_gmult_fu_124_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_227_p2)))) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_124_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_single_block_CTR_encrypt_gmult_fu_124_ap_ready)) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_124_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_131_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_single_block_CTR_encrypt_gmult_fu_131_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_227_p2)))) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_131_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_single_block_CTR_encrypt_gmult_fu_131_ap_ready)) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_131_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_138_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_single_block_CTR_encrypt_gmult_fu_138_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_227_p2)))) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_138_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_single_block_CTR_encrypt_gmult_fu_138_ap_ready)) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_138_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_145_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_single_block_CTR_encrypt_gmult_fu_145_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_227_p2)))) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_145_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_single_block_CTR_encrypt_gmult_fu_145_ap_ready)) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_145_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_152_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_single_block_CTR_encrypt_gmult_fu_152_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_227_p2)))) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_152_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_single_block_CTR_encrypt_gmult_fu_152_ap_ready)) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_152_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_159_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_single_block_CTR_encrypt_gmult_fu_159_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_227_p2)))) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_159_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_single_block_CTR_encrypt_gmult_fu_159_ap_ready)) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_159_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_166_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_single_block_CTR_encrypt_gmult_fu_166_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_227_p2)))) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_166_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_single_block_CTR_encrypt_gmult_fu_166_ap_ready)) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_166_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_173_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_single_block_CTR_encrypt_gmult_fu_173_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_227_p2)))) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_173_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_single_block_CTR_encrypt_gmult_fu_173_ap_ready)) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_173_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_180_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_single_block_CTR_encrypt_gmult_fu_180_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_227_p2)))) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_180_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_single_block_CTR_encrypt_gmult_fu_180_ap_ready)) then 
                    ap_reg_grp_single_block_CTR_encrypt_gmult_fu_180_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond_fu_430_p2))) then 
                i_1_reg_92 <= i_9_fu_436_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(((ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_103_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_110_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_117_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_124_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_131_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_138_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_145_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_152_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_159_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_166_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_173_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_180_ap_done))))) then 
                i_1_reg_92 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_reg_81_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                i_reg_81 <= i_8_reg_516;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond2_fu_211_p2 = ap_const_lv1_0))) then 
                i_reg_81 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_reg_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = exitcond_fu_430_p2)))) then 
                j_reg_70 <= j_2_reg_502;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_70 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                col_0_s_fu_34 <= col_3_5_fu_330_p3;
                col_1_s_fu_38 <= col_3_4_fu_322_p3;
                col_2_s_fu_42 <= col_3_1_fu_306_p3;
                col_3_s_fu_46 <= col_3_fu_290_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_8_reg_516 <= i_8_fu_233_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                j_2_reg_502 <= j_2_fu_217_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(((ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_103_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_110_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_117_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_124_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_131_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_138_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_145_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_152_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_159_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_166_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_173_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_180_ap_done))))) then
                res_0_reg_561 <= res_0_fu_370_p2;
                res_1_reg_566 <= res_1_fu_388_p2;
                res_2_reg_571 <= res_2_fu_406_p2;
                res_3_reg_576 <= res_3_fu_424_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond1_fu_227_p2))) then
                tmp_11_reg_521 <= tmp_11_fu_239_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond2_fu_211_p2 = ap_const_lv1_0))) then
                    tmp_cast_reg_507(2 downto 0) <= tmp_cast_fu_223_p1(2 downto 0);
            end if;
        end if;
    end process;
    tmp_cast_reg_507(3) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond2_fu_211_p2, exitcond1_fu_227_p2, grp_single_block_CTR_encrypt_gmult_fu_103_ap_done, grp_single_block_CTR_encrypt_gmult_fu_110_ap_done, grp_single_block_CTR_encrypt_gmult_fu_117_ap_done, grp_single_block_CTR_encrypt_gmult_fu_124_ap_done, grp_single_block_CTR_encrypt_gmult_fu_131_ap_done, grp_single_block_CTR_encrypt_gmult_fu_138_ap_done, grp_single_block_CTR_encrypt_gmult_fu_145_ap_done, grp_single_block_CTR_encrypt_gmult_fu_152_ap_done, grp_single_block_CTR_encrypt_gmult_fu_159_ap_done, grp_single_block_CTR_encrypt_gmult_fu_166_ap_done, grp_single_block_CTR_encrypt_gmult_fu_173_ap_done, grp_single_block_CTR_encrypt_gmult_fu_180_ap_done, exitcond_fu_430_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond2_fu_211_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_227_p2))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st5_fsm_4 => 
                if (not(((ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_103_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_110_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_117_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_124_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_131_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_138_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_145_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_152_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_159_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_166_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_173_ap_done) or (ap_const_logic_0 = grp_single_block_CTR_encrypt_gmult_fu_180_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st6_fsm_5 => 
                if ((ap_const_lv1_0 = exitcond_fu_430_p2)) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st2_fsm_1, exitcond2_fu_211_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond2_fu_211_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond2_fu_211_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond2_fu_211_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_136_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_136 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_23_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_23 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_240_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_240 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_43_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_43 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_58_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_58 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_84_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_84 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_23)
    begin
        if (ap_sig_23) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_43)
    begin
        if (ap_sig_43) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_58)
    begin
        if (ap_sig_58) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_240)
    begin
        if (ap_sig_240) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_84)
    begin
        if (ap_sig_84) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_136)
    begin
        if (ap_sig_136) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;

    col_3_1_fu_306_p3 <= 
        col_2_s_fu_42 when (or_cond_fu_276_p2(0) = '1') else 
        newSel2_fu_298_p3;
    col_3_3_fu_314_p3 <= 
        state_q0 when (sel_tmp2_fu_266_p2(0) = '1') else 
        col_1_s_fu_38;
    col_3_4_fu_322_p3 <= 
        col_1_s_fu_38 when (sel_tmp4_fu_271_p2(0) = '1') else 
        col_3_3_fu_314_p3;
    col_3_5_fu_330_p3 <= 
        state_q0 when (sel_tmp4_fu_271_p2(0) = '1') else 
        col_0_s_fu_34;
    col_3_fu_290_p3 <= 
        col_3_s_fu_46 when (or_cond_fu_276_p2(0) = '1') else 
        newSel_fu_282_p3;
    exitcond1_fu_227_p2 <= "1" when (i_reg_81 = ap_const_lv3_4) else "0";
    exitcond2_fu_211_p2 <= "1" when (j_reg_70 = ap_const_lv3_4) else "0";
    exitcond_fu_430_p2 <= "1" when (i_1_reg_92 = ap_const_lv3_4) else "0";
    grp_single_block_CTR_encrypt_gmult_fu_103_ap_start <= ap_reg_grp_single_block_CTR_encrypt_gmult_fu_103_ap_start;
    grp_single_block_CTR_encrypt_gmult_fu_110_ap_start <= ap_reg_grp_single_block_CTR_encrypt_gmult_fu_110_ap_start;
    grp_single_block_CTR_encrypt_gmult_fu_117_ap_start <= ap_reg_grp_single_block_CTR_encrypt_gmult_fu_117_ap_start;
    grp_single_block_CTR_encrypt_gmult_fu_124_ap_start <= ap_reg_grp_single_block_CTR_encrypt_gmult_fu_124_ap_start;
    grp_single_block_CTR_encrypt_gmult_fu_131_ap_start <= ap_reg_grp_single_block_CTR_encrypt_gmult_fu_131_ap_start;
    grp_single_block_CTR_encrypt_gmult_fu_138_ap_start <= ap_reg_grp_single_block_CTR_encrypt_gmult_fu_138_ap_start;
    grp_single_block_CTR_encrypt_gmult_fu_145_ap_start <= ap_reg_grp_single_block_CTR_encrypt_gmult_fu_145_ap_start;
    grp_single_block_CTR_encrypt_gmult_fu_152_ap_start <= ap_reg_grp_single_block_CTR_encrypt_gmult_fu_152_ap_start;
    grp_single_block_CTR_encrypt_gmult_fu_159_ap_start <= ap_reg_grp_single_block_CTR_encrypt_gmult_fu_159_ap_start;
    grp_single_block_CTR_encrypt_gmult_fu_166_ap_start <= ap_reg_grp_single_block_CTR_encrypt_gmult_fu_166_ap_start;
    grp_single_block_CTR_encrypt_gmult_fu_173_ap_start <= ap_reg_grp_single_block_CTR_encrypt_gmult_fu_173_ap_start;
    grp_single_block_CTR_encrypt_gmult_fu_180_ap_start <= ap_reg_grp_single_block_CTR_encrypt_gmult_fu_180_ap_start;
    i_8_fu_233_p2 <= std_logic_vector(unsigned(i_reg_81) + unsigned(ap_const_lv3_1));
    i_9_fu_436_p2 <= std_logic_vector(unsigned(i_1_reg_92) + unsigned(ap_const_lv3_1));
    j_2_fu_217_p2 <= std_logic_vector(unsigned(j_reg_70) + unsigned(ap_const_lv3_1));
    newSel2_fu_298_p3 <= 
        state_q0 when (sel_tmp_fu_261_p2(0) = '1') else 
        col_2_s_fu_42;
    newSel_fu_282_p3 <= 
        col_3_s_fu_46 when (sel_tmp_fu_261_p2(0) = '1') else 
        state_q0;
    or_cond_fu_276_p2 <= (sel_tmp4_fu_271_p2 or sel_tmp2_fu_266_p2);
    res_0_fu_370_p2 <= (tmp2_fu_364_p2 xor tmp_fu_358_p2);
    res_1_fu_388_p2 <= (tmp4_fu_382_p2 xor tmp3_fu_376_p2);
    res_2_fu_406_p2 <= (tmp6_fu_400_p2 xor tmp5_fu_394_p2);
    res_3_fu_424_p2 <= (tmp8_fu_418_p2 xor tmp7_fu_412_p2);
    sel_tmp2_fu_266_p2 <= "1" when (tmp_11_reg_521 = ap_const_lv2_1) else "0";
    sel_tmp4_fu_271_p2 <= "1" when (tmp_11_reg_521 = ap_const_lv2_0) else "0";
    sel_tmp_fu_261_p2 <= "1" when (tmp_11_reg_521 = ap_const_lv2_2) else "0";

    state_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st6_fsm_5, tmp_5_fu_256_p1, tmp_8_fu_470_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            state_address0 <= tmp_8_fu_470_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            state_address0 <= tmp_5_fu_256_p1(4 - 1 downto 0);
        else 
            state_address0 <= "XXXX";
        end if; 
    end process;


    state_ce0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            state_ce0 <= ap_const_logic_1;
        else 
            state_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    state_d0 <= tmp_9_fu_446_p6;

    state_we0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, exitcond_fu_430_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond_fu_430_p2)))) then 
            state_we0 <= ap_const_logic_1;
        else 
            state_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp2_fu_364_p2 <= (grp_single_block_CTR_encrypt_gmult_fu_117_ap_return xor grp_single_block_CTR_encrypt_gmult_fu_124_ap_return);
    tmp3_fu_376_p2 <= (grp_single_block_CTR_encrypt_gmult_fu_138_ap_return xor grp_single_block_CTR_encrypt_gmult_fu_131_ap_return);
    tmp4_fu_382_p2 <= (grp_single_block_CTR_encrypt_gmult_fu_145_ap_return xor grp_single_block_CTR_encrypt_gmult_fu_124_ap_return);
    tmp5_fu_394_p2 <= (grp_single_block_CTR_encrypt_gmult_fu_152_ap_return xor grp_single_block_CTR_encrypt_gmult_fu_131_ap_return);
    tmp6_fu_400_p2 <= (grp_single_block_CTR_encrypt_gmult_fu_159_ap_return xor grp_single_block_CTR_encrypt_gmult_fu_166_ap_return);
    tmp7_fu_412_p2 <= (grp_single_block_CTR_encrypt_gmult_fu_152_ap_return xor grp_single_block_CTR_encrypt_gmult_fu_173_ap_return);
    tmp8_fu_418_p2 <= (grp_single_block_CTR_encrypt_gmult_fu_117_ap_return xor grp_single_block_CTR_encrypt_gmult_fu_180_ap_return);
    tmp_11_fu_239_p1 <= i_reg_81(2 - 1 downto 0);
    tmp_12_fu_442_p1 <= i_1_reg_92(2 - 1 downto 0);
    tmp_4_fu_251_p2 <= std_logic_vector(unsigned(tmp_cast_reg_507) + unsigned(tmp_s_fu_243_p3));
    tmp_5_fu_256_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_251_p2),64));
    tmp_6_fu_457_p3 <= (tmp_12_fu_442_p1 & ap_const_lv2_0);
    tmp_7_fu_465_p2 <= std_logic_vector(unsigned(tmp_cast_reg_507) + unsigned(tmp_6_fu_457_p3));
    tmp_8_fu_470_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_465_p2),64));
    tmp_cast_fu_223_p1 <= std_logic_vector(resize(unsigned(j_reg_70),4));
    tmp_fu_358_p2 <= (grp_single_block_CTR_encrypt_gmult_fu_110_ap_return xor grp_single_block_CTR_encrypt_gmult_fu_103_ap_return);
    tmp_s_fu_243_p3 <= (tmp_11_fu_239_p1 & ap_const_lv2_0);
end behav;

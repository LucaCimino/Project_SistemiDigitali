

================================================================
== Vivado HLS Report for 'single_block_CTR_encrypt'
================================================================
* Date:           Sun Feb 04 10:32:39 2024

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        AES_CTR
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      6.50|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+--------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  |  Trip  |          |
        | Loop Name| min | max |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------+-----+-----+----------+-----------+-----------+--------+----------+
        |- Loop 1  |   16|   16|         1|          -|          -|      16|    no    |
        |- Loop 2  |   32|   32|         2|          -|          -|      16|    no    |
        |- Loop 3  |   32|   32|         2|          -|          -|      16|    no    |
        |- Loop 4  |    2|   33|         2|          -|          -| 1 ~ 16 |    no    |
        +----------+-----+-----+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 11
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond1)
	2  / (!exitcond1)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / (!exitcond2)
	8  / (exitcond2)
7 --> 
	6  / true
8 --> 
	9  / (!exitcond)
	10  / (exitcond)
9 --> 
	8  / true
10 --> 
	11  / true
11 --> 
	10  / (!tmp_3 & tmp_6)
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_12 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i8* %i_plaintext_V_data), !map !19

ST_1: stg_13 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i1* %i_plaintext_V_user_V), !map !23

ST_1: stg_14 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i1* %i_plaintext_V_last_V), !map !27

ST_1: stg_15 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i8* %cipher_V_data), !map !31

ST_1: stg_16 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %cipher_V_user_V), !map !35

ST_1: stg_17 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i1* %cipher_V_last_V), !map !39

ST_1: stg_18 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecTopModule([25 x i8]* @single_block_CTR_encrypt_str) nounwind

ST_1: plaintext [1/1] 0.00ns
:7  %plaintext = alloca [16 x i8], align 16

ST_1: cipher_nonce [1/1] 0.00ns
:8  %cipher_nonce = alloca [16 x i8], align 16

ST_1: out [1/1] 0.00ns
:9  %out = alloca [16 x i8], align 16

ST_1: w [1/1] 0.00ns
:10  %w = alloca [176 x i8], align 16

ST_1: stg_23 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecInterface(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V, [5 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_24 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecInterface(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, [5 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_1: stg_25 [1/1] 1.57ns
:13  br label %1


 <State 2>: 2.39ns
ST_2: i [1/1] 0.00ns
:0  %i = phi i5 [ 0, %0 ], [ %i_4, %2 ]

ST_2: exitcond1 [1/1] 1.91ns
:1  %exitcond1 = icmp eq i5 %i, -16

ST_2: empty [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_2: i_4 [1/1] 1.72ns
:3  %i_4 = add i5 %i, 1

ST_2: stg_30 [1/1] 0.00ns
:4  br i1 %exitcond1, label %3, label %2

ST_2: empty_10 [1/1] 0.00ns
:0  %empty_10 = call { i8, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P(i8* %i_plaintext_V_data, i1* %i_plaintext_V_user_V, i1* %i_plaintext_V_last_V)

ST_2: tmp_data [1/1] 0.00ns
:1  %tmp_data = extractvalue { i8, i1, i1 } %empty_10, 0

ST_2: tmp [1/1] 0.00ns
:2  %tmp = zext i5 %i to i64

ST_2: plaintext_addr [1/1] 0.00ns
:3  %plaintext_addr = getelementptr inbounds [16 x i8]* %plaintext, i64 0, i64 %tmp

ST_2: stg_35 [1/1] 2.39ns
:4  store i8 %tmp_data, i8* %plaintext_addr, align 1

ST_2: stg_36 [1/1] 0.00ns
:5  br label %1

ST_2: stg_37 [2/2] 0.00ns
:0  call fastcc void @single_block_CTR_encrypt_aes_key_expansion([176 x i8]* %w)


 <State 3>: 0.00ns
ST_3: stg_38 [1/2] 0.00ns
:0  call fastcc void @single_block_CTR_encrypt_aes_key_expansion([176 x i8]* %w)


 <State 4>: 0.00ns
ST_4: stg_39 [2/2] 0.00ns
:1  call fastcc void @single_block_CTR_encrypt_aes_cipher([16 x i8]* @nonce, [16 x i8]* %cipher_nonce, [176 x i8]* %w)


 <State 5>: 1.57ns
ST_5: stg_40 [1/2] 0.00ns
:1  call fastcc void @single_block_CTR_encrypt_aes_cipher([16 x i8]* @nonce, [16 x i8]* %cipher_nonce, [176 x i8]* %w)

ST_5: stg_41 [1/1] 1.57ns
:2  br label %4


 <State 6>: 3.48ns
ST_6: i_1 [1/1] 0.00ns
:0  %i_1 = phi i5 [ 0, %3 ], [ %i_5, %5 ]

ST_6: exitcond2 [1/1] 1.91ns
:1  %exitcond2 = icmp eq i5 %i_1, -16

ST_6: empty_11 [1/1] 0.00ns
:2  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_6: i_5 [1/1] 1.72ns
:3  %i_5 = add i5 %i_1, 1

ST_6: stg_46 [1/1] 1.57ns
:4  br i1 %exitcond2, label %.preheader30, label %5

ST_6: tmp_s [1/1] 0.00ns
:0  %tmp_s = zext i5 %i_1 to i64

ST_6: plaintext_addr_1 [1/1] 0.00ns
:1  %plaintext_addr_1 = getelementptr inbounds [16 x i8]* %plaintext, i64 0, i64 %tmp_s

ST_6: plaintext_load [2/2] 2.39ns
:2  %plaintext_load = load i8* %plaintext_addr_1, align 1

ST_6: cipher_nonce_addr [1/1] 0.00ns
:3  %cipher_nonce_addr = getelementptr inbounds [16 x i8]* %cipher_nonce, i64 0, i64 %tmp_s

ST_6: cipher_nonce_load [2/2] 2.39ns
:4  %cipher_nonce_load = load i8* %cipher_nonce_addr, align 1


 <State 7>: 6.15ns
ST_7: plaintext_load [1/2] 2.39ns
:2  %plaintext_load = load i8* %plaintext_addr_1, align 1

ST_7: cipher_nonce_load [1/2] 2.39ns
:4  %cipher_nonce_load = load i8* %cipher_nonce_addr, align 1

ST_7: tmp_1 [1/1] 1.37ns
:5  %tmp_1 = xor i8 %cipher_nonce_load, %plaintext_load

ST_7: out_addr [1/1] 0.00ns
:6  %out_addr = getelementptr inbounds [16 x i8]* %out, i64 0, i64 %tmp_s

ST_7: stg_56 [1/1] 2.39ns
:7  store i8 %tmp_1, i8* %out_addr, align 1

ST_7: stg_57 [1/1] 0.00ns
:8  br label %4


 <State 8>: 3.48ns
ST_8: i_2 [1/1] 0.00ns
.preheader30:0  %i_2 = phi i5 [ %i_6, %6 ], [ 0, %4 ]

ST_8: exitcond [1/1] 1.91ns
.preheader30:1  %exitcond = icmp eq i5 %i_2, -16

ST_8: empty_12 [1/1] 0.00ns
.preheader30:2  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_8: i_6 [1/1] 1.72ns
.preheader30:3  %i_6 = add i5 %i_2, 1

ST_8: stg_62 [1/1] 1.57ns
.preheader30:4  br i1 %exitcond, label %.preheader, label %6

ST_8: tmp_2 [1/1] 0.00ns
:0  %tmp_2 = zext i5 %i_2 to i64

ST_8: out_addr_1 [1/1] 0.00ns
:1  %out_addr_1 = getelementptr inbounds [16 x i8]* %out, i64 0, i64 %tmp_2

ST_8: tmp_data_1 [2/2] 2.39ns
:2  %tmp_data_1 = load i8* %out_addr_1, align 1

ST_8: tmp_last_V [1/1] 1.91ns
:3  %tmp_last_V = icmp eq i5 %i_2, 15


 <State 9>: 2.39ns
ST_9: tmp_data_1 [1/2] 2.39ns
:2  %tmp_data_1 = load i8* %out_addr_1, align 1

ST_9: stg_68 [1/1] 0.00ns
:4  call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P(i8* %cipher_V_data, i1* %cipher_V_user_V, i1* %cipher_V_last_V, i8 %tmp_data_1, i1 true, i1 %tmp_last_V)

ST_9: stg_69 [1/1] 0.00ns
:5  br label %.preheader30


 <State 10>: 2.39ns
ST_10: i_3 [1/1] 0.00ns
.preheader:0  %i_3 = phi i5 [ %i_7, %9 ], [ 15, %.preheader30 ]

ST_10: i_3_cast [1/1] 0.00ns
.preheader:1  %i_3_cast = sext i5 %i_3 to i32

ST_10: tmp_3 [1/1] 0.00ns
.preheader:2  %tmp_3 = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %i_3, i32 4)

ST_10: empty_13 [1/1] 0.00ns
.preheader:3  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16, i64 8)

ST_10: stg_74 [1/1] 0.00ns
.preheader:4  br i1 %tmp_3, label %.loopexit, label %7

ST_10: tmp_5 [1/1] 0.00ns
:0  %tmp_5 = zext i32 %i_3_cast to i64

ST_10: nonce_addr [1/1] 0.00ns
:1  %nonce_addr = getelementptr inbounds [16 x i8]* @nonce, i64 0, i64 %tmp_5

ST_10: nonce_load [2/2] 2.39ns
:2  %nonce_load = load i8* %nonce_addr, align 1


 <State 11>: 6.50ns
ST_11: nonce_load [1/2] 2.39ns
:2  %nonce_load = load i8* %nonce_addr, align 1

ST_11: tmp_6 [1/1] 2.00ns
:3  %tmp_6 = icmp eq i8 %nonce_load, -1

ST_11: stg_80 [1/1] 0.00ns
:4  br i1 %tmp_6, label %9, label %8

ST_11: stg_81 [1/1] 2.39ns
:0  store i8 0, i8* %nonce_addr, align 1

ST_11: i_7 [1/1] 1.72ns
:1  %i_7 = add i5 %i_3, -1

ST_11: stg_83 [1/1] 0.00ns
:2  br label %.preheader

ST_11: tmp_7 [1/1] 1.72ns
:0  %tmp_7 = add i8 %nonce_load, 1

ST_11: stg_85 [1/1] 2.39ns
:1  store i8 %tmp_7, i8* %nonce_addr, align 1

ST_11: stg_86 [1/1] 0.00ns
:2  br label %.loopexit

ST_11: stg_87 [1/1] 0.00ns
.loopexit:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
